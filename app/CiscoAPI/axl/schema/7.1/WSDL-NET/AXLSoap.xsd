<?xml version="1.0" encoding="UTF-8"?>
<!-- Autogenerated file -->
<xsd:schema targetNamespace="http://www.cisco.com/AXL/API/7.1" xmlns:axlapi="http://www.cisco.com/AXL/API/7.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0">
  <!-- axl.xsd -->
  <!-- *********************************************************** -->
  <!-- Device Family                                               -->
  <!-- *********************************************************** -->
  <xsd:complexType name="XAARGroup">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String32" />
      <xsd:element name="relatedGroups" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="relatedGroup" type="axlapi:XAARGroupRelationship" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XAARGroupRelationship">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="AARGroup_From" type="axlapi:XAARGroup" />
        <xsd:element name="GroupNameFrom" type="axlapi:String100" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="AARGroup_To" type="axlapi:XAARGroup" />
        <xsd:element name="GroupNameTo" type="axlapi:String100" />
      </xsd:choice>
      <xsd:element name="prefixDigit" type="axlapi:String32" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XApplicationUser">
    <xsd:sequence>
      <xsd:element name="userid" type="xsd:string" />
      <xsd:element name="password" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="passwordCredentials" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="pwdCredPolicy">
                <xsd:complexType>
                  <xsd:complexContent>
                    <xsd:extension base="axlapi:XCredentialPolicy">
                      <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
                    </xsd:extension>
                  </xsd:complexContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="pwdCredPolicyName" type="axlapi:String50" />
            </xsd:choice>
            <xsd:element name="pwdCredUserCantChange" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pwdCredUserMustChange" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pwdCredTimeChanged" type="xsd:string" minOccurs="0" />
            <xsd:element name="pwdCredTimeAdminLockout" type="xsd:string" minOccurs="0" />
            <xsd:element name="pwdCredLockedByAdministrator" type="xsd:boolean" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="presenceGroup" type="axlapi:XPresenceGroup" nillable="false" minOccurs="0">
        </xsd:element>
        <xsd:element name="presenceGroupName" type="axlapi:String50" nillable="false" minOccurs="0" />
      </xsd:choice>
      <xsd:element name="acceptPresenceSubscription" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="allowReplaceHeader" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="isStandard" type="xsd:boolean" minOccurs="0">
      </xsd:element>
      <xsd:element name="associatedDevices" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="device" type="axlapi:String50" minOccurs="0" maxOccurs="unbounded">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="associatedGroups" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="userGroup" minOccurs="0" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:sequence minOccurs="0">
                  <xsd:element name="name" type="axlapi:String100" nillable="false" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="userRoles" nillable="true" minOccurs="0">
                    <xsd:complexType>
                      <xsd:sequence minOccurs="0">
                        <xsd:element name="userRole" nillable="true" minOccurs="0" maxOccurs="unbounded">
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="axlapi:String100">
                                <xsd:attribute name="uuid" type="axlapi:XUUID" />
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="uuid" type="axlapi:XUUID" />
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="associatedCAPFProfiles" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="CAPFProfileInstanceId" type="axlapi:String128" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDevice">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:UniqueString128">
      </xsd:element>
      <xsd:element name="description" type="axlapi:String128" minOccurs="0">
      </xsd:element>
      <xsd:sequence>
        <xsd:choice>
          <xsd:element name="product" type="xsd:string">
            <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="productInfo" type="axlapi:XProductInfo">
          </xsd:element>
        </xsd:choice>
        <xsd:choice>
          <xsd:element name="model" type="xsd:string">
            <!--This field is of the type axl:XModel in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="modelInfo" type="axlapi:XModelInfo">
          </xsd:element>
        </xsd:choice>
        <xsd:element name="class" type="xsd:string">
          <!--This field is of the type axl:XClass in AXLEnums.xsd-->
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="protocol" type="xsd:string">
          <!--This field is of the type axl:XDeviceProtocol in AXLEnums.xsd-->
        </xsd:element>
        <xsd:element name="protocolSide" type="xsd:string">
          <!--This field is of the type axl:XProtocolSide in AXLEnums.xsd-->
        </xsd:element>
      </xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="devicePool" type="axlapi:XDevicePool">
        </xsd:element>
        <xsd:element name="devicePoolName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="commonDeviceConfig" type="axlapi:XCommonDeviceConfig" nillable="true">
        </xsd:element>
        <xsd:element name="commonDeviceConfigName" type="axlapi:UniqueString50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="commonPhoneConfig" type="axlapi:XCommonPhoneConfig" nillable="false">
        </xsd:element>
        <xsd:element name="commonPhoneConfigName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="networkLocation" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="location" type="axlapi:XLocation">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="mediaResourceList" type="axlapi:XMediaResourceList">
        </xsd:element>
        <xsd:element name="mediaResourceListName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="automatedAlternateRoutingCSS" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50">
        </xsd:element>
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="aarNeighborhood" type="axlapi:XAARNeighborhood">
        </xsd:element>
        <xsd:element name="aarNeighborhoodName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="loadInformation" type="axlapi:XLoadInformation" minOccurs="0">
      </xsd:element>
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0" />
      <xsd:element name="versionStamp" type="axlapi:String128" minOccurs="0">
      </xsd:element>
      <xsd:element name="traceFlag" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="securityProfile">
          <xsd:complexType>
            <xsd:attribute name="uuid" type="axlapi:XUUID" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="securityProfileName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="sipProfile">
          <xsd:complexType>
            <xsd:attribute name="uuid" type="axlapi:XUUID" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="sipProfileName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
        </xsd:element>
        <xsd:element name="geoLocationName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter">
        </xsd:element>
        <xsd:element name="geoLocationFilterName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="sendGeoLocation" type="xsd:boolean" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="ctiid" type="xsd:positiveInteger">
    </xsd:attribute>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XVoiceMailPort">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence minOccurs="0">
          <xsd:element name="line" type="axlapi:XLine">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XCTIRoutePoint">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence minOccurs="0">
          <xsd:element name="userLocale" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded">
                </xsd:element>
                <xsd:element name="lineId" type="axlapi:XLineId" maxOccurs="unbounded" />
                <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded">
                </xsd:element>
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XConferenceBridge">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:UniqueName128" nillable="false" />
      <xsd:element name="description" type="axlapi:String128" nillable="true" minOccurs="0" />
      <xsd:element name="product" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
      <xsd:choice>
        <xsd:element name="devicePool" type="axlapi:XDevicePool" nillable="false">
        </xsd:element>
        <xsd:element name="devicePoolName" type="axlapi:UniqueString50" nillable="false" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="location" type="axlapi:XLocation" nillable="false">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String50" default="Hub_None" nillable="false" />
      </xsd:choice>
      <xsd:element name="subUnit" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="loadInformation" type="axlapi:XLoadInformation" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:choice minOccurs="0">
        <xsd:element name="securityProfile" type="axlapi:XUUID" nillable="false">
        </xsd:element>
        <xsd:element name="securityProfileName" type="axlapi:UniqueString50" nillable="false" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XPilotHuntGroup">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="pilotPoint">
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="axlapi:XPilotPoint">
                <xsd:attribute name="uuid" type="axlapi:XUUID" />
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="pilotPointName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XPilotHuntGroupMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XPilotHuntGroupMember">
    <xsd:sequence>
      <xsd:element name="sortOrder" type="xsd:nonNegativeInteger" />
      <xsd:choice>
        <xsd:element name="deviceMemberInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="alwaysRoute" type="xsd:boolean" minOccurs="0" />
              <xsd:element name="dirn" type="axlapi:XNPDirectoryNumber">
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="userMemberInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="lineIndex" type="xsd:nonNegativeInteger" />
              <xsd:element name="pilotUserId" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XPilotUser">
    <xsd:sequence minOccurs="0">
      <xsd:element name="userId" type="axlapi:String255" nillable="false" />
      <xsd:element name="password" type="xsd:string" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XGateway">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="cdpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
              </xsd:element>
              <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
            </xsd:choice>
            <xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          </xsd:sequence>
          <xsd:sequence>
            <xsd:element name="packetCaptureMode" type="xsd:string" default="None" minOccurs="0" />
            <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
            <xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0" />
            <xsd:element name="GClearEnable" type="xsd:boolean" default="false" minOccurs="0" />
          </xsd:sequence>
          <xsd:element name="enableProtectedFacilityIE" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationNationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationNationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationInternationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationInternationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationSubscriberCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationSubscriberCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="nationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="internationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="subscriberStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformNationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformInternationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformUnknownCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformSubscriberCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XAnalogGateway">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XGateway">
        <xsd:sequence>
          <xsd:element name="country" type="xsd:string" nillable="true" minOccurs="0">
            <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="maxPorts" type="xsd:positiveInteger">
          </xsd:element>
          <xsd:element name="ports" type="axlapi:XAnalogPortList">
          </xsd:element>
          <xsd:element name="trunkSelectionOrder" type="xsd:string">
            <!--This field is of the type axl:XTrunkSelectionOrder in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XDigitalGateway" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XGateway">
        <xsd:sequence minOccurs="0">
          <xsd:element name="country" type="xsd:string" nillable="true" minOccurs="0" />
          <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
          <xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="trunkSelectionOrder" type="xsd:string" minOccurs="0">
            <!--This field is of the type axl:XTrunkSelectionOrder in AXLEnums.xsd-->
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XPresenceGroup">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String128" />
      <xsd:element name="description" type="axlapi:String128" minOccurs="0" />
      <xsd:element name="matrix" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XMatrix in AXLEnums.xsd-->
      <xsd:element name="isStandard" type="xsd:boolean" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XIPPhone">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:UniqueString128">
      </xsd:element>
      <xsd:element name="description" type="axlapi:String128" minOccurs="0">
      </xsd:element>
      <xsd:sequence>
        <xsd:choice>
          <xsd:element name="product" type="xsd:string">
            <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="productInfo" type="axlapi:XProductInfo">
          </xsd:element>
        </xsd:choice>
        <xsd:choice>
          <xsd:element name="model" type="xsd:string">
            <!--This field is of the type axl:XModel in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="modelInfo" type="axlapi:XModelInfo">
          </xsd:element>
        </xsd:choice>
        <xsd:element name="class" type="xsd:string">
          <!--This field is of the type axl:XClass in AXLEnums.xsd-->
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="protocol" type="xsd:string">
          <!--This field is of the type axl:XDeviceProtocol in AXLEnums.xsd-->
        </xsd:element>
        <xsd:element name="protocolSide" type="xsd:string">
          <!--This field is of the type axl:XProtocolSide in AXLEnums.xsd-->
        </xsd:element>
      </xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="devicePool" type="axlapi:XDevicePool">
        </xsd:element>
        <xsd:element name="devicePoolName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="commonDeviceConfig" type="axlapi:XCommonDeviceConfig" nillable="true">
        </xsd:element>
        <xsd:element name="commonDeviceConfigName" type="axlapi:UniqueString50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="commonPhoneConfig" type="axlapi:XCommonPhoneConfig" nillable="false">
        </xsd:element>
        <xsd:element name="commonPhoneConfigName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="networkLocation" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="location" type="axlapi:XLocation">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="mediaResourceList" type="axlapi:XMediaResourceList">
        </xsd:element>
        <xsd:element name="mediaResourceListName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="automatedAlternateRoutingCSS" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50">
        </xsd:element>
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="aarNeighborhood" type="axlapi:XAARNeighborhood">
        </xsd:element>
        <xsd:element name="aarNeighborhoodName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="loadInformation" type="axlapi:XLoadInformation" minOccurs="0">
      </xsd:element>
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0" />
      <xsd:element name="versionStamp" type="axlapi:String128" minOccurs="0">
      </xsd:element>
      <xsd:element name="traceFlag" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="securityProfile">
          <xsd:complexType>
            <xsd:attribute name="uuid" type="axlapi:XUUID" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="securityProfileName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="sipProfile">
          <xsd:complexType>
            <xsd:attribute name="uuid" type="axlapi:XUUID" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="sipProfileName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
        </xsd:element>
        <xsd:element name="geoLocationName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter">
        </xsd:element>
        <xsd:element name="geoLocationFilterName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="sendGeoLocation" type="xsd:boolean" minOccurs="0">
      </xsd:element>
      <xsd:element name="blfDirectedCallParks" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="blfDirectedCallPark" minOccurs="0" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:complexContent>
                  <xsd:extension base="axlapi:XBLFDirectedCallPark">
                    <xsd:attribute name="index" type="xsd:positiveInteger" />
                  </xsd:extension>
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addOnModules" nillable="true" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="addOnModule" type="axlapi:XAddOnModule" minOccurs="0" maxOccurs="2" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="userLocale" type="xsd:string" nillable="true" minOccurs="0" />
      <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
      <xsd:element name="networkLocale" type="xsd:string" nillable="true" minOccurs="0" />
      <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
      <xsd:element name="idleTimeout" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
      <xsd:element name="authenticationURL" type="xsd:anyURI" nillable="true" minOccurs="0" />
      <xsd:element name="directoryURL" type="xsd:anyURI" nillable="true" minOccurs="0" />
      <xsd:element name="idleURL" type="xsd:anyURI" nillable="true" minOccurs="0" />
      <xsd:element name="informationURL" type="xsd:anyURI" nillable="true" minOccurs="0" />
      <xsd:element name="messagesURL" type="xsd:anyURI" nillable="true" minOccurs="0" />
      <xsd:element name="proxyServerURL" type="xsd:anyURI" nillable="true" minOccurs="0" />
      <xsd:element name="servicesURL" type="xsd:anyURI" nillable="true" minOccurs="0" />
      <xsd:element name="services" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="service" type="axlapi:XSubscribedService" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="softkeyTemplate" type="axlapi:XSoftkeyTemplate">
        </xsd:element>
        <xsd:element name="softkeyTemplateName" type="xsd:string" />
      </xsd:choice>
      <xsd:element name="loginUserId" type="axlapi:String255" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:choice>
          <xsd:element name="defaultProfile" type="axlapi:XProfile" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="defaultProfileName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:choice>
        <xsd:element name="enableExtensionMobility" type="xsd:boolean">
        </xsd:element>
        <xsd:choice minOccurs="0">
          <xsd:element name="currentProfile" type="axlapi:XProfile" nillable="false">
          </xsd:element>
          <xsd:element name="currentProfileName" type="axlapi:String50" nillable="false">
          </xsd:element>
        </xsd:choice>
        <xsd:element name="loginTime" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
        </xsd:element>
        <xsd:element name="loginDuration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="currentConfig" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
            <xsd:choice minOccurs="0">
              <xsd:element name="phoneTemplate" type="axlapi:XPhoneTemplate">
              </xsd:element>
              <xsd:element name="phoneTemplateName" type="axlapi:String50" nillable="false" />
            </xsd:choice>
            <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
            </xsd:element>
            <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
              <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
            </xsd:element>
            <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
              <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
            </xsd:element>
            <xsd:choice minOccurs="0">
              <xsd:element name="softkeyTemplate" type="axlapi:XSoftkeyTemplate">
              </xsd:element>
              <xsd:element name="softkeyTemplateName" type="xsd:string" />
            </xsd:choice>
            <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
            </xsd:element>
            <xsd:element name="singleButtonBarge" type="axlapi:XBarge" nillable="false" minOccurs="0">
            </xsd:element>
            <xsd:element name="joinAcrossLines" type="xsd:string" nillable="false" minOccurs="0">
              <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
            </xsd:element>
            <xsd:element name="callInfoPrivacyStatus" type="xsd:string" nillable="false" minOccurs="0" />
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
            <xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0" />
            <xsd:element name="dndRingSetting" type="xsd:string" nillable="true" minOccurs="0" />
            <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
            <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0" />
            <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
            <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
            <xsd:element name="logMissedCalls" type="xsd:boolean" default="true" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="singleButtonBarge" type="axlapi:XBarge" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="joinAcrossLines" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="builtInBridgeStatus" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="callInfoPrivacyStatus" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="hlogStatus" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="ownerUserId" type="axlapi:String255" nillable="true" minOccurs="0" />
      <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="packetCaptureMode" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
      <xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="subscribeCallingSearchSpace" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="rerouteCallingSearchSpace" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="rerouteCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:element name="allowCtiControlFlag" type="xsd:boolean" default="true" nillable="true" minOccurs="0" />
      <xsd:choice>
        <xsd:element name="presenceGroup" type="axlapi:XPresenceGroup" nillable="false">
        </xsd:element>
        <xsd:element name="presenceGroupName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="requireDTMFReception" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="RFC2833Disabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="phoneLoadName" type="axlapi:String32" minOccurs="0" />
      <xsd:element name="certificateOperation" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XCertificateOperation in AXLEnums.xsd-->
      <xsd:sequence minOccurs="0">
        <xsd:element name="authenticationMode" type="axlapi:XAuthenticationMode" minOccurs="0">
        </xsd:element>
        <xsd:element name="keySize" type="axlapi:XKeySize" minOccurs="0">
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="authenticationString" type="axlapi:String128" minOccurs="0">
      </xsd:element>
      <xsd:element name="certificateStatus" type="xsd:string" minOccurs="0">
        <!--This field is of the type axl:XCertificateStatus in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="upgradeFinishTime" type="xsd:string" minOccurs="0" />
      <xsd:element name="deviceMobilityMode" type="xsd:string" default="Default" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="roamingDevicePoolName" type="axlapi:UniqueString50" minOccurs="0">
      </xsd:element>
      <xsd:element name="remoteDevice" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="dndRingSetting" type="xsd:string" nillable="true" minOccurs="0">
        <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="isActive" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="isDualMode" type="xsd:boolean" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="mobilityUser" type="axlapi:XUUID" nillable="true">
        </xsd:element>
        <xsd:element name="mobilityUserIdName" type="axlapi:String50" nillable="true">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="phoneSuite" type="axlapi:XPhonePersonalization" default="Default" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="phoneServiceDisplay" type="axlapi:XPhoneServiceDisplay" minOccurs="0" />
      <xsd:element name="isProtected" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="mobileSmartClientProfile" type="axlapi:XMobileSmartClientProfile">
        </xsd:element>
        <xsd:element name="mobileSmartClientProfileName" type="axlapi:String128" />
      </xsd:choice>
      <xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="mtpPreferredCodec" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XSIPCodec in AXLEnums.xsd-->
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="dialRules" type="axlapi:XSIPDialRules" nillable="false">
        </xsd:element>
        <xsd:element name="dialRulesName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="sshUser" type="axlapi:String50" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="sshPwd" type="axlapi:String255" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="digestUser" type="axlapi:String255" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="outboundCallRollover" type="axlapi:XOutboundCallRollover" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="associatedPC" type="axlapi:String50" minOccurs="0">
      </xsd:element>
      <xsd:element name="lines" minOccurs="0">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
            <xsd:element name="lineId" type="axlapi:XLineId" maxOccurs="unbounded">
            </xsd:element>
            <xsd:element name="lineLabel" type="xsd:string" maxOccurs="unbounded">
            </xsd:element>
            <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded">
            </xsd:element>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="numberOfButtons" type="xsd:positiveInteger" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="phoneTemplate" type="axlapi:XPhoneTemplate">
        </xsd:element>
        <xsd:element name="phoneTemplateName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="speeddials" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="speeddial" type="axlapi:XSpeeddial" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="busyLampFields" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="busyLampField" type="axlapi:XBusyLampField" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="primaryPhone" type="axlapi:XDevice">
        </xsd:element>
        <xsd:element name="primaryPhoneName" type="axlapi:String128" nillable="true" />
      </xsd:choice>
      <xsd:element name="ringSettingIdleBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="ringSettingBusyBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
    </xsd:sequence>
    <xsd:attribute name="ctiid" type="xsd:positiveInteger">
    </xsd:attribute>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XBusyLampField">
    <xsd:sequence>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element name="blfDirn" type="axlapi:XDirectoryNumber" />
          <xsd:element name="routePartition" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
        <xsd:element name="blfDest" type="xsd:nonNegativeInteger" />
      </xsd:choice>
      <xsd:element name="label" type="xsd:string" minOccurs="0" />
      <xsd:element name="asciiLabel" type="axlapi:String50" nillable="true" minOccurs="0" />
      <xsd:element name="associatedBLFSDFeatures" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="feature" type="axlapi:XBLFSDOption" minOccurs="0" maxOccurs="unbounded">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="index" type="xsd:positiveInteger" />
  </xsd:complexType>
  <xsd:complexType name="XBLFDirectedCallPark">
    <xsd:sequence>
      <xsd:element name="label" type="axlapi:String50" nillable="true" minOccurs="0" />
      <xsd:choice>
        <xsd:element name="directedCallParkId" type="axlapi:XUUID" />
        <xsd:element name="directedCallParkDNAndPartition">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="dnPattern" type="axlapi:XDirectoryNumber" nillable="false" />
              <xsd:choice minOccurs="0">
                <xsd:element name="routePartition" type="axlapi:XRoutePartition" nillable="true" minOccurs="0">
                </xsd:element>
                <xsd:element name="routePartitionName" type="axlapi:UniqueName50" nillable="true" minOccurs="0" />
              </xsd:choice>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="labelAscii" type="axlapi:String50" nillable="true" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XPhone">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence minOccurs="0">
          <xsd:element name="associatedPC" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
                <xsd:element name="lineId" type="axlapi:XLineId" maxOccurs="unbounded">
                </xsd:element>
                <xsd:element name="lineLabel" type="xsd:string" maxOccurs="unbounded">
                </xsd:element>
                <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded">
                </xsd:element>
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="numberOfButtons" type="xsd:positiveInteger" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="phoneTemplate" type="axlapi:XPhoneTemplate">
            </xsd:element>
            <xsd:element name="phoneTemplateName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:element name="speeddials" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="speeddial" type="axlapi:XSpeeddial" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="busyLampFields" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="busyLampField" type="axlapi:XBusyLampField" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="primaryPhone" type="axlapi:XDevice">
            </xsd:element>
            <xsd:element name="primaryPhoneName" type="axlapi:String128" nillable="true" />
          </xsd:choice>
          <xsd:element name="ringSettingIdleBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="ringSettingBusyBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XProfile">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence>
          <xsd:element name="deviceProfile" type="xsd:string" />
          <!--This field is of the type axl:XDeviceProfile in AXLEnums.xsd-->
          <xsd:element name="loginUserid" type="xsd:string" />
          <xsd:element name="loginTime" type="xsd:string" />
          <xsd:element name="loginDuration" type="xsd:nonNegativeInteger" />
          <xsd:element name="allowHoteling" type="xsd:boolean" />
          <xsd:element name="defaultProfileId" type="axlapi:XUUID" minOccurs="0" />
          <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="phoneServiceDisplay" type="axlapi:XPhoneServiceDisplay" minOccurs="0" />
          <xsd:element name="requirePKIAuthForHTTPS" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XBRIGateway">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDigitalGateway">
        <xsd:sequence>
          <xsd:element name="acceptInboundRDNIS" type="xsd:boolean" />
          <xsd:element name="briProtocol" type="xsd:string" />
          <!--This field is of the type axl:XBriProtocol in AXLEnums.xsd-->
          <xsd:element name="calledPlan" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPri" type="xsd:string" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="callerIDDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
          <xsd:element name="callingPartySelection" type="xsd:string" />
          <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
          <xsd:element name="callingPlan" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPri" type="xsd:string" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="chanIE" type="xsd:nonNegativeInteger">
          </xsd:element>
          <xsd:element name="clockReference" type="xsd:string" />
          <!--This field is of the type axl:XClockReference in AXLEnums.xsd-->
          <xsd:element name="csuParam" type="xsd:string" />
          <!--This field is of the type axl:XCSUParam in AXLEnums.xsd-->
          <xsd:element name="dChannelEnable" type="xsd:boolean" />
          <xsd:element name="direction" type="xsd:boolean" />
          <xsd:element name="displayIE" type="xsd:boolean" />
          <xsd:element name="encode" type="xsd:string" />
          <!--This field is of the type axl:XEncode in AXLEnums.xsd-->
          <xsd:element name="fdlChannel" type="xsd:string" />
          <!--This field is of the type axl:XFDLChannel in AXLEnums.xsd-->
          <xsd:element name="firstDelay" type="xsd:nonNegativeInteger" />
          <xsd:element name="framing" type="xsd:string" />
          <!--This field is of the type axl:XFraming in AXLEnums.xsd-->
          <xsd:element name="intraDelay" type="xsd:nonNegativeInteger" />
          <xsd:element name="numberIE" type="xsd:boolean" />
          <xsd:element name="numDigits" type="xsd:nonNegativeInteger">
          </xsd:element>
          <xsd:element name="prefix" type="xsd:string" minOccurs="0" />
          <xsd:element name="presentationBit" type="xsd:string" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="sendRestart" type="xsd:boolean" />
          <xsd:element name="setupNonISDNPI" type="xsd:boolean" />
          <xsd:element name="sigDigits" type="xsd:boolean">
          </xsd:element>
          <xsd:element name="stableIn4" type="xsd:boolean" />
          <xsd:element name="statusPoll" type="xsd:boolean" />
          <xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" />
          <xsd:element name="trunkPadRx" type="xsd:string" />
          <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
          <xsd:element name="trunkPadTx" type="xsd:string" />
          <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
          <xsd:element name="trunkLevel" type="xsd:string" />
          <!--This field is of the type axl:XTrunkLevel in AXLEnums.xsd-->
          <xsd:element name="yellowAlarm" type="xsd:string" />
          <!--This field is of the type axl:XYellowAlarm in AXLEnums.xsd-->
          <xsd:element name="zeroSuppression" type="xsd:string" />
          <!--This field is of the type axl:XZeroSuppression in AXLEnums.xsd-->
          <xsd:element name="nationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="internationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="subscriberPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XPRIGateway">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDigitalGateway">
        <xsd:sequence>
          <xsd:element name="acceptInboundRDNIS" type="xsd:boolean" />
          <xsd:element name="calledPlan" type="xsd:string" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPri" type="xsd:string" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="callerIDDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
          <xsd:element name="callingPartySelection" type="xsd:string" />
          <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
          <xsd:element name="callingPlan" type="xsd:string" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPri" type="xsd:string" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="chanIE" type="xsd:nonNegativeInteger" />
          <xsd:element name="clockReference" type="xsd:string" />
          <!--This field is of the type axl:XClockReference in AXLEnums.xsd-->
          <xsd:element name="csuParam" type="xsd:string" />
          <!--This field is of the type axl:XCSUParam in AXLEnums.xsd-->
          <xsd:element name="dChannelEnable" type="xsd:boolean" />
          <xsd:element name="direction" type="xsd:boolean" />
          <xsd:element name="displayIE" type="xsd:boolean" />
          <xsd:element name="encode" type="xsd:string" />
          <!--This field is of the type axl:XEncode in AXLEnums.xsd-->
          <xsd:element name="fdlChannel" type="xsd:string" />
          <!--This field is of the type axl:XFDLChannel in AXLEnums.xsd-->
          <xsd:element name="firstDelay" type="xsd:nonNegativeInteger" />
          <xsd:element name="interfaceId">
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:nonNegativeInteger">
                  <xsd:attribute name="present" type="xsd:boolean" />
                </xsd:extension>
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="intraDelay" type="xsd:nonNegativeInteger" />
          <xsd:element name="mcdnEnable" type="xsd:boolean" />
          <xsd:element name="numberIE" type="xsd:boolean" />
          <xsd:element name="numDigits" type="xsd:nonNegativeInteger">
          </xsd:element>
          <xsd:element name="passingPrecedenceLevelThroughUUIE" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="prefix" type="xsd:string" minOccurs="0" />
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedPBX" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XConnectedPBX in AXLEnums.xsd-->
          <xsd:element name="priProtocol" type="xsd:string" />
          <!--This field is of the type axl:XPriProtocol in AXLEnums.xsd-->
          <xsd:element name="securityAccessLevel" type="xsd:nonNegativeInteger" minOccurs="0" />
          <xsd:element name="sendCallingNameInFacilityIE" type="xsd:boolean" />
          <xsd:element name="sendEXLeadingCharInDispIE" type="xsd:boolean" />
          <xsd:element name="sendRestart" type="xsd:boolean" />
          <xsd:element name="setupNonISDNPI" type="xsd:boolean" />
          <xsd:element name="sigDigits" type="xsd:boolean">
          </xsd:element>
          <xsd:element name="span" type="xsd:nonNegativeInteger" />
          <xsd:element name="statusPoll" type="xsd:boolean" />
          <xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" />
          <xsd:element name="trunkPadRx" type="xsd:string" />
          <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
          <xsd:element name="trunkPadTx" type="xsd:string" />
          <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
          <xsd:element name="trunkLevel" type="xsd:string" />
          <!--This field is of the type axl:XTrunkLevel in AXLEnums.xsd-->
          <xsd:element name="yellowAlarm" type="xsd:string" />
          <!--This field is of the type axl:XYellowAlarm in AXLEnums.xsd-->
          <xsd:element name="zeroSuppression" type="xsd:string" />
          <!--This field is of the type axl:XZeroSuppression in AXLEnums.xsd-->
          <xsd:element name="sMDIBasePort" type="xsd:positiveInteger" />
          <xsd:element name="protocolProfile91NameOnly" type="xsd:boolean" />
          <xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="nationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="internationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="subscriberPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="ASN1ROSEOIDEncoding" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="QSIGVariant" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XServerDevice">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence minOccurs="0">
          <xsd:choice>
            <xsd:element name="processNode" type="axlapi:XProcessNode" />
            <xsd:element name="processNodeId" type="axlapi:XUUID" />
            <xsd:element name="processNodeName" type="xsd:Name" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XT1Gateway">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDigitalGateway">
        <xsd:sequence>
          <xsd:element name="clockReference" type="xsd:string" />
          <!--This field is of the type axl:XClockReference in AXLEnums.xsd-->
          <xsd:element name="csuParam" type="xsd:string" />
          <!--This field is of the type axl:XCSUParam in AXLEnums.xsd-->
          <xsd:element name="digitSending" type="xsd:string" />
          <!--This field is of the type axl:XDigitSending in AXLEnums.xsd-->
          <xsd:element name="encode" type="xsd:string" />
          <!--This field is of the type axl:XEncode in AXLEnums.xsd-->
          <xsd:element name="fdlChannel" type="xsd:string" />
          <!--This field is of the type axl:XFDLChannel in AXLEnums.xsd-->
          <xsd:element name="maxPorts" type="xsd:positiveInteger">
          </xsd:element>
          <xsd:element name="ports" type="axlapi:XT1PortList" />
          <xsd:element name="yellowAlarm" type="xsd:string" />
          <!--This field is of the type axl:XYellowAlarm in AXLEnums.xsd-->
          <xsd:element name="zeroSuppression" type="xsd:string" />
          <!--This field is of the type axl:XZeroSuppression in AXLEnums.xsd-->
          <xsd:element name="sMDIBasePort" type="xsd:positiveInteger" />
          <xsd:element name="handleDTMFPrecedenceSignals" type="xsd:boolean" />
          <xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XH323Device">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence minOccurs="0">
          <xsd:choice minOccurs="0">
            <xsd:element name="cdpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
            </xsd:element>
            <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="packetCaptureMode" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
          <xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" default="60" nillable="true" minOccurs="0" />
          <xsd:element name="srtpAllowed" type="xsd:boolean" default="false" nillable="true" minOccurs="0" />
          <xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="subscribeCallingSearchSpace" type="axlapi:XCallingSearchSpace">
            </xsd:element>
            <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationNationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationNationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationInternationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationInternationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationSubscriberCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationSubscriberCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="waitForFarEndH245TerminalSet" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="mtpPreferredCodec" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XSIPCodec in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="callerIdDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="callingPartySelection" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
          <xsd:element name="callingLineIdPresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="displayIEDelivery" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="redirectOutboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="redirectInboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="enableInboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="enableOutboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="codecForOutboundFaststart" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XMediaPayload in AXLEnums.xsd-->
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XH323Phone">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XH323Device">
        <xsd:sequence minOccurs="0">
          <xsd:element name="hlogStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="ownerUserId" type="axlapi:String255" nillable="true" minOccurs="0" />
          <xsd:element name="signalingPort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="gatekeeperInfo" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="gatekeeperName" type="axlapi:String50" nillable="false" />
                  <xsd:element name="gatekeeper" type="axlapi:XGatekeeper" nillable="false">
                  </xsd:element>
                </xsd:choice>
                <xsd:element name="e164" type="axlapi:String50" nillable="false" />
                <xsd:element name="technologyPrefix" type="axlapi:String50" nillable="false" />
                <xsd:element name="zone" type="axlapi:String50" nillable="false" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="line" type="axlapi:XLine" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XH323Gateway">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XH323Device">
        <xsd:sequence minOccurs="0">
          <xsd:element name="AllowH235PassThrough" type="xsd:boolean" default="false" minOccurs="0" />
          <xsd:element name="tunneledProtocol" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XTunneledProtocol in AXLEnums.xsd-->
          <xsd:element name="ASN1ROSEOIDEncoding" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="QSIGVariant" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="nationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="internationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="subscriberPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="significantDigits" nillable="false" minOccurs="0">
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:nonNegativeInteger">
                  <xsd:attribute name="enable" type="xsd:boolean" use="optional" />
                </xsd:extension>
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="prefixDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="calledPartyIENumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="callingPartyIENumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="calledNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="licensedCapacity" type="xsd:nonNegativeInteger" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="nationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="internationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="subscriberStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformNationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformInternationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformUnknownCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformSubscriberCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XH323Trunk">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XH323Gateway">
        <xsd:sequence>
          <xsd:element name="pathReplacementSupport" type="xsd:boolean" default="false" minOccurs="0" />
          <xsd:choice>
            <xsd:element name="gatekeeperInfo">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:choice>
                    <xsd:element name="gatekeeperName" type="axlapi:String50" nillable="false" />
                    <xsd:element name="gatekeeper" type="axlapi:XGatekeeper" nillable="false">
                    </xsd:element>
                  </xsd:choice>
                  <xsd:element name="terminal" type="xsd:string" nillable="false" />
                  <!--This field is of the type axl:XTerminal in AXLEnums.xsd-->
                  <xsd:element name="technologyPrefix" type="axlapi:String50" minOccurs="0" />
                  <xsd:element name="zone" type="axlapi:String50" minOccurs="0" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="remoteServerInfo">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="server1" type="axlapi:String255" nillable="false" />
                  <xsd:element name="server2" type="axlapi:String255" minOccurs="0" />
                  <xsd:element name="server3" type="axlapi:String255" minOccurs="0" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:choice>
          <xsd:sequence minOccurs="0">
            <xsd:element name="ictPassingPrecedenceLevelThroughUUIE" type="xsd:boolean" nillable="false" minOccurs="0" />
            <xsd:element name="ictSecurityAccessLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
            </xsd:element>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XSIPTrunk">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:element name="cdpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
            </xsd:element>
            <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="subscribeCallingSearchSpace" type="axlapi:XCallingSearchSpace">
            </xsd:element>
            <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="rerouteCallingSearchSpace" type="axlapi:XCallingSearchSpace">
            </xsd:element>
            <xsd:element name="rerouteCallingSearchSpaceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="referCallingSearchSpace" type="axlapi:XCallingSearchSpace">
            </xsd:element>
            <xsd:element name="referCallingSearchSpaceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="destinationaddress" type="axlapi:String50">
          </xsd:element>
          <xsd:element name="destAddrIsSRV" type="xsd:boolean" default="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="destinationport" type="xsd:integer" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="tkSipCodec" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XSIPCodec in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="sigDigits" minOccurs="0">
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:nonNegativeInteger">
                  <xsd:attribute name="enable" type="xsd:boolean" use="optional" />
                </xsd:extension>
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="connectedNamePresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedPartyIdPresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingPartySelection" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
          <xsd:element name="callingname" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingLineIdPresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="prefixDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="callerName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="callerIdDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="acceptOutboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="srtpAllowed" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="srtpFallbackAllowed" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="isPaiEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="sipPrivacy" type="axlapi:XSipPrivacy" default="Default" nillable="false" minOccurs="0" />
          <xsd:element name="isRpidEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="sipAssertedType" type="axlapi:XSipAssertedType" default="Default" nillable="false" minOccurs="0" />
          <xsd:element name="licensedCapacity" type="xsd:nonNegativeInteger" default="0" minOccurs="0" />
          <xsd:element name="destinationAddressIPv6" type="xsd:string" minOccurs="0" />
          <xsd:element name="DTMFSignalingMethod" type="axlapi:XDTMFSignaling" minOccurs="0" />
          <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformUnknownCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XRecordingProfile">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:choice minOccurs="0">
        <xsd:element name="recordingCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="recordingCSSName" type="axlapi:UniqueName50" nillable="true" />
      </xsd:choice>
      <xsd:element name="recorderDestination" type="xsd:string" nillable="false" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XGatekeeper">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String128" nillable="false">
      </xsd:element>
      <xsd:element name="description" type="axlapi:String128" minOccurs="0">
      </xsd:element>
      <xsd:element name="rrqTimeToLive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="retryTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="enableDevice" type="xsd:boolean" nillable="false" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XRemoteDestinationProfile">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:string">
      </xsd:element>
      <xsd:element name="description" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:sequence>
        <xsd:choice>
          <xsd:element name="product" type="xsd:string">
            <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="productInfo" type="axlapi:XProductInfo">
          </xsd:element>
        </xsd:choice>
        <xsd:choice>
          <xsd:element name="model" type="xsd:string">
            <!--This field is of the type axl:XModel in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="modelInfo" type="axlapi:XModelInfo">
          </xsd:element>
        </xsd:choice>
        <xsd:element name="class" type="xsd:string">
          <!--This field is of the type axl:XClass in AXLEnums.xsd-->
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="protocol" type="xsd:string">
          <!--This field is of the type axl:XDeviceProtocol in AXLEnums.xsd-->
        </xsd:element>
        <xsd:element name="protocolSide" type="xsd:string">
          <!--This field is of the type axl:XProtocolSide in AXLEnums.xsd-->
        </xsd:element>
      </xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="devicePool" type="axlapi:XDevicePool">
        </xsd:element>
        <xsd:element name="devicePoolName" type="xsd:string" />
      </xsd:choice>
      <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
      <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
      <xsd:element name="lines" minOccurs="0">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
            <xsd:element name="lineId" type="axlapi:XLineId" maxOccurs="unbounded">
            </xsd:element>
            <xsd:element name="lineLabel" type="xsd:string" maxOccurs="unbounded">
            </xsd:element>
            <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded">
            </xsd:element>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="callInfoPrivacyStatus" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="userId" type="xsd:string" nillable="false" />
      <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="rerouteCallingSearchSpace" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="rerouteCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="primaryPhone" type="axlapi:XDevice">
        </xsd:element>
        <xsd:element name="primaryPhoneName" type="axlapi:String128" nillable="false" />
      </xsd:choice>
      <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="mobileSmartClientProfile" type="axlapi:XMobileSmartClientProfile">
        </xsd:element>
        <xsd:element name="mobileSmartClientProfileName" type="axlapi:String128" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="ctiid" type="xsd:positiveInteger" />
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <!-- *********************************************************** -->
  <!-- Complex Types                                    -->
  <!-- *********************************************************** -->
  <xsd:complexType name="XAARNeighborhood">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XAddOnModule">
    <xsd:sequence minOccurs="0">
      <xsd:element name="loadInformation" type="axlapi:XLoadInformation">
      </xsd:element>
      <xsd:element name="model" type="xsd:string">
        <!--This field is of the type axl:XModel in AXLEnums.xsd-->
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="index" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XAnalogPortList">
    <xsd:sequence minOccurs="0">
      <xsd:element name="port" type="axlapi:XAnalogPort" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XAnalogPort">
    <xsd:sequence minOccurs="0">
      <xsd:element name="attendantDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
      <xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="callerIdDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
      <xsd:element name="callerIdEnable" type="xsd:boolean" />
      <xsd:element name="callingPartySelection" type="xsd:string" />
      <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
      <xsd:element name="digitSending" type="xsd:string" />
      <!--This field is of the type axl:XDigitSending in AXLEnums.xsd-->
      <xsd:element name="expectedDigits" type="xsd:nonNegativeInteger" />
      <xsd:element name="finalDigits">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:nonNegativeInteger">
              <xsd:attribute name="significant" type="xsd:boolean" use="optional" />
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="line" type="axlapi:XLine" />
        <xsd:element name="lineId" type="axlapi:XLineId" />
      </xsd:choice>
      <xsd:element name="prefixDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
      <xsd:element name="presentationBit" type="xsd:string" />
      <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
      <xsd:element name="silenceSuppressionThreshold" type="xsd:string" />
      <!--This field is of the type axl:XSilenceSuppressionThreshold in AXLEnums.xsd-->
      <xsd:element name="smdiPortNumber" type="xsd:nonNegativeInteger">
      </xsd:element>
      <xsd:element name="startDialProtocol" type="axlapi:XStartDialProtocol" />
      <xsd:element name="timers">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="timer" type="xsd:nonNegativeInteger" maxOccurs="6" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="trunk" type="xsd:string" />
      <!--This field is of the type axl:XTrunk in AXLEnums.xsd-->
      <xsd:element name="trunkDirection" type="xsd:string" />
      <!--This field is of the type axl:XTrunkDirection in AXLEnums.xsd-->
      <xsd:element name="trunkLevel" type="xsd:string" />
      <!--This field is of the type axl:XTrunkLevel in AXLEnums.xsd-->
      <xsd:element name="trunkPadRx" type="xsd:string" />
      <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
      <xsd:element name="trunkPadTx" type="xsd:string" />
      <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="portNumber" type="xsd:positiveInteger" use="required" />
  </xsd:complexType>
  <xsd:complexType name="XButton">
    <xsd:sequence minOccurs="0">
      <xsd:element name="feature" type="xsd:string">
        <!--This field is of the type axl:XFeature in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="label" type="axlapi:String50" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="buttonNumber" type="xsd:positiveInteger" />
  </xsd:complexType>
  <xsd:complexType name="XCallForwardInfo">
    <xsd:sequence>
      <xsd:element name="forwardToVoiceMail" type="xsd:boolean" default="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="secondaryCallingSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="secondaryCallingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="destination" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="duration" type="xsd:int" nillable="false" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XHuntForwardInfo">
    <xsd:sequence>
      <xsd:element name="usePersonalPreferences" type="xsd:boolean" default="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="destination" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="maxHuntduration" type="xsd:integer" nillable="false" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XCallingSearchSpace">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:UniqueName50" />
      <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="clause" type="axlapi:String1024" minOccurs="0">
      </xsd:element>
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
      </xsd:element>
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XCallingSearchSpaceMember" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="partitionUsage" type="axlapi:XPartitionUsage" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XCallingSearchSpaceMember">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="routePartition" type="axlapi:XRoutePartition">
        </xsd:element>
        <xsd:element name="routePartitionId" type="axlapi:XUUID">
        </xsd:element>
        <xsd:element name="routePartitionName" type="axlapi:String50" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="index" type="xsd:positiveInteger" />
  </xsd:complexType>
  <xsd:complexType name="XCallerFilterListMember">
    <xsd:sequence minOccurs="0">
      <xsd:element name="dnMask" type="axlapi:String50" />
      <xsd:element name="callerFilterMask" type="axlapi:XCallerFilterMask" nillable="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XCallerFilterList">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" nillable="false" />
      <xsd:element name="description" type="axlapi:String128" nillable="true" minOccurs="0" />
      <xsd:element name="isAllowedType" type="xsd:boolean" />
      <xsd:choice minOccurs="0">
        <xsd:element name="endUser" type="axlapi:XUUID" />
        <xsd:element name="endUserIdName" type="axlapi:UniqueName50" />
      </xsd:choice>
      <xsd:element name="members" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XCallerFilterListMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XCallManager">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50">
      </xsd:element>
      <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="autoRegistration" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="startDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
            <xsd:element name="endDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
            <xsd:element name="nextDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
            <xsd:choice minOccurs="0">
              <xsd:element name="routePartition" type="axlapi:XRoutePartition">
              </xsd:element>
              <xsd:element name="routePartitionName" type="axlapi:String50" />
            </xsd:choice>
            <xsd:element name="e164Mask" type="axlapi:String50" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ports">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="ethernetPhonePort" type="xsd:nonNegativeInteger" />
            <xsd:element name="mgcpPorts">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="listen" type="xsd:nonNegativeInteger">
                  </xsd:element>
                  <xsd:element name="keepAlive" type="xsd:nonNegativeInteger">
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice>
        <xsd:element name="processNode" type="axlapi:XProcessNode">
        </xsd:element>
        <xsd:element name="processNodeName" type="axlapi:String255" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="ctiid" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XCallManagerGroup">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="tftpDefault" type="xsd:boolean" minOccurs="0">
      </xsd:element>
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XCallManagerMember" maxOccurs="unbounded">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XCallManagerMember">
    <xsd:choice>
      <xsd:element name="callManager" type="axlapi:XCallManager">
      </xsd:element>
      <xsd:element name="callManagerName" type="axlapi:String50" />
    </xsd:choice>
    <xsd:attribute name="priority" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XCMCInfo">
    <xsd:sequence minOccurs="0">
      <xsd:element name="code" type="axlapi:String16" />
      <xsd:element name="description" type="axlapi:String50" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XCallManagerMemberId">
    <xsd:simpleContent>
      <xsd:extension base="axlapi:XUUID">
        <xsd:attribute name="priority" type="xsd:nonNegativeInteger" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="XCCMVersion">
    <xsd:sequence>
      <xsd:element name="version" type="axlapi:String50" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XCredentialPolicy">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:String255" />
      <xsd:element name="noLimitForFailedLogon" type="xsd:boolean" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="failedLogon" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="resetFailedLogonAttempts" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="administratorMustUnlock" type="xsd:boolean" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="lockoutDuration" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="credChangeDuration" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="neverExpires" type="xsd:boolean" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="credExpiresAfter" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="minCredLength" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="prevCredStoredNum" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="inactiveDaysAllowed" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="expiryWarningDays" type="xsd:nonNegativeInteger" nillable="false">
      </xsd:element>
      <xsd:element name="trivialCredCheck" type="xsd:boolean" nillable="false" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XDateTimeSetting">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="dateTemplate" type="axlapi:String50" />
      <xsd:element name="timeZone" type="xsd:string" />
      <!--This field is of the type axl:XTimeZone in AXLEnums.xsd-->
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDevicePool">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:UniqueString50">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="autoSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="autoSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="dateTimeSetting" type="axlapi:XDateTimeSetting">
        </xsd:element>
        <xsd:element name="dateTimeSettingName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup">
        </xsd:element>
        <xsd:element name="callManagerGroupName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="mediaResourceList" type="axlapi:XMediaResourceList">
        </xsd:element>
        <xsd:element name="mediaResourceListName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="region" type="axlapi:XRegion">
        </xsd:element>
        <xsd:element name="regionName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="networkLocale" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="srstInfo" type="axlapi:XSRSTInfo" />
        <xsd:element name="srstName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="connectionMonitorDuration" type="xsd:int" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="automatedAlternateRoutingCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" nillable="true">
        </xsd:element>
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="aarNeighborhood" type="axlapi:XAARNeighborhood" nillable="true">
        </xsd:element>
        <xsd:element name="aarNeighborhoodName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="location" type="axlapi:XLocation" nillable="true">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="mobilityCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="mobilityCSSName" type="axlapi:String50" nillable="true">
        </xsd:element>
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="physicalLocation" type="axlapi:XPhysicalLocation" nillable="true">
        </xsd:element>
        <xsd:element name="physicalLocationName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="deviceMobilityGroup" type="axlapi:XDeviceMobilityGroup" nillable="true">
        </xsd:element>
        <xsd:element name="deviceMobilityGroupName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:element name="revertPriority" type="axlapi:XRevertPriority" minOccurs="0">
      </xsd:element>
      <xsd:element name="singleButtonBarge" type="axlapi:XBarge" default="Off" nillable="false" minOccurs="0" />
      <xsd:element name="joinAcrossLines" type="xsd:string" default="Off" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cdpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="localRouteGroup" type="axlapi:XRouteGroup" nillable="true">
        </xsd:element>
        <xsd:element name="localRouteGroupName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:element name="nationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
      <xsd:element name="internationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
      <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
      <xsd:element name="subscriberPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
        </xsd:element>
        <xsd:element name="geoLocationName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter">
        </xsd:element>
        <xsd:element name="geoLocationFilterName" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationNationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
        <xsd:element name="cgpnTransformationNationalCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationInternationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
        <xsd:element name="cgpnTransformationInternationalCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
        <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="cgpnTransformationSubscriberCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
        <xsd:element name="cgpnTransformationSubscriberCSSName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
      <xsd:element name="nationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
      <xsd:element name="internationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
      <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
      <xsd:element name="subscriberStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XCommonDeviceConfig">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:UniqueString50" nillable="false" />
      <xsd:choice minOccurs="0">
        <xsd:element name="softkeyTemplate" type="axlapi:XSoftkeyTemplate" nillable="true">
        </xsd:element>
        <xsd:element name="softkeyTemplateName" type="xsd:string" nillable="true" />
      </xsd:choice>
      <xsd:element name="userLocale" type="xsd:string" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Off" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="IPAddressingMode" type="axlapi:XIPAddressingMode" minOccurs="0" />
      <xsd:element name="IPAddressingModePreferenceControl" type="axlapi:XIPAddressingModePrefControl" minOccurs="0" />
      <xsd:element name="allowAutoConfigurationForPhones" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XCommonPhoneConfig">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:UniqueString50" nillable="false" />
      <xsd:element name="description" type="axlapi:String128" nillable="false" minOccurs="0" />
      <xsd:element name="unlockPwd" type="axlapi:String50" nillable="false" minOccurs="0" />
      <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0" />
      <xsd:element name="dndAlertingType" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
      <xsd:element name="backgroundImage" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:element name="phonePersonalization" type="axlapi:XPhonePersonalization" nillable="false" minOccurs="0" />
      <xsd:element name="phoneServiceDisplay" type="axlapi:XPhoneServiceDisplay" nillable="false" minOccurs="0" />
      <xsd:element name="sshUserId" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="sshPwd" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XDevicePoolDeviceMobility">
    <xsd:choice>
      <xsd:element name="devicePool" type="axlapi:XDevicePool">
      </xsd:element>
      <xsd:element name="devicePoolName">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="axlapi:String50">
              <xsd:attribute name="uuid" type="axlapi:XUUID" />
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDeviceMobility">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string" nillable="false" />
      <xsd:element name="subNet" type="xsd:string" nillable="false" />
      <xsd:element name="subNetMaskSz" type="xsd:nonNegativeInteger" nillable="false" />
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XDevicePoolDeviceMobility" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XPhysicalLocation">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string" nillable="false" />
      <xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDeviceMobilityGroup">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string" nillable="false" />
      <xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDHCPServer">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="processNode" type="axlapi:XProcessNode" />
        <xsd:element name="processNodeName" type="axlapi:String128" />
      </xsd:choice>
      <xsd:element name="primaryDNSipAddress" type="xsd:string" minOccurs="0" />
      <xsd:element name="secondaryDNSipAddress" type="xsd:string" minOccurs="0" />
      <xsd:element name="primaryTFTPServeripAddress" type="xsd:string" minOccurs="0" />
      <xsd:element name="secondaryTFTPServeripAddress" type="xsd:string" minOccurs="0" />
      <xsd:element name="bootstrapServeripAddress" type="xsd:string" minOccurs="0" />
      <xsd:element name="domainName" type="xsd:string" minOccurs="0" />
      <xsd:element name="tftpServerName" type="xsd:string" minOccurs="0" />
      <xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" default="0">
      </xsd:element>
      <xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" default="0">
      </xsd:element>
      <xsd:element name="renewalTime" type="xsd:nonNegativeInteger" default="0">
      </xsd:element>
      <xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" default="0">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XDHCPSubnet">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="dhcpServer" type="axlapi:XDHCPServer">
        </xsd:element>
        <xsd:element name="dhcpServerName" type="xsd:string" />
      </xsd:choice>
      <xsd:element name="subnetIPAddress" type="xsd:string" />
      <xsd:element name="primaryStartIPAddress" type="xsd:string" />
      <xsd:element name="primaryEndIPAddress" type="xsd:string" />
      <xsd:element name="secondaryStartIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="secondaryEndIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="primaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="secondaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="subnetMask" type="xsd:string" />
      <xsd:element name="domainName" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="primaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="secondaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="tftpServerName" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="primaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="secondaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="bootstrapServerIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="renewalTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDialPlan">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDialPlanTag">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="dialPlan" type="axlapi:XDialPlan" />
        <xsd:element name="dialPlanName" type="xsd:string" />
      </xsd:choice>
      <xsd:element name="operator" type="axlapi:XOperator" />
      <xsd:element name="suppressFromRouteFilter" type="xsd:boolean" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDigitDiscardInstruction">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="clause" type="axlapi:String1024" minOccurs="0" />
      <xsd:choice>
        <xsd:element name="dialPlan" type="axlapi:XDialPlan">
        </xsd:element>
        <xsd:element name="dialPlanName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="digitAnalysisId" type="xsd:nonNegativeInteger" minOccurs="0">
      </xsd:element>
      <xsd:element name="members" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XDigitDiscardInstructionMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDigitDiscardInstructionMember">
    <xsd:choice>
      <xsd:element name="dialPlanTagName" type="axlapi:String50" nillable="false" />
      <xsd:element name="dialPlanTag" type="axlapi:XDialPlanTag">
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XDisplayInstance">
    <xsd:sequence>
      <xsd:element name="name">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:pattern value="xmldi://\S+" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="version" type="xsd:string" />
      <xsd:element name="author" type="xsd:string" minOccurs="0" />
      <xsd:element name="description" type="xsd:string" minOccurs="0" />
      <xsd:choice>
        <xsd:sequence>
          <xsd:element name="uses" type="xsd:anyURI">
          </xsd:element>
          <xsd:element name="parameters" type="axlapi:XDisplayInstanceParameters" minOccurs="0" />
        </xsd:sequence>
        <xsd:element name="parameters" type="axlapi:XDisplayInstanceParameters" />
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XDisplayInstanceParameter">
    <xsd:sequence>
      <xsd:element name="name">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:pattern value="[a-zA-Z0-9][a-zA-Z0-9\.\-_]*" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" type="xsd:string" />
      <xsd:element name="moduleComponentName" type="xsd:string" minOccurs="0" />
      <xsd:element name="nonClusterWideJustification" type="xsd:string" minOccurs="0" />
      <xsd:element name="displayName" type="xsd:normalizedString" minOccurs="0">
      </xsd:element>
      <xsd:element name="onChangeShowMessage" type="xsd:string" minOccurs="0" />
      <xsd:element name="unit" type="xsd:string" minOccurs="0" />
      <xsd:element name="hidden" type="xsd:boolean" fixed="true" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="index" type="xsd:nonNegativeInteger" default="0" minOccurs="0">
      </xsd:element>
      <xsd:element name="readOnly" type="xsd:boolean" fixed="true" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="label" type="xsd:string">
        </xsd:element>
        <xsd:element name="paramGroup">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="param" type="axlapi:XDisplayInstanceParameter" maxOccurs="unbounded" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="rules">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="rule" type="xsd:anyURI" maxOccurs="unbounded">
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XDisplayInstanceParameters">
    <xsd:sequence>
      <xsd:element name="param" type="axlapi:XDisplayInstanceParameter" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XFACInfo">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="code" type="axlapi:String16" />
      <xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XLicenseCapabilities">
    <xsd:sequence>
      <xsd:element name="userid" type="xsd:string" />
      <xsd:element name="enableUPS" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="enableUPC" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XLine">
    <xsd:sequence minOccurs="0">
      <xsd:element name="label" type="axlapi:String50" nillable="true" />
      <xsd:element name="asciiLabel" type="axlapi:String50" nillable="true" minOccurs="0" />
      <xsd:element name="display" type="axlapi:String50" nillable="true" />
      <xsd:choice>
        <xsd:element name="dirn" type="axlapi:XNPDirectoryNumber">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="ringSetting" type="xsd:string" default="Ring" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
      <xsd:element name="consecutiveRingSetting" type="xsd:string" default="Use System Default" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="ringSettingIdlePickupAlert" type="xsd:string" default="Use System Default" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="ringSettingActivePickupAlert" type="xsd:string" default="Use System Default" nillable="false" minOccurs="0">
        <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="displayASCII" type="axlapi:String50" nillable="true" minOccurs="0" />
      <xsd:element name="e164Mask" type="axlapi:String255" nillable="true" minOccurs="0" />
      <xsd:element name="dialPlanWizardId" type="xsd:nonNegativeInteger" minOccurs="0" />
      <xsd:element name="mwlPolicy" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XMWLPolicy in AXLEnums.xsd-->
      <xsd:element name="maxNumCalls" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
      <xsd:element name="busyTrigger" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
      <xsd:element name="callInfoDisplay">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="callerName" type="xsd:boolean" default="true" minOccurs="0" />
            <xsd:element name="callerNumber" type="xsd:boolean" default="false" minOccurs="0" />
            <xsd:element name="redirectedNumber" type="xsd:boolean" default="false" minOccurs="0" />
            <xsd:element name="dialedNumber" type="xsd:boolean" default="true" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="recordingProfile" type="axlapi:XRecordingProfile">
        </xsd:element>
        <xsd:element name="recordingProfileName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="monitoringCSS" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="monitoringCSSName" type="axlapi:UniqueName50" />
      </xsd:choice>
      <xsd:element name="recordingFlag" type="axlapi:XRecordingFlag" nillable="true" minOccurs="0" />
      <xsd:element name="audibleMWI" type="xsd:string" nillable="true" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="speedDial" type="xsd:string" minOccurs="0" />
      <xsd:element name="partitionUsage" type="axlapi:XPartitionUsage" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="associatedEndusers" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="enduser" type="axlapi:XEnduserMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="partyEntranceTone" type="xsd:string" default="Default" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="missedCallLogging" type="xsd:boolean" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="index" type="xsd:positiveInteger">
    </xsd:attribute>
    <xsd:attribute name="ctiid" type="xsd:nonNegativeInteger">
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="XEnduserMember">
    <xsd:sequence>
      <xsd:element name="userId" type="xsd:string" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XLineId">
    <xsd:simpleContent>
      <xsd:extension base="axlapi:XUUID">
        <xsd:attribute name="index" type="xsd:nonNegativeInteger" />
        <xsd:attribute name="ctiid" type="xsd:nonNegativeInteger" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="XLoadInformation">
    <xsd:simpleContent>
      <xsd:extension base="axlapi:String255">
        <xsd:attribute name="special" type="xsd:boolean" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="XPolicyRelationship">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="geoLocationPolicyA" type="axlapi:XGeoLocationPolicy">
        </xsd:element>
        <xsd:element name="geoLocationPolicyAName" />
      </xsd:choice>
      <xsd:element name="geoLocationDeviceA" type="axlapi:XGeoLocationDevice" />
      <xsd:choice>
        <xsd:element name="geoLocationPolicyB" type="axlapi:XGeoLocationPolicy" />
        <xsd:element name="geoLocationPolicyBName" />
      </xsd:choice>
      <xsd:element name="geoLocationDeviceB" type="axlapi:XGeoLocationDevice" />
      <xsd:element name="logicalPartitionPolicy" type="axlapi:XLogicalPartitionPolicy" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XGeoLocation">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="country" type="xsd:string" minOccurs="0" />
      <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="nationalSubDivision" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="district" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="communityName" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="cityDivision" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="neighbourhood" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="street" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="leadingStreetDirection" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="trailingStreetSuffix" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="streetSuffix" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="houseNumber" type="axlapi:String16" minOccurs="0" />
      <xsd:element name="houseNumberSuffix" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="landmark" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="location" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="floor" type="axlapi:String16" minOccurs="0" />
      <xsd:element name="occupantName" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="postalCode" type="axlapi:String100" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XGeoLocationPolicy">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="country" type="xsd:string" minOccurs="0" />
      <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="nationalSubDivision" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="district" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="communityName" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="cityDivision" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="neighbourhood" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="street" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="leadingStreetDirection" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="trailingStreetSuffix" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="streetSuffix" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="houseNumber" type="axlapi:String16" minOccurs="0" />
      <xsd:element name="houseNumberSuffix" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="landmark" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="location" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="floor" type="axlapi:String16" minOccurs="0" />
      <xsd:element name="occupantName" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="postalCode" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="relatedPolicies" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="relatedPolicy" type="axlapi:XPolicyRelationship" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XGeoLocationFilter">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="useCountry" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useNationalSubDivision" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useDistrict" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useCommunityName" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useCityDivision" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useNeighbourhood" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useStreet" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useLeadingStreetDirection" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useTrailingStreetSuffix" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useStreetSuffix" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useHouseNumber" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useHouseNumberSuffix" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useLandmark" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useLocation" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useFloor" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="useOccupantName" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="usePostalCode" type="xsd:boolean" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XLocation">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="id" type="xsd:int">
      </xsd:element>
      <xsd:element name="kbits" type="xsd:nonNegativeInteger" />
      <xsd:element name="videoKbits" type="xsd:nonNegativeInteger" nillable="false" />
      <xsd:element name="relatedLocations" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="relatedLocation" type="axlapi:XLocationRelationship" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XLocationRelationship">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="location" type="axlapi:XLocation">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="rsvpSetting" type="axlapi:XMatrixValue" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XMediaResourceGroupMember">
    <xsd:choice>
      <xsd:element name="device" type="axlapi:XDevice">
      </xsd:element>
      <xsd:element name="deviceName" type="axlapi:String50" nillable="false" />
    </xsd:choice>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XMediaResourceGroup">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="multicast" type="xsd:boolean" />
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XMediaResourceGroupMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XMediaResourceList">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="clause" type="axlapi:String1024" minOccurs="0">
      </xsd:element>
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XMediaResourceListMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XMediaResourceListMember">
    <xsd:choice>
      <xsd:element name="mediaResourceGroup" type="axlapi:XMediaResourceGroup">
      </xsd:element>
      <xsd:element name="mediaResourceGroupName" type="axlapi:String50" />
    </xsd:choice>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="order" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XMGCP">
    <xsd:sequence minOccurs="0">
      <xsd:element name="domainName" type="axlapi:String64" />
      <xsd:element name="description" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="product" type="xsd:string" />
      <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
      <xsd:element name="model" type="xsd:string">
        <!--This field is of the type axl:XModel in AXLEnums.xsd-->
      </xsd:element>
      <xsd:choice>
        <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup">
        </xsd:element>
        <xsd:element name="callManagerGroupName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="units" type="axlapi:XMGCPUnits" minOccurs="0">
      </xsd:element>
      <xsd:element name="scratch" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0" />
      <xsd:element name="versionStamp" type="axlapi:String128" minOccurs="0">
      </xsd:element>
      <xsd:element name="loadInformation" type="axlapi:XLoadInformation">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XMGCPEndpoints">
    <xsd:choice>
      <xsd:element name="endpoint" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="axlapi:XGateway">
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deviceName" type="axlapi:String50" maxOccurs="unbounded">
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="max" type="xsd:positiveInteger" />
  </xsd:complexType>
  <xsd:complexType name="XMGCPEndpoint">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XDevice">
        <xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:element name="cdpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
            </xsd:element>
            <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="packetCaptureMode" type="xsd:string" default="None" minOccurs="0">
            <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0">
          </xsd:element>
          <xsd:element name="priProtocol" type="xsd:string" />
          <!--This field is of the type axl:XPriProtocol in AXLEnums.xsd-->
          <xsd:element name="ASN1ROSEOIDEncoding" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="QSIGVariant" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationNationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationNationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationInternationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationInternationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationSubscriberCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationSubscriberCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="nationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="internationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="unknownstripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="subscriberStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformNationalCSS" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformInternationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformUnknownCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformSubscriberCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XMGCPSubunits">
    <xsd:sequence>
      <xsd:element name="subunit" type="axlapi:XMGCPSubunit" maxOccurs="unbounded" />
    </xsd:sequence>
    <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XMGCPSubunit">
    <xsd:sequence>
      <xsd:element name="product" type="xsd:string" />
      <!--This field is of the type axl:XMGCPVic in AXLEnums.xsd-->
      <xsd:element name="beginPort" type="xsd:nonNegativeInteger" minOccurs="0" />
      <xsd:element name="endpoints" type="axlapi:XMGCPEndpoints" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="index" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XMGCPUnits">
    <xsd:sequence>
      <xsd:element name="unit" type="axlapi:XMGCPUnit" maxOccurs="unbounded" />
    </xsd:sequence>
    <xsd:attribute name="max" type="xsd:positiveInteger" />
  </xsd:complexType>
  <xsd:complexType name="XMGCPUnit">
    <xsd:sequence>
      <xsd:element name="product" type="xsd:string" />
      <!--This field is of the type axl:XMGCPSlotModule in AXLEnums.xsd-->
      <xsd:element name="subunits" type="axlapi:XMGCPSubunits" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="index" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XModelInfo">
    <xsd:sequence>
      <xsd:element name="class" type="xsd:string" />
      <!--This field is of the type axl:XClass in AXLEnums.xsd-->
      <xsd:element name="defaultDTMFCapability" type="xsd:nonNegativeInteger" minOccurs="0" />
      <xsd:element name="features" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="feature" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            <!--This field is of the type axl:XFeature in AXLEnums.xsd-->
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="hasFirmwardLoad" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="hasPhoneTemplate" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="numberOfButtons" type="xsd:nonNegativeInteger" minOccurs="0" />
      <xsd:element name="phoneTemplateIsUserModifiable" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="showInDeviceDefaults" type="xsd:boolean" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" />
    <!--This field is of the type axl:XModel in AXLEnums.xsd-->
  </xsd:complexType>
  <xsd:complexType name="XMOHAudioSource">
    <xsd:sequence minOccurs="0">
      <xsd:element name="sourceId" type="axlapi:XMOHAudioSourceId" nillable="false" />
      <xsd:element name="name" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="sourceFile" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="multicast" type="xsd:boolean" nillable="false" />
      <xsd:element name="repeat" type="xsd:boolean" nillable="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XMobileVoiceAccess">
    <xsd:sequence>
      <xsd:element name="pattern" type="xsd:string" nillable="false" />
      <xsd:choice minOccurs="0">
        <xsd:element name="routePartition" type="axlapi:XRoutePartition">
        </xsd:element>
        <xsd:element name="routePartitionName" type="axlapi:UniqueName50" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XIVRUserLocale">
    <xsd:sequence>
      <xsd:element name="userLocale" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
      <xsd:element name="orderIndex" type="xsd:integer" nillable="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XMobility">
    <xsd:sequence>
      <xsd:element name="handoffNumber">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="uuid" type="axlapi:XUUID" />
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="handoffPartition" type="axlapi:XRoutePartition">
        </xsd:element>
        <xsd:element name="handoffPartitionName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="DTMFNumber">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="uuid" type="axlapi:XUUID" />
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="DTMFPartition" type="axlapi:XRoutePartition">
        </xsd:element>
        <xsd:element name="DTMFPartitionName" type="axlapi:String50" />
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XName">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="uuid" type="axlapi:XUUID" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="XNPMeetMe">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence>
          <xsd:element name="minimumSecurityLevel" type="axlapi:XDeviceSecurityMode" default="Non Secure" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XMOHServer">
    <xsd:sequence minOccurs="0">
      <xsd:element name="mohServerName" type="axlapi:UniqueName128" nillable="false" />
      <xsd:element name="description" type="axlapi:String100" nillable="true" minOccurs="0" />
      <xsd:choice>
        <xsd:element name="processNode" type="axlapi:XProcessNode" nillable="false">
        </xsd:element>
        <xsd:element name="processNodeName" type="axlapi:String100" nillable="false" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="devicePool" type="axlapi:XDevicePool" nillable="false">
        </xsd:element>
        <xsd:element name="devicePoolName" type="axlapi:String100" nillable="false" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="location" type="axlapi:XLocation" nillable="true">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String100" nillable="true" />
      </xsd:choice>
      <xsd:element name="maxUnicastConnections" type="xsd:unsignedLong" default="250" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="maxMulticastConnections" type="xsd:unsignedLong" default="30" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="fixedAudioSourceDevice" type="axlapi:String100" nillable="true" minOccurs="0" />
      <xsd:element name="runFlag" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:sequence>
        <xsd:element name="isMultiCastEnabled" type="xsd:boolean" nillable="false" minOccurs="0" />
        <xsd:element name="baseMulticastIPaddress" type="xsd:string" default="239.1.1.1" nillable="false" minOccurs="0">
        </xsd:element>
        <xsd:element name="baseMulticastPort" type="xsd:unsignedLong" default="16384" nillable="false" minOccurs="0">
        </xsd:element>
        <xsd:element name="multicastIncrementOnIP" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
        <xsd:element name="audioSources" minOccurs="0">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="audioSource" minOccurs="0" maxOccurs="unbounded">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="sourceId" type="xsd:unsignedLong" nillable="false" />
                    <xsd:element name="maxHops" type="xsd:unsignedLong" default="2" nillable="false" minOccurs="0" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XNumPlan" abstract="true">
    <xsd:sequence minOccurs="0">
      <xsd:element name="pattern" type="xsd:string" />
      <xsd:element name="description" type="xsd:string" minOccurs="0" />
      <xsd:element name="usage" type="xsd:string">
        <!--This field is of the type axl:XPatternUsage in AXLEnums.xsd-->
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="routePartition" type="axlapi:XRoutePartition">
        </xsd:element>
        <xsd:element name="routePartitionName" type="axlapi:UniqueName50" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XNumplanIdentifier">
    <xsd:sequence>
      <xsd:element name="directoryNumber" type="axlapi:XDirectoryNumber" />
      <xsd:element name="routePartitionName" type="xsd:string" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XNPPattern" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence>
          <xsd:element name="blockEnable" type="xsd:boolean" />
          <xsd:element name="calledPartyTransformationMask" type="xsd:string" />
          <xsd:element name="callingPartyTransformationMask" type="xsd:string" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlan" type="axlapi:XDialPlan">
            </xsd:element>
            <xsd:element name="dialPlanName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" />
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstruction" type="axlapi:XDigitDiscardInstruction">
            </xsd:element>
            <xsd:element name="digitDiscardInstructionName" type="xsd:string" />
          </xsd:choice>
          <xsd:element name="messageWaiting" type="xsd:string" />
          <!--This field is of the type axl:XLampBlinkRate in AXLEnums.xsd-->
          <xsd:element name="networkLocation" type="xsd:string" />
          <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
          <xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="prefixDigitsOut" type="xsd:string" />
          <xsd:choice minOccurs="0">
            <xsd:element name="routeFilter" type="axlapi:XRouteFilter">
            </xsd:element>
            <xsd:element name="routeFilterName" type="xsd:string" />
          </xsd:choice>
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="patternPrecedence" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPatternPrecedence in AXLEnums.xsd-->
          <xsd:element name="releaseCause" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XReleaseCauseValue in AXLEnums.xsd-->
          <xsd:element name="allowDeviceOverride" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="provideOutsideDialtone" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="callingPartyNumberingPlan" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberType" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberingPlan" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberType" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPCallPark">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="callManagerId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="callManagerName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPDirectedCallPark">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence>
          <xsd:element name="retrievalPrefix" type="xsd:string">
          </xsd:element>
          <xsd:element name="reversionPattern" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="revertCSS">
              <xsd:complexType>
                <xsd:complexContent>
                  <xsd:extension base="axlapi:XCallingSearchSpace" />
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="revertCSSName" type="axlapi:String50" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPCallPickupGroup">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence minOccurs="0">
          <xsd:element name="name" type="xsd:Name" />
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="member" type="axlapi:XPickupGroupMember" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="pickupNotification" type="axlapi:XPickupNotification" default="No Alert" nillable="false" minOccurs="0" />
          <xsd:element name="pickupNotificationTimer" type="xsd:nonNegativeInteger" default="6" nillable="false" minOccurs="0" />
          <xsd:element name="callInfoForPickupNotification" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="callingPartyInfo" type="xsd:boolean" default="false" nillable="false" />
                <xsd:element name="calledPartyInfo" type="xsd:boolean" default="false" nillable="false" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPConference">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence minOccurs="0">
          <xsd:element name="mixer" type="xsd:string" />
          <!--This field is of the type axl:XMixer in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPCTIDirectoryNumber">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNPDirectoryNumber">
        <xsd:sequence minOccurs="0">
          <xsd:element name="callForwardCTIFailure" type="axlapi:XCallForwardInfo" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPMessageWaiting">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNPDirectoryNumber">
        <xsd:sequence minOccurs="0">
          <xsd:element name="isMessageWaitingOn" type="xsd:boolean" />
          <xsd:element name="mwiCSS" type="axlapi:XCallingSearchSpace" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPDirectoryNumber">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence minOccurs="0">
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhood" type="axlapi:XAARNeighborhood">
            </xsd:element>
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="aarDestinationMask" type="axlapi:String128" nillable="true" minOccurs="0" />
          <xsd:element name="aarKeepCallHistory" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="aarVoiceMailEnabled" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="callForwardAll" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardBusy" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardBusyInt" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardNoAnswer" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardNoAnswerInt" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardNoCoverage" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardNoCoverageInt" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardOnFailure" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardAlternateParty" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardNotRegistered" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardNotRegisteredInt" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="callPickupGroup" type="axlapi:XNPCallPickupGroup">
            </xsd:element>
            <xsd:element name="callPickupGroupName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="autoAnswer" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XAutoAnswer in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="cfaCSSClause" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="alertingName" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="asciiAlertingName" type="axlapi:String32" nillable="true" minOccurs="0" />
          <xsd:choice>
            <xsd:element name="presenceGroup" type="axlapi:XPresenceGroup" />
            <xsd:element name="presenceGroupName" type="axlapi:String50" />
            <!--<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axlapi:XPresenceGroup">
										<xsd:attribute name="uuid" type="axlapi:XUUID" use="optional"/>
									</xsd:extension>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>-->
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="shareLineAppearanceCSS">
              <xsd:complexType>
                <xsd:complexContent>
                  <xsd:extension base="axlapi:XCallingSearchSpace" />
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="shareLineAppearanceCSSName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="voiceMailProfile" type="axlapi:XVoiceMailProfile" />
            <xsd:element name="voiceMailProfileName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="patternPrecedence" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPatternPrecedence in AXLEnums.xsd-->
          <xsd:element name="releaseCause" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XReleaseCauseValue in AXLEnums.xsd-->
          <xsd:element name="hrDuration" type="xsd:long" nillable="false" minOccurs="0" />
          <xsd:element name="hrInterval" type="xsd:long" nillable="false" minOccurs="0" />
          <xsd:element name="cfaCSSPolicy" type="axlapi:XCFACSSActivationPolicy" default="Use System Default" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="defaultActivatedDevice" type="axlapi:XDevice">
            </xsd:element>
            <xsd:element name="defaultActivatedDeviceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="ParkMonForwardNoRetrieveDN" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="ParkMonForwardNoRetrieveIntDN" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="ParkMonForwardNoRetrieveVMEnabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="ParkMonForwardNoRetrieveIntVMEnabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="ParkMonForwardNoRetrieveCSS" type="axlapi:XCallingSearchSpace" nillable="true" minOccurs="0">
            </xsd:element>
            <xsd:element name="ParkMonForwardNoRetrieveCSSName" type="axlapi:String50" nillable="true" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="ParkMonForwardNoRetrieveIntCSS" type="axlapi:XCallingSearchSpace" nillable="true" minOccurs="0">
            </xsd:element>
            <xsd:element name="ParkMonForwardNoRetrieveIntCSSName" type="axlapi:String50" nillable="true" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="ParkMonReversionTimer" type="xsd:long" nillable="true" minOccurs="0" />
          <xsd:element name="partyEntranceTone" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPRoutePattern">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNPPattern">
        <xsd:sequence>
          <xsd:element name="destination">
            <xsd:complexType>
              <xsd:choice>
                <xsd:sequence>
                  <xsd:choice>
                    <xsd:element name="gateway" type="axlapi:XDevice">
                    </xsd:element>
                    <xsd:element name="gatewayName" type="xsd:string" />
                  </xsd:choice>
                </xsd:sequence>
                <xsd:sequence>
                  <xsd:choice>
                    <xsd:element name="routeList" type="axlapi:XRouteList">
                    </xsd:element>
                    <xsd:element name="routeListName" type="xsd:string" />
                  </xsd:choice>
                </xsd:sequence>
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="authorizationCodeRequired" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="authorizationLevelRequired" type="xsd:nonNegativeInteger" minOccurs="0" />
          <xsd:element name="clientCodeRequired" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="withTag" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="withValueClause" type="axlapi:String255" minOccurs="0">
          </xsd:element>
          <xsd:element name="isdnNSFInfoElement" nillable="true" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="cic" nillable="true" minOccurs="0">
                </xsd:element>
                <xsd:element name="networkServiceProtocol" nillable="false">
                </xsd:element>
                <xsd:element name="networkService" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="paramValue" minOccurs="0">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="resourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" minOccurs="0">
            </xsd:element>
            <xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPSIPRoutePattern">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence>
          <xsd:element name="blockEnable" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="destination">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="sipTrunk" type="axlapi:XSIPTrunk">
                </xsd:element>
                <xsd:element name="sipTrunkName" type="axlapi:String128" />
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="dnOrPatternIPv6" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPHuntPilot">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNPPattern">
        <xsd:sequence minOccurs="0">
          <xsd:element name="destination">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="huntList" type="axlapi:XHuntList">
                  </xsd:element>
                  <xsd:element name="huntListName" type="xsd:string" />
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ForwardHuntBusy" type="axlapi:XHuntForwardInfo" minOccurs="0" />
          <xsd:element name="ForwardHuntNoAnswer" type="axlapi:XHuntForwardInfo" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="callPickupGroup" type="axlapi:XNPCallPickupGroup">
            </xsd:element>
            <xsd:element name="callPickupGroupName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="ParkMonForwardNoRetrieveDN" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="ParkMonForwardNoRetrieveCSS" type="axlapi:XCallingSearchSpace" nillable="true" minOccurs="0">
            </xsd:element>
            <xsd:element name="ParkMonForwardNoRetrieveCSSName" type="axlapi:String50" nillable="true" minOccurs="0" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPTransformationPattern">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence>
          <xsd:element name="callingPartyTransformationMask" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlan" type="axlapi:XDialPlan">
            </xsd:element>
            <xsd:element name="dialPlanName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstruction" type="axlapi:XDigitDiscardInstruction" nillable="true" />
            <xsd:element name="digitDiscardInstructionName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="patternUrgency" type="xsd:boolean">
          </xsd:element>
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="routeFilter" type="axlapi:XRouteFilter">
            </xsd:element>
            <xsd:element name="routeFilterName" type="xsd:string" />
          </xsd:choice>
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPCalledPartyTransformationPattern">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XNumPlan">
        <xsd:sequence>
          <xsd:element name="calledPartyTransformationMask" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlan" type="axlapi:XDialPlan">
            </xsd:element>
            <xsd:element name="dialPlanName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstruction" type="axlapi:XDigitDiscardInstruction" nillable="true" />
            <xsd:element name="digitDiscardInstructionName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="patternUrgency" type="xsd:boolean">
          </xsd:element>
          <xsd:element name="calledPartyPrefixDigits" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="routeFilter" type="axlapi:XRouteFilter">
            </xsd:element>
            <xsd:element name="routeFilterName" type="xsd:string" />
          </xsd:choice>
          <xsd:element name="calledPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XNPTranslationPattern">
    <xsd:sequence>
      <xsd:element name="pattern" type="xsd:string" />
      <xsd:element name="description" type="xsd:string" minOccurs="0" />
      <xsd:element name="usage" type="xsd:string">
        <!--This field is of the type axl:XPatternUsage in AXLEnums.xsd-->
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="routePartition" type="axlapi:XRoutePartition">
        </xsd:element>
        <xsd:element name="routePartitionName" type="axlapi:UniqueName50" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace" />
        <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="resourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" minOccurs="0">
        </xsd:element>
        <xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0" />
      </xsd:choice>
      <xsd:element name="blockEnable" type="xsd:boolean" />
      <xsd:element name="calledPartyTransformationMask" type="xsd:string" />
      <xsd:element name="callingPartyTransformationMask" type="xsd:string" />
      <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="dialPlan" type="axlapi:XDialPlan">
        </xsd:element>
        <xsd:element name="dialPlanName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" />
      <xsd:choice minOccurs="0">
        <xsd:element name="digitDiscardInstruction" type="axlapi:XDigitDiscardInstruction">
        </xsd:element>
        <xsd:element name="digitDiscardInstructionName" type="xsd:string" />
      </xsd:choice>
      <xsd:element name="messageWaiting" type="xsd:string" />
      <!--This field is of the type axl:XLampBlinkRate in AXLEnums.xsd-->
      <xsd:element name="networkLocation" type="xsd:string" />
      <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
      <xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="prefixDigitsOut" type="xsd:string" />
      <xsd:choice minOccurs="0">
        <xsd:element name="routeFilter" type="axlapi:XRouteFilter">
        </xsd:element>
        <xsd:element name="routeFilterName" type="xsd:string" />
      </xsd:choice>
      <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
      <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
      <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
      <xsd:element name="connectedNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
      <xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="patternPrecedence" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPatternPrecedence in AXLEnums.xsd-->
      <xsd:element name="releaseCause" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XReleaseCauseValue in AXLEnums.xsd-->
      <xsd:element name="allowDeviceOverride" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:element name="provideOutsideDialtone" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:element name="callingPartyNumberingPlan" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
      <xsd:element name="callingPartyNumberType" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
      <xsd:element name="calledPartyNumberingPlan" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
      <xsd:element name="calledPartyNumberType" type="xsd:string" default="Cisco CallManager" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XOSVersion">
    <xsd:sequence>
      <xsd:element name="osName" type="axlapi:String50" />
      <xsd:element name="osVersion" type="axlapi:String50" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XPhoneProfile">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XIPPhone" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XPickupGroupMember">
    <xsd:sequence>
      <xsd:element name="priority" type="xsd:nonNegativeInteger" />
      <xsd:choice>
        <xsd:element name="pickupGroup">
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="axlapi:XUUID">
                <xsd:attribute name="uuid" type="axlapi:XUUID" />
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="pickupGroupName" type="axlapi:String255" />
        <xsd:element name="pickupDNAndPartition">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="dnPattern" type="axlapi:XDirectoryNumber" />
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="routePartition" type="axlapi:XRoutePartition">
                  </xsd:element>
                  <xsd:element name="routePartitionId" type="axlapi:XUUID">
                  </xsd:element>
                  <xsd:element name="routePartitionName" type="axlapi:String50" />
                </xsd:choice>
              </xsd:sequence>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XPhoneTemplate">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="50" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:choice>
        <xsd:element name="basePhoneTemplate" type="axlapi:XPhoneTemplate">
        </xsd:element>
        <xsd:element name="basePhoneTemplateName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="isUserModifiable" type="xsd:boolean" minOccurs="0">
      </xsd:element>
      <xsd:element name="buttons" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="button" type="axlapi:XButton" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XProcessConfig">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="processNode" type="axlapi:XProcessNode" />
        <xsd:element name="processNodeName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="name" type="axlapi:String50" nillable="false" />
      <xsd:element name="service" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XService in AXLEnums.xsd-->
      <xsd:element name="value" type="axlapi:String1024" nillable="true" minOccurs="0" />
      <xsd:element name="valueType" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XParam in AXLEnums.xsd-->
      <xsd:element name="primaryData" type="xsd:boolean" default="false" nillable="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XProcessNode">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String255">
      </xsd:element>
      <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="mac" type="axlapi:XMacAddress" minOccurs="0">
      </xsd:element>
      <xsd:element name="IPv6Name" type="xsd:string" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XProcessNodeService">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="processNode" type="axlapi:XProcessNode" nillable="false" />
        <xsd:element name="processNodeName" type="axlapi:String255" nillable="false" />
      </xsd:choice>
      <xsd:element name="service" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XService in AXLEnums.xsd-->
      <xsd:element name="fileName" type="axlapi:String255" minOccurs="0">
      </xsd:element>
      <xsd:element name="traceLevel" type="xsd:nonNegativeInteger" default="0" nillable="false" />
      <xsd:element name="userCategories" type="xsd:nonNegativeInteger" default="0" nillable="false" />
      <xsd:element name="enable" type="xsd:boolean" default="false" nillable="false" />
      <xsd:element name="numFiles" type="xsd:nonNegativeInteger" default="250" nillable="false" />
      <xsd:element name="numLines" type="xsd:nonNegativeInteger" default="10000" nillable="false" />
      <xsd:element name="numMinutes" type="xsd:nonNegativeInteger" default="1440" nillable="false" />
      <xsd:element name="includeNonDeviceTraces" type="xsd:boolean" default="false" nillable="false" />
      <xsd:element name="useXML" type="xsd:boolean" fixed="false" nillable="false" />
      <xsd:element name="serverName" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="deviceNameMonitorFlag" type="xsd:boolean" default="false" nillable="false" />
      <xsd:element name="deviceTypeMonitorFlag" type="xsd:boolean" fixed="false" nillable="false" />
      <xsd:element name="fileTraceFlag" type="xsd:boolean" default="false" nillable="false" />
      <xsd:element name="outputDebugStringFlag" type="xsd:boolean" default="false" nillable="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XProductInfo">
    <xsd:sequence>
      <xsd:element name="model" type="xsd:string" />
      <!--This field is of the type axl:XModel in AXLEnums.xsd-->
      <xsd:element name="maxPorts" type="xsd:nonNegativeInteger" minOccurs="0" />
      <xsd:element name="showInDropDown" type="xsd:boolean" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" />
    <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
  </xsd:complexType>
  <xsd:complexType name="XRegion">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" nillable="false" />
      <xsd:element name="relatedRegions" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="relatedRegion" type="axlapi:XRegionRelationship" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XRegionRelationship">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="region" type="axlapi:XRegion" nillable="false" />
        <xsd:element name="name" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="bandwidth" type="xsd:string" default="G.711" nillable="false" />
      <!--This field is of the type axl:XBandwidth in AXLEnums.xsd-->
      <xsd:element name="videoBandwidth" type="xsd:nonNegativeInteger" nillable="false" />
      <xsd:element name="lossyNetwork" type="axlapi:XLossyNetwork" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XResourcePriorityDefaultNamespace">
    <xsd:sequence minOccurs="0">
      <xsd:choice minOccurs="0">
        <xsd:element name="resourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" minOccurs="0">
        </xsd:element>
        <xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XResourcePriorityNamespace">
    <xsd:sequence>
      <xsd:element name="namespace" type="xsd:string" nillable="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XResourcePriorityNamespaceListMember">
    <xsd:choice>
      <xsd:element name="resourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" maxOccurs="unbounded">
      </xsd:element>
      <xsd:element name="resourcePriorityNamespaceName" type="xsd:string" maxOccurs="unbounded" />
    </xsd:choice>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
    <xsd:attribute name="index" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XResourcePriorityNamespaceList">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="members" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XResourcePriorityNamespaceListMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XRouteFilter">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:string">
      </xsd:element>
      <xsd:element name="clause" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="dialPlan" type="axlapi:XDialPlan">
        </xsd:element>
        <xsd:element name="dialPlanName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
      </xsd:element>
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XRouteFilterMember" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XRouteFilterMember">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="dialPlanTag" type="axlapi:XDialPlanTag">
        </xsd:element>
        <xsd:element name="dialPlanTagName" type="axlapi:String50">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="digits" type="xsd:nonNegativeInteger" minOccurs="0" />
      <xsd:element name="operator" type="axlapi:XOperator" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="priority" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XRouteFilterMemberId">
    <xsd:simpleContent>
      <xsd:extension base="axlapi:XUUID">
        <xsd:attribute name="priority" type="xsd:nonNegativeInteger" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="XRouteGroup">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:Name" />
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger">
      </xsd:element>
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XRouteGroupMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XRouteGroupMember">
    <xsd:sequence minOccurs="0">
      <xsd:element name="deviceSelectionOrder" type="xsd:nonNegativeInteger" />
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" />
      <xsd:choice>
        <xsd:element name="device" type="axlapi:XDevice">
        </xsd:element>
        <xsd:element name="deviceName" type="xsd:string" />
        <xsd:element name="deviceId" type="axlapi:XUUID">
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
    <xsd:attribute name="port" type="xsd:nonNegativeInteger" />
  </xsd:complexType>
  <xsd:complexType name="XLineGroup">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:Name" />
      <xsd:element name="distributionAlgorithm" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XDistributeAlgorithm in AXLEnums.xsd-->
      <xsd:element name="rnaReversionTimeOut" type="xsd:nonNegativeInteger" default="10" nillable="false" />
      <xsd:element name="huntAlgorithmNoAnswer" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XHuntAlgorithm in AXLEnums.xsd-->
      <xsd:element name="huntAlgorithmBusy" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XHuntAlgorithm in AXLEnums.xsd-->
      <xsd:element name="huntAlgorithmNotAvailable" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XHuntAlgorithm in AXLEnums.xsd-->
      <xsd:element name="members">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="member" type="axlapi:XLineGroupMember" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XLineGroupMember">
    <xsd:sequence minOccurs="0">
      <xsd:element name="lineSelectionOrder" type="xsd:nonNegativeInteger" />
      <xsd:choice>
        <xsd:element name="directoryNumber" type="axlapi:XNPDirectoryNumber">
        </xsd:element>
        <xsd:element name="directoryNumberId" type="axlapi:XUUID">
        </xsd:element>
        <xsd:element name="dnPatternAndPartition">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="dnPattern" type="axlapi:XDirectoryNumber" />
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="routePartition" type="axlapi:XRoutePartition">
                  </xsd:element>
                  <xsd:element name="routePartitionId" type="axlapi:XUUID">
                  </xsd:element>
                  <xsd:element name="routePartitionName" type="axlapi:String50" />
                </xsd:choice>
              </xsd:sequence>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XRouteListMember">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="routeGroup" type="axlapi:XRouteGroup">
        </xsd:element>
        <xsd:element name="routeGroupName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="selectionOrder" type="xsd:nonNegativeInteger" />
      <xsd:element name="calledPartyTransformationMask" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="callingPartyTransformationMask" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="digitDiscardInstruction" type="axlapi:XDigitDiscardInstruction">
        </xsd:element>
        <xsd:element name="digitDiscardInstructionName" type="axlapi:String50">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="prefixDigitsOut" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="useFullyQualifiedCallingPartyNumber" type="xsd:string" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:element name="callingPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
      <xsd:element name="callingPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
      <xsd:element name="calledPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
      <xsd:element name="calledPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XHuntListMember">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="lineGroup" type="axlapi:XLineGroup">
        </xsd:element>
        <xsd:element name="lineGroupName" type="axlapi:String50" nillable="false" />
      </xsd:choice>
      <xsd:element name="selectionOrder" type="xsd:nonNegativeInteger" />
      <xsd:element name="calledPartyTransformationMask" type="axlapi:String50" minOccurs="0">
      </xsd:element>
      <xsd:element name="callingPartyTransformationMask" type="axlapi:String50" minOccurs="0">
      </xsd:element>
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="digitDiscardInstruction" type="axlapi:XDigitDiscardInstruction">
        </xsd:element>
        <xsd:element name="digitDiscardInstructionName" type="axlapi:String50">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="prefixDigitsOut" type="axlapi:String50" minOccurs="0">
      </xsd:element>
      <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" minOccurs="0">
      </xsd:element>
      <xsd:element name="useFullyQualifiedCallingPartyNumber" type="xsd:string" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XRouteList">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:Name">
      </xsd:element>
      <xsd:element name="description" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="callManagerGroupName" type="axlapi:String50" nillable="false" />
        <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="members" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XRouteListMember" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XHuntList">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:Name">
      </xsd:element>
      <xsd:element name="description" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="callManagerGroupName" type="axlapi:String50" nillable="false" />
        <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="members" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XHuntListMember" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XSIPDialRules">
    <xsd:sequence minOccurs="0">
      <xsd:element name="dialPattern" type="axlapi:XDialPattern" />
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="description" type="xsd:string" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XSIPRealm">
    <xsd:sequence>
      <xsd:element name="realm" type="xsd:string" />
      <xsd:element name="userid" type="xsd:string" />
      <xsd:element name="digestCredentials" type="xsd:string" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XSIPProfile">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:String50" nillable="false" />
      <xsd:element name="description" type="axlapi:String100" nillable="true" minOccurs="0" />
      <xsd:element name="defaultTelephonyEventPayloadType" type="xsd:long" default="101" minOccurs="0" />
      <xsd:element name="redirectByApplication" type="xsd:boolean" default="false" minOccurs="0" />
      <xsd:element name="ringing180" type="xsd:boolean" default="false" minOccurs="0" />
      <xsd:element name="timerInvite" type="xsd:long" default="180" minOccurs="0" />
      <xsd:element name="timerRegisterDelta" type="xsd:long" default="5" minOccurs="0" />
      <xsd:element name="timerRegister" type="xsd:long" default="3600" minOccurs="0" />
      <xsd:element name="timerT1" type="xsd:long" default="500" minOccurs="0" />
      <xsd:element name="timerT2" type="xsd:long" default="4000" minOccurs="0" />
      <xsd:element name="retryInvite" type="xsd:long" default="6" minOccurs="0" />
      <xsd:element name="retryNotInvite" type="xsd:long" default="10" minOccurs="0" />
      <xsd:element name="startMediaPort" type="xsd:long" default="16384" minOccurs="0" />
      <xsd:element name="stopMediaPort" type="xsd:long" default="32766" minOccurs="0" />
      <xsd:element name="callpickupURI" type="axlapi:Name128" default="x-cisco-serviceuri-pickup" minOccurs="0" />
      <xsd:element name="callpickupListURI" type="axlapi:String128" default="x-cisco-serviceuri-opickup" minOccurs="0" />
      <xsd:element name="callpickupGroupURI" type="axlapi:String128" default="x-cisco-serviceuri-gpickup" minOccurs="0" />
      <xsd:element name="meetmeServiceURI" type="axlapi:String128" default="x-cisco-serviceuri-meetme" minOccurs="0" />
      <xsd:element name="userInfo" type="axlapi:XZzuserInfo" default="None" minOccurs="0" />
      <xsd:element name="dtmfDbLevel" type="axlapi:XZzdtmfDbLevel" default="Nominal" minOccurs="0" />
      <xsd:element name="callHoldRingback" type="axlapi:XZzpreff" default="Off" minOccurs="0" />
      <xsd:element name="anonymousCallBlock" type="axlapi:XZzpreff" default="Off" minOccurs="0" />
      <xsd:element name="callerIdBlock" type="axlapi:XZzpreff" default="Off" minOccurs="0" />
      <xsd:element name="dndControl" type="axlapi:XZzdndcontrol" default="Admin" minOccurs="0" />
      <xsd:element name="telnetLevel" type="axlapi:XTelnetLevel" default="Disabled" minOccurs="0" />
      <xsd:element name="timerKeepAlive" type="xsd:long" default="120" minOccurs="0" />
      <xsd:element name="timerSubscribe" type="xsd:long" default="120" minOccurs="0" />
      <xsd:element name="timerSubscribeDelta" type="xsd:long" default="5" minOccurs="0" />
      <xsd:element name="maxRedirects" type="xsd:long" default="70" minOccurs="0" />
      <xsd:element name="timerOffhookToFirstDigit" type="xsd:long" default="15000" minOccurs="0" />
      <xsd:element name="callForwardURI" type="axlapi:String128" default="x-cisco-serviceuri-cfwdall" minOccurs="0" />
      <xsd:element name="abbreviatedDialURI" type="axlapi:String128" default="x-cisco-serviceuri-abbrdial" minOccurs="0" />
      <xsd:element name="confJoinEnable" type="xsd:boolean" default="true" minOccurs="0" />
      <xsd:element name="rfc2543Hold" type="xsd:boolean" default="false" minOccurs="0" />
      <xsd:element name="semiAttendedTransfer" type="xsd:boolean" default="true" minOccurs="0" />
      <xsd:element name="enableVAD" type="xsd:boolean" default="false" minOccurs="0" />
      <xsd:element name="stutterMsgWaiting" type="xsd:boolean" default="false" minOccurs="0" />
      <xsd:element name="callStats" type="xsd:boolean" default="false" minOccurs="0" />
      <xsd:element name="t38Invite" type="xsd:boolean" default="false" minOccurs="0" />
      <xsd:element name="rerouteIncomingRequest" type="axlapi:XSIPReroute" default="Never" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="resourcePriorityNamespaceList" type="axlapi:XResourcePriorityNamespaceList" nillable="true">
        </xsd:element>
        <xsd:element name="resourcePriorityNamespaceListName" type="axlapi:Name50" default="Null" nillable="true" />
      </xsd:choice>
      <xsd:element name="enableAnatForEarlyOfferCalls" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="gClear" type="axlapi:XGClear" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XSIPTrunkSecurityProfile">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:String64" />
      <xsd:element name="description" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="securityMode" type="axlapi:XDeviceSecurityMode" nillable="true" minOccurs="0" />
      <xsd:element name="incomingTransport" type="xsd:string" default="TCP+UDP" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XTransport in AXLEnums.xsd-->
      <xsd:element name="outgoingTransport" type="xsd:string" nillable="true" minOccurs="0" />
      <!--This field is of the type axl:XTransport in AXLEnums.xsd-->
      <xsd:element name="digestAuthentication" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="noncePolicyTime" type="xsd:long" default="600" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="x509SubjectName" type="axlapi:String4096" nillable="false" minOccurs="0" />
      <xsd:element name="incomingPort" type="xsd:long" nillable="false" minOccurs="0" />
      <xsd:element name="applLevelAuthentication" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="acceptPresenceSubscription" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="allowReplaceHeader" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="transmitSecurityStatus" type="xsd:boolean" nillable="false" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XTimePeriod">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="startTime" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XTimeOfDay in AXLEnums.xsd-->
      <xsd:element name="endTime" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XTimeOfDay in AXLEnums.xsd-->
      <xsd:element name="startDay" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XDayOfWeek in AXLEnums.xsd-->
      <xsd:element name="endDay" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XDayOfWeek in AXLEnums.xsd-->
      <xsd:element name="monthOfYear" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XMonthOfYear in AXLEnums.xsd-->
      <xsd:element name="dayOfMonth" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
      <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="isPublished" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="todOwnerId" type="axlapi:XUUID" />
        <xsd:element name="todOwnerIdName" type="axlapi:UniqueName50" />
      </xsd:choice>
      <xsd:element name="dayOfMonthEnd" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
      <xsd:element name="monthOfYearEnd" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XMonthOfYear in AXLEnums.xsd-->
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XTimeScheduleTimePeriod">
    <xsd:choice>
      <xsd:element name="timePeriod" type="axlapi:XTimePeriod">
      </xsd:element>
      <xsd:element name="timePeriodName" type="axlapi:String50" nillable="false" />
    </xsd:choice>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XTimeSchedule">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" />
      <xsd:element name="members" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XTimeScheduleTimePeriod" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
      <xsd:element name="isPublished" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="timeScheduleCategory" type="axlapi:XTimeScheduleCategory" nillable="false" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="todOwnerId" type="axlapi:XUUID" />
        <xsd:element name="todOwnerIdName" type="axlapi:UniqueName50" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XTODAccess">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String128" nillable="false" />
      <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
      <xsd:choice>
        <xsd:element name="ownerId" type="axlapi:XUUID" />
        <xsd:element name="ownerIdName" type="axlapi:UniqueName50" />
      </xsd:choice>
      <xsd:element name="members" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XTODAccessMember" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="associatedRemoteDestination" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="remoteDestination" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XTODAccessMember">
    <xsd:sequence minOccurs="0">
      <xsd:choice minOccurs="0">
        <xsd:element name="timeSchedule" type="axlapi:XTimeSchedule" minOccurs="0">
        </xsd:element>
        <xsd:element name="timeScheduleName" type="axlapi:String50" minOccurs="0">
        </xsd:element>
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="accessList" type="axlapi:XCallerFilterList" minOccurs="0">
        </xsd:element>
        <xsd:element name="accessListName" type="axlapi:String128" nillable="false" minOccurs="0">
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XRoutePartition">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:string" />
      <xsd:element name="description" type="xsd:string" minOccurs="0" />
      <xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="timeScheduleId" type="axlapi:XUUID">
        </xsd:element>
        <xsd:element name="timeScheduleName" type="axlapi:String50">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="useOriginatingDeviceTimeZone" type="xsd:boolean" minOccurs="0" />
      <xsd:element name="timeZone" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XTimeZone in AXLEnums.xsd-->
      <xsd:element name="partitionUsage" type="axlapi:XPartitionUsage" nillable="true" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XApplicationToSoftKeyTemplate">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="softKeyTemplateId" type="axlapi:XUUID" nillable="false" />
        <xsd:element name="softKeyTemplateName" type="axlapi:String100" nillable="false">
        </xsd:element>
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="standardSoftKeyTemplate" type="axlapi:XSoftkeyTemplate" nillable="false">
        </xsd:element>
        <xsd:element name="standardSoftKeyTemplateName" type="axlapi:String100" nillable="false" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XSoftKeySet">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="softKeyTemplate" type="axlapi:XSoftkeyTemplate">
        </xsd:element>
        <xsd:element name="softKeyTemplateName" type="axlapi:String100" />
      </xsd:choice>
      <xsd:element name="callStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="callState" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="callStateName" type="axlapi:XCallState" nillable="false" />
                  <xsd:element name="softKeys" minOccurs="0">
                    <xsd:complexType>
                      <xsd:sequence minOccurs="0">
                        <xsd:element name="softKey" minOccurs="0" maxOccurs="unbounded">
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element name="positionId" type="xsd:nonNegativeInteger" nillable="false">
                              </xsd:element>
                              <xsd:element name="softKeyName" type="axlapi:XSoftkey" nillable="false" />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XSoftkeyTemplate">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String100" />
      <xsd:element name="description" type="axlapi:String100" minOccurs="0" />
      <xsd:choice>
        <xsd:element name="baseSoftkeyTemplate" type="axlapi:XSoftkeyTemplate" nillable="false">
        </xsd:element>
        <xsd:element name="baseSoftkeyTemplateName" type="axlapi:String100" nillable="false" />
      </xsd:choice>
      <xsd:element name="isDefault" type="xsd:boolean" nillable="true" minOccurs="0" />
      <xsd:element name="applications">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="application" type="axlapi:String50" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XRemoteDestination">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="destination" type="xsd:string" nillable="false" />
      <xsd:element name="answerTooSoonTimer" type="xsd:nonNegativeInteger" nillable="false" />
      <xsd:element name="answerTooLateTimer" type="xsd:nonNegativeInteger" nillable="false" />
      <xsd:element name="delayBeforeRingingCell" type="xsd:nonNegativeInteger" nillable="false" />
      <xsd:choice minOccurs="0">
        <xsd:choice minOccurs="0">
          <xsd:element name="remoteDestinationProfile" type="axlapi:XRemoteDestinationProfile">
          </xsd:element>
          <xsd:element name="remoteDestinationProfileName" type="axlapi:String50" nillable="false" />
        </xsd:choice>
        <xsd:choice minOccurs="0">
          <xsd:element name="dualModeDevice" type="axlapi:XDevice">
          </xsd:element>
          <xsd:element name="dualModeDeviceName" type="axlapi:String50" nillable="false" />
        </xsd:choice>
      </xsd:choice>
      <xsd:element name="isMobilePhone" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="enableMobileConnect" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
      <xsd:element name="lineAssociations" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="lineAssociation" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:complexContent>
                  <xsd:extension base="axlapi:XLineAssociation">
                    <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="optional" />
                  </xsd:extension>
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="timeZone" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XTimeZone in AXLEnums.xsd-->
      <xsd:choice minOccurs="0">
        <xsd:element name="todAccess" type="axlapi:XTODAccess" nillable="true">
        </xsd:element>
        <xsd:element name="todAccessName" type="axlapi:String128" nillable="true" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="mobileSmartClient" type="axlapi:XDevice">
        </xsd:element>
        <xsd:element name="mobileSmartClientName" type="axlapi:String128" />
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XMobileSmartClientProfile">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="xsd:string" nillable="true" />
      <xsd:element name="mobileSmartClient" type="axlapi:XMobileSmartClient" />
      <xsd:element name="enableSNRUri" type="xsd:string" />
      <xsd:element name="enableCFAUri" type="xsd:string" />
      <xsd:element name="handOffUri" type="xsd:string" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XLineAssociation">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="uuid" type="axlapi:XUUID" />
        <xsd:sequence>
          <xsd:element name="pattern" type="xsd:string">
          </xsd:element>
          <xsd:choice>
            <xsd:element name="routePartitionId" type="axlapi:XUUID" />
            <xsd:element name="routePartitionName" type="axlapi:String50" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XTranscoder">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:UniqueString255" nillable="false" />
      <xsd:element name="description" type="axlapi:String128" nillable="true" minOccurs="0" />
      <xsd:element name="product" type="xsd:string" nillable="false" />
      <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
      <xsd:element name="subUnit" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="devicePool" type="axlapi:XDevicePool" nillable="false">
        </xsd:element>
        <xsd:element name="devicePoolName" type="axlapi:UniqueString50" nillable="false" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="commonDeviceConfig" type="axlapi:XCommonDeviceConfig" nillable="true">
        </xsd:element>
        <xsd:element name="commonDeviceConfigName" type="axlapi:UniqueString50" nillable="true" />
      </xsd:choice>
      <xsd:element name="loadInformation" type="axlapi:XLoadInformation" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" nillable="true" minOccurs="0">
      </xsd:element>
      <xsd:element name="isTrustedRelayPoint" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XSpeeddial">
    <xsd:sequence>
      <xsd:element name="dirn" type="axlapi:XDirectoryNumber" />
      <xsd:element name="label" type="xsd:string" />
      <xsd:element name="asciiLabel" type="axlapi:String50" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="index" type="xsd:positiveInteger" />
  </xsd:complexType>
  <xsd:complexType name="XSRSTInfo">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:UniqueName50" />
      <xsd:element name="srstOption" type="xsd:string" default="User Specific" />
      <!--This field is of the type axl:XSRSTOption in AXLEnums.xsd-->
      <xsd:element name="userModifiable" type="xsd:boolean" default="true" />
      <xsd:element name="ipAddr1" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="16" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="port1" type="xsd:nonNegativeInteger" default="2000" />
      <xsd:element name="ipAddr2" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="16" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="port2" type="xsd:nonNegativeInteger" default="2000" minOccurs="0" />
      <xsd:element name="ipAddr3" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="16" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="port3" type="xsd:nonNegativeInteger" default="2000" minOccurs="0" />
      <xsd:element name="certificate" type="axlapi:String4096" />
      <xsd:element name="isSecure" type="xsd:boolean" default="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XSubscribedService">
    <xsd:sequence minOccurs="0">
      <xsd:choice>
        <xsd:element name="telecasterService" type="axlapi:XTelecasterService">
        </xsd:element>
        <xsd:element name="telecasterServiceName" type="axlapi:String100" />
      </xsd:choice>
      <xsd:element name="name" type="axlapi:String100" />
      <xsd:element name="url" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="512" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="urlButtonIndex" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
      <xsd:element name="urlLabel" type="axlapi:String50" minOccurs="0" />
      <xsd:element name="urlLabelAscii" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="serviceNameAscii" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="phoneService" type="axlapi:XPhoneService" minOccurs="0">
      </xsd:element>
      <xsd:element name="phoneServiceCategory" type="axlapi:XPhoneServiceCategory" minOccurs="0">
      </xsd:element>
      <xsd:element name="vendor" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="version" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="priority" type="xsd:int" default="50" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XTelecasterService">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String100" nillable="false" />
      <xsd:element name="description" type="axlapi:String1024" minOccurs="0" />
      <xsd:element name="templateURL" nillable="false">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="512" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XT1PortList">
    <xsd:sequence>
      <xsd:element name="port" type="axlapi:XT1Port" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XT1Port">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XAnalogPort">
        <xsd:sequence minOccurs="0">
          <xsd:element name="callerId" type="xsd:string" />
          <!--This field is of the type axl:XCallerID in AXLEnums.xsd-->
          <xsd:element name="endpointId" type="axlapi:String128" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="XTrunkInfo">
    <xsd:sequence>
      <xsd:element name="kind" type="xsd:string">
        <!--This field is of the type axl:XTrunk in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="level" type="xsd:string">
        <!--This field is of the type axl:XTrunkDirection in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="direction" type="xsd:string">
        <!--This field is of the type axl:XTrunkDirection in AXLEnums.xsd-->
      </xsd:element>
      <xsd:element name="pad">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="rx" type="xsd:string">
              <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
            </xsd:element>
            <xsd:element name="tx" type="xsd:string">
              <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XUserGroupMember">
    <xsd:choice>
      <xsd:element name="user" type="axlapi:XUser" nillable="false">
      </xsd:element>
      <xsd:element name="userId" type="xsd:string" nillable="false" />
    </xsd:choice>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XUserGroup">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:UniqueName128" nillable="false" />
      <xsd:element name="members" nillable="true" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="member" type="axlapi:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XUser">
    <xsd:sequence>
      <xsd:element name="firstname" type="xsd:string" minOccurs="0" />
      <xsd:element name="middlename" type="xsd:string" minOccurs="0" />
      <xsd:element name="lastname" type="xsd:string" />
      <xsd:element name="userid" type="xsd:string" />
      <xsd:element name="password" type="xsd:string" minOccurs="0" />
      <xsd:element name="pin" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="0" />
            <xsd:maxLength value="127" />
            <xsd:pattern value="(\d{5,127})*" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="telephoneNumber" type="axlapi:XDirectoryNumber" minOccurs="0" />
      <xsd:element name="mailid" type="xsd:string" minOccurs="0" />
      <xsd:element name="extension" type="axlapi:XDirectoryNumber" minOccurs="0">
      </xsd:element>
      <xsd:element name="department" type="xsd:string" minOccurs="0" />
      <xsd:element name="manager" type="xsd:string" minOccurs="0" />
      <xsd:element name="userLocale" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
      <xsd:element name="associatedDevices" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="device" type="axlapi:String50" minOccurs="0" maxOccurs="unbounded">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="primaryExtension" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="pattern" type="axlapi:XDirectoryNumber" nillable="false">
            </xsd:element>
            <xsd:element name="routePartitionName" type="axlapi:String50" minOccurs="0">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ipccExtension" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="pattern" type="axlapi:XDirectoryNumber" nillable="false">
            </xsd:element>
            <xsd:element name="routePartitionName" type="axlapi:String50" minOccurs="0">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="associatedPC" type="xsd:string" minOccurs="0" />
      <xsd:element name="associatedGroups" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="userGroup" minOccurs="0" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="name" type="axlapi:String100" nillable="false">
                  </xsd:element>
                  <xsd:element name="userRoles" nillable="true" minOccurs="0" maxOccurs="unbounded">
                    <xsd:complexType>
                      <xsd:sequence minOccurs="0">
                        <xsd:element name="userRole" nillable="true" minOccurs="0" maxOccurs="unbounded">
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="axlapi:String100">
                                <xsd:attribute name="uuid" type="axlapi:XUUID" />
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="uuid" type="axlapi:XUUID" />
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="enableCTI" type="xsd:boolean" default="true" minOccurs="0" />
      <xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="phoneProfiles" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice>
              <xsd:element name="profile" type="axlapi:XPhoneProfile" nillable="false" maxOccurs="unbounded">
              </xsd:element>
              <xsd:element name="profileName" type="xsd:string" nillable="false" maxOccurs="unbounded">
              </xsd:element>
            </xsd:choice>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="enableMobility" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="enableMobileVoiceAccess" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
      <xsd:element name="maxDeskPickupWaitTime" type="xsd:unsignedLong" default="10000" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="remoteDestinationLimit" type="xsd:unsignedShort" default="4" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="associatedRemoteDestinationProfiles" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="remoteDestinationProfile" minOccurs="0" maxOccurs="unbounded">
              <xsd:complexType />
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="associatedAccessLists" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="accessList" minOccurs="0" maxOccurs="unbounded">
              <xsd:complexType />
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="passwordCredentials" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="pwdCredPolicy" type="axlapi:XUUID">
              </xsd:element>
              <xsd:element name="pwdCredPolicyName" type="axlapi:String50" />
            </xsd:choice>
            <xsd:element name="pwdCredUserCantChange" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pwdCredUserMustChange" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pwdCredTimeChanged" type="xsd:string" minOccurs="0" />
            <xsd:element name="pwdCredTimeAdminLockout" type="xsd:string" minOccurs="0" />
            <xsd:element name="pwdCredLockedByAdministrator" type="xsd:boolean" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="pinCredentials" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="pinCredPolicy" type="axlapi:XUUID">
              </xsd:element>
              <xsd:element name="pinCredPolicyName" type="axlapi:String50" />
            </xsd:choice>
            <xsd:element name="pinCredUserCantChange" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pinCredUserMustChange" minOccurs="0" />
            <xsd:element name="pinCredDoesNotExpire" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="pinCredTimeChanged" type="xsd:string" minOccurs="0" />
            <xsd:element name="pinCredTimeAdminLockout" type="xsd:string" minOccurs="0" />
            <xsd:element name="pinCredLockedByAdministrator" type="xsd:boolean" minOccurs="0" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="primaryDevice" type="axlapi:String50" minOccurs="0">
      </xsd:element>
      <xsd:element name="associatedTodAccess" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence minOccurs="0">
            <xsd:element name="todAccess" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="status" type="xsd:positiveInteger" minOccurs="0">
      </xsd:element>
      <xsd:element name="defaultProfile" type="xsd:string" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XVendorConfig">
    <xsd:sequence>
      <xsd:any namespace="##local" processContents="skip" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XVG224">
    <xsd:sequence>
      <xsd:element name="domainName" type="axlapi:String64" />
      <xsd:element name="description" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="product" type="xsd:string" />
      <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
      <xsd:element name="protocol" type="xsd:string" />
      <!--This field is of the type axl:XDeviceProtocol in AXLEnums.xsd-->
      <xsd:element name="model" type="xsd:string">
        <!--This field is of the type axl:XModel in AXLEnums.xsd-->
      </xsd:element>
      <xsd:choice>
        <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup">
        </xsd:element>
        <xsd:element name="callManagerGroupName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="units" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="unit">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="product" type="xsd:string" />
                  <!--This field is of the type axl:XMGCPSlotModule in AXLEnums.xsd-->
                  <xsd:element name="subunits" minOccurs="0">
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element name="subunit">
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element name="product" type="xsd:string" />
                              <!--This field is of the type axl:XMGCPVic in AXLEnums.xsd-->
                              <xsd:element name="endpoints" minOccurs="0">
                                <xsd:complexType>
                                  <xsd:sequence>
                                    <xsd:element name="endpoint" maxOccurs="unbounded">
                                      <xsd:complexType>
                                        <xsd:complexContent>
                                          <xsd:extension base="axlapi:XDevice">
                                            <xsd:sequence minOccurs="0">
                                              <xsd:element name="lines" minOccurs="0">
                                                <xsd:complexType>
                                                  <xsd:choice>
                                                    <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
                                                    <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded" />
                                                  </xsd:choice>
                                                </xsd:complexType>
                                              </xsd:element>
                                              <xsd:sequence minOccurs="0">
                                                <xsd:element name="packetCaptureMode" type="xsd:string" default="None" minOccurs="0" />
                                                <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
                                                <xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0" />
                                                <xsd:element name="transmitUTF8" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                <xsd:element name="ports" minOccurs="0">
                                                  <xsd:complexType>
                                                    <xsd:sequence>
                                                      <xsd:element name="port" maxOccurs="unbounded">
                                                        <xsd:complexType>
                                                          <xsd:sequence>
                                                            <xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
                                                            <xsd:element name="trunkDirection" type="xsd:string" />
                                                            <!--This field is of the type axl:XTrunkDirection in AXLEnums.xsd-->
                                                            <xsd:sequence minOccurs="0">
                                                              <xsd:element name="attendantDN" type="axlapi:XDirectoryNumber" />
                                                            </xsd:sequence>
                                                            <xsd:sequence minOccurs="0">
                                                              <xsd:element name="prefixDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
                                                              <xsd:element name="numDigits" type="xsd:nonNegativeInteger" nillable="false" />
                                                              <xsd:element name="expectedDigits" type="xsd:nonNegativeInteger" />
                                                              <xsd:element name="smdiPortNumber" type="xsd:nonNegativeInteger">
                                                              </xsd:element>
                                                            </xsd:sequence>
                                                          </xsd:sequence>
                                                          <xsd:attribute name="uuid" type="axlapi:XUUID" />
                                                          <xsd:attribute name="portNumber" type="xsd:positiveInteger" use="required" />
                                                        </xsd:complexType>
                                                      </xsd:element>
                                                    </xsd:sequence>
                                                  </xsd:complexType>
                                                </xsd:element>
                                              </xsd:sequence>
                                              <xsd:element name="userLocale" type="xsd:string" nillable="true" minOccurs="0" />
                                              <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
                                              <xsd:element name="networkLocale" type="xsd:string" nillable="true" minOccurs="0" />
                                              <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
                                              <xsd:sequence minOccurs="0">
                                                <xsd:element name="isActive" type="xsd:boolean" nillable="false" minOccurs="0">
                                                </xsd:element>
                                                <xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                <xsd:choice minOccurs="0">
                                                  <xsd:element name="subscribeCallingSearchSpace" type="axlapi:XCallingSearchSpace" nillable="true">
                                                  </xsd:element>
                                                  <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
                                                </xsd:choice>
                                                <xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                <xsd:element name="remoteDevice" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                <xsd:choice minOccurs="0">
                                                  <xsd:element name="phoneTemplate" type="axlapi:XPhoneTemplate">
                                                  </xsd:element>
                                                  <xsd:element name="phoneTemplateName" type="axlapi:String50" nillable="false" />
                                                </xsd:choice>
                                                <xsd:choice>
                                                  <xsd:element name="presenceGroup" type="axlapi:XPresenceGroup" nillable="false">
                                                  </xsd:element>
                                                  <xsd:element name="presenceGroupName" type="axlapi:String50" nillable="false" />
                                                </xsd:choice>
                                                <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" nillable="false" minOccurs="0">
                                                </xsd:element>
                                                <xsd:element name="deviceMobilityMode" type="xsd:string" default="Default" nillable="false" minOccurs="0">
                                                  <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
                                                </xsd:element>
                                                <xsd:element name="hlogStatus" type="xsd:string" nillable="false" minOccurs="0" />
                                                <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
                                                <xsd:element name="ownerUserId" type="axlapi:String255" nillable="true" minOccurs="0" />
                                              </xsd:sequence>
                                            </xsd:sequence>
                                            <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
                                          </xsd:extension>
                                        </xsd:complexContent>
                                      </xsd:complexType>
                                    </xsd:element>
                                  </xsd:sequence>
                                  <xsd:attribute name="max" type="xsd:positiveInteger" />
                                </xsd:complexType>
                              </xsd:element>
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:complexType>
                    <!--VG224 SubUnits Schema Ends-->
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
              <!--VG224 Unit Schema Ends-->
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
        <!--VG224 Units Schema Ends-->
      </xsd:element>
      <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0">
      </xsd:element>
      <xsd:element name="versionStamp" type="axlapi:String128" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XVoiceMailPilot">
    <xsd:sequence minOccurs="0">
      <xsd:element name="dirn" type="axlapi:XDirectoryNumber" nillable="true" />
      <xsd:element name="description" type="axlapi:String50" nillable="true" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="CSS" type="axlapi:XCallingSearchSpace" nillable="true">
        </xsd:element>
        <xsd:element name="CSSName" type="axlapi:String50" nillable="true">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false" />
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XVoiceMailProfile">
    <xsd:sequence minOccurs="0">
      <xsd:element name="name" type="axlapi:String50" nillable="false" />
      <xsd:element name="description" type="axlapi:String50" nillable="true" minOccurs="0" />
      <xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false" />
      <xsd:element name="voiceMailboxMask" type="xsd:string" nillable="true" minOccurs="0" />
      <xsd:element name="voiceMailPilot" type="axlapi:XVoiceMailPilot" nillable="false">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="uuid" type="axlapi:XUUID" />
  </xsd:complexType>
  <xsd:complexType name="XPilotPoint">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:UniqueName128">
      </xsd:element>
      <xsd:choice>
        <xsd:element name="devicePool" type="axlapi:XDevicePool">
        </xsd:element>
        <xsd:element name="devicePoolName" type="axlapi:UniqueString50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="routePartition" type="axlapi:XRoutePartition">
        </xsd:element>
        <xsd:element name="routePartitionName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace">
        </xsd:element>
        <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="pilotNumber" type="xsd:string" />
      <xsd:choice minOccurs="0">
        <xsd:element name="location" type="axlapi:XLocation">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String50" />
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <!-- *********************************************************** -->
  <!-- Simple Types                                                -->
  <!-- *********************************************************** -->
  <xsd:simpleType name="XDirectoryNumber">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XIPAddress">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d?\d?\d\.\d?\d?\d\.\d?\d?\d\.\d?\d?\d" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XKeyString">
    <xsd:restriction base="xsd:string">
      <xsd:whiteSpace value="collapse" />
      <xsd:pattern value="[\s\i\d\.\-]+" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMacAddress">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="([0-9]|[a-f]|[A-F]){12}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XUUID">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\{........-....-....-....-............\}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMOHAudioSourceId">
    <xsd:restriction base="xsd:nonNegativeInteger">
      <xsd:minInclusive value="0" />
      <xsd:maxInclusive value="51" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- *********************************************************** -->
  <!-- Rule Blocks                                                 -->
  <!-- *********************************************************** -->
  <xsd:complexType name="XRuleInstance">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:XKeyString" />
      <xsd:element name="description" type="xsd:string" minOccurs="0" />
      <xsd:element name="author" type="xsd:Name" minOccurs="0" />
      <xsd:element name="rules">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="rule" type="axlapi:XRule" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XRule">
    <xsd:sequence>
      <xsd:element name="name" nillable="false">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:pattern value="xmlrule://\S+" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" type="xsd:string" minOccurs="0" />
      <xsd:element name="author" type="xsd:string" minOccurs="0" />
      <xsd:choice>
        <xsd:element name="boolean" type="axlapi:XBooleanRule">
        </xsd:element>
        <xsd:element name="date" type="axlapi:XDateRule">
        </xsd:element>
        <xsd:element name="float" type="axlapi:XFloatRule">
        </xsd:element>
        <xsd:element name="integer" type="axlapi:XIntegerRule">
        </xsd:element>
        <xsd:element name="list" type="axlapi:XListRule">
        </xsd:element>
        <xsd:element name="script" type="axlapi:XScriptRule">
        </xsd:element>
        <xsd:element name="string" type="axlapi:XStringRule">
        </xsd:element>
        <xsd:element name="uri" type="axlapi:XURIRule">
        </xsd:element>
        <xsd:element name="dynamicList" type="axlapi:XDynamicListRule" />
      </xsd:choice>
      <xsd:element name="nullable" type="xsd:boolean" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="subrule" type="axlapi:XRule" minOccurs="0">
      </xsd:element>
      <xsd:element name="enterpriseDefaultName" type="axlapi:XKeyString" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XIntegerRule">
    <xsd:sequence>
      <xsd:element name="default" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="min" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="max" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XStringRule">
    <xsd:sequence>
      <xsd:element name="default" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="regexp" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="length" type="xsd:integer" minOccurs="0">
      </xsd:element>
      <xsd:element name="trimWhiteSpace" type="xsd:boolean" minOccurs="0">
      </xsd:element>
      <xsd:element name="onValidationErrorShowMessage" type="xsd:string" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XFloatRule">
    <xsd:sequence>
      <xsd:element name="default" type="xsd:float" minOccurs="0">
      </xsd:element>
      <xsd:element name="min" type="xsd:float" minOccurs="0">
      </xsd:element>
      <xsd:element name="max" type="xsd:float" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XListRule">
    <xsd:sequence>
      <xsd:element name="defaultKey" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="multiKey" type="xsd:boolean" default="false">
      </xsd:element>
      <xsd:element name="options">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="option" type="axlapi:XListRuleOption" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XListRuleOption" mixed="false">
    <xsd:attribute name="key" type="axlapi:XKeyString" use="required" />
    <xsd:attribute name="text" type="xsd:string" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="XDynamicListRule">
    <xsd:sequence>
      <xsd:element name="defaultKey" type="xsd:string" minOccurs="0" />
      <xsd:element name="tableName" type="axlapi:Name50" nillable="false" />
      <xsd:element name="keyFieldName">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name="integerFieldName" type="axlapi:Name50" />
            <xsd:element name="stringFieldName" type="axlapi:Name50" />
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="descFieldName" type="axlapi:Name50" />
      <xsd:element name="Multikey" type="xsd:boolean" />
      <xsd:element name="filter" type="xsd:string" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XDateRule">
    <xsd:sequence>
      <xsd:element name="dateFormat" default="Short-US" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Any" />
            <xsd:enumeration value="Long" />
            <xsd:enumeration value="Short-US" />
            <xsd:enumeration value="Short-EU" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:element name="default" type="xsd:date" />
        <xsd:element name="defaultNow" type="xsd:boolean" />
      </xsd:choice>
      <xsd:element name="min" type="xsd:date" minOccurs="0" />
      <xsd:element name="max" type="xsd:date" minOccurs="0" />
      <xsd:element name="restrictTo" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Past" />
            <xsd:enumeration value="Future" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XBooleanRule">
    <xsd:sequence>
      <xsd:element name="default" type="xsd:boolean" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XScriptRule">
    <xsd:sequence>
      <xsd:element name="comment" type="xsd:string" />
      <xsd:element name="script">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:whiteSpace value="preserve" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XURIRule">
    <xsd:sequence>
      <xsd:element name="default" type="xsd:anyURI" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="XRuleError">
    <xsd:sequence>
      <xsd:element name="invalidValue" type="xsd:string">
      </xsd:element>
      <xsd:element name="ruleBroken" type="xsd:Name">
      </xsd:element>
      <xsd:element name="errorCode" type="xsd:integer" default="0">
      </xsd:element>
      <xsd:element name="errorText" type="xsd:string">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!-- *********************************************************** -->
  <!-- Service Dependency objects                                 -->
  <!-- *********************************************************** -->
  <xsd:complexType name="XServiceDependency">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:anyURI">
      </xsd:element>
      <xsd:element name="dependencies">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="dependency" type="xsd:nonNegativeInteger" minOccurs="0" maxOccurs="unbounded">
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="help" type="axlapi:String1024" minOccurs="0">
      </xsd:element>
      <xsd:element name="warning" type="axlapi:String1024" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="service" type="xsd:nonNegativeInteger" use="required">
    </xsd:attribute>
  </xsd:complexType>
  <!-- *********************************************************** -->
  <!-- Simple String/Name Restrictions                             -->
  <!-- *********************************************************** -->
  <xsd:simpleType name="Name50">
    <xsd:restriction base="xsd:Name">
      <xsd:maxLength value="50" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Name128">
    <xsd:restriction base="xsd:Name">
      <xsd:maxLength value="128" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Name255">
    <xsd:restriction base="xsd:Name">
      <xsd:maxLength value="255" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String16">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="16" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String32">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="32" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String50">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String64">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String100">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String128">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="128" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String255">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String1024">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="1024" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="String4096">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="4096" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueName50">
    <xsd:restriction base="xsd:Name">
      <xsd:maxLength value="50" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueName128">
    <xsd:restriction base="xsd:Name">
      <xsd:maxLength value="128" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueName255">
    <xsd:restriction base="xsd:Name">
      <xsd:maxLength value="255" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueString32">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="32" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueString50">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueString100">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueString128">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="128" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueString255">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UniqueString1024">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="1024" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- AXLEnums.xsd -->
  <xsd:simpleType name="XASN1RoseOidEncoding">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Changes" />
      <xsd:enumeration value="Use Local Value" />
      <xsd:enumeration value="Use Global Value ISO" />
      <xsd:enumeration value="Use Global Value ECMA" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAdminBoolean">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FALSE" />
      <xsd:enumeration value="TRUE" />
      <xsd:enumeration value="DEFAULT" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAdminError">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Success" />
      <xsd:enumeration value="Failure" />
      <xsd:enumeration value="Invalid range for directory numbers" />
      <xsd:enumeration value="Not yet implemented. See log for more detail" />
      <xsd:enumeration value="Model and class are not compatible.  See log for more detail" />
      <xsd:enumeration value="Missing/invalid parameters. See log for more detail" />
      <xsd:enumeration value="Device does not suppport MLPP" />
      <xsd:enumeration value="Device does not support preemption" />
      <xsd:enumeration value="User is not a valid end user or application user" />
      <xsd:enumeration value="Missing default phone template" />
      <xsd:enumeration value="Encountered unexpected database datatype.  See log for more detail" />
      <xsd:enumeration value="Updated failed. A required item was not found in the database" />
      <xsd:enumeration value="The Cisco CallManager Group cannot be deleted because it is used by related records. Click Dependency Records to view related records and remove this Cisco CallManager Group from any item that is using it then try again." />
      <xsd:enumeration value="One or more Cisco CallManager Groups could not be deleted because it is used by related records. Select a Cisco CallManager Group and click the Dependancy Records link on the Cisco CallManager Configuration page to see what is using it." />
      <xsd:enumeration value="Cannot create DNs or duplicate DNs for the ports. Please check if a DN range is available." />
      <xsd:enumeration value="Partition name cannot be empty string." />
      <xsd:enumeration value="Change failed - Current Password is incorrect." />
      <xsd:enumeration value="Change failed - New Password does not match Confirm Password." />
      <xsd:enumeration value="Change failed - Current PIN is incorrect." />
      <xsd:enumeration value="Change failed - New PIN does not match Confirm PIN." />
      <xsd:enumeration value="Fastdials index already in use. Please choose another index." />
      <xsd:enumeration value="Fastdials phone number already in use. Please choose another phone number." />
      <xsd:enumeration value="Cisco Unity Connection Server returned a SQL Exception.  Please check the log file." />
      <xsd:enumeration value="Unable to delete user account from Cisco Unity Connection Server.  Please check the log file." />
      <xsd:enumeration value="File uploaded does not have extension .lic.  Please upload a license file with extension .lic." />
      <xsd:enumeration value="A file with this name already exists in the license file directory.  Please upload a file with a different name." />
      <xsd:enumeration value="Unable to obtain certificate for this IP address/Port.  SRST reference has been changed to non-secured. Please disable the security services on the gateway if you do not use the security feature." />
      <xsd:enumeration value="DN/Route Pattern must be the last search parameter when using the Search Within Results option." />
      <xsd:enumeration value="Route Group Name and Directory Number are not allowed in the same search." />
      <xsd:enumeration value="user is not member of super user group. Cannot add to groups the roles which are only accessible to super users" />
      <xsd:enumeration value="Only super users can update members of super user groups" />
      <xsd:enumeration value="Users who are not super users cannot add him/herself to groups" />
      <xsd:enumeration value="Propagation failed for some devices. See log for a list of failed devices." />
      <xsd:enumeration value="Change failed - Credential locked. Please contact your administrator." />
      <xsd:enumeration value="Change failed - Credential locked due to inactivity. Please contact your administrator." />
      <xsd:enumeration value="Unknown credential validation error.  Please contact your administrator." />
      <xsd:enumeration value="Wrong Credential." />
      <xsd:enumeration value="Administrative Lock." />
      <xsd:enumeration value="Hack Lock." />
      <xsd:enumeration value="Inactive Lock." />
      <xsd:enumeration value="Expired Lock." />
      <xsd:enumeration value="Expired Lock (with ability to change)." />
      <xsd:enumeration value="End user status is INACTIVE in LDAP." />
      <xsd:enumeration value="LDAP authentication enabled. UpdateCredential failure." />
      <xsd:enumeration value="Invalid credential length." />
      <xsd:enumeration value="Trivial credential." />
      <xsd:enumeration value="Duplicate credential." />
      <xsd:enumeration value="Too recently used Credential." />
      <xsd:enumeration value="User does not have permission to change this credential." />
      <xsd:enumeration value="There is no credential value for the given credential name." />
      <xsd:enumeration value="There is no credential type for the given credential name." />
      <xsd:enumeration value="LDAP communication error. Please check log file." />
      <xsd:enumeration value="User type not defined. Please check log file." />
      <xsd:enumeration value="Failed to update Credential. Please check log file." />
      <xsd:enumeration value="Not a valid application user. Please check log file." />
      <xsd:enumeration value="Database communication error. Please check log file." />
      <xsd:enumeration value="Invalid credential information. Please check log file." />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAlarmSeverity">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Emergency" />
      <xsd:enumeration value="Alert" />
      <xsd:enumeration value="Critical" />
      <xsd:enumeration value="Error" />
      <xsd:enumeration value="Warning" />
      <xsd:enumeration value="Notice" />
      <xsd:enumeration value="Informational" />
      <xsd:enumeration value="Debug" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAppOrDeviceReroute">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Redirect to App" />
      <xsd:enumeration value="Redirect to Device" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAppServer">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Cisco Unity Voice Mail 4.x or later" />
      <xsd:enumeration value="Cisco Unity Connection" />
      <xsd:enumeration value="Cisco Unified Presence Server" />
      <xsd:enumeration value="CUMA Provisioning Server" />
      <xsd:enumeration value="CER Location Management" />
      <xsd:enumeration value="Cisco Web Dialer" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAppServerContent">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNITY KUBRIK" />
      <xsd:enumeration value="UNITY PRE KUBRIK" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XApplication">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Cisco Call Manager Administration" />
      <xsd:enumeration value="Cisco Call Manager Serviceability" />
      <xsd:enumeration value="Cisco Computer Telephone Interface (CTI)" />
      <xsd:enumeration value="Cisco Call Manager AXL Database" />
      <xsd:enumeration value="Cisco Extension Mobility" />
      <xsd:enumeration value="Cisco Call Manager End User" />
      <xsd:enumeration value="Cisco Unified Reporting" />
      <xsd:enumeration value="Cisco Call Manager Dialed Number Analyser" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XApplicationDialRule">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Original Dial Rule" />
      <xsd:enumeration value="Directory Dial Rule" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAuthenticationMode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="By Authentication String" />
      <xsd:enumeration value="By Null String" />
      <xsd:enumeration value="By Existing Certificate (precedence to LSC)" />
      <xsd:enumeration value="By Existing Certificate (precedence to MIC)" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XAutoAnswer">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Auto Answer Off" />
      <xsd:enumeration value="Auto Answer with Headset" />
      <xsd:enumeration value="Auto Answer with Speakerphone" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATFile">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Insert Files" />
      <xsd:enumeration value="Export Files" />
      <xsd:enumeration value="Report Files" />
      <xsd:enumeration value="Custom Files" />
      <xsd:enumeration value="Log Files" />
      <xsd:enumeration value="BAT Excel Template" />
      <xsd:enumeration value="Tar Files" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATFileSubClause">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Specific" />
      <xsd:enumeration value="All" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATFrequency">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Once" />
      <xsd:enumeration value="Monthly" />
      <xsd:enumeration value="Weekly" />
      <xsd:enumeration value="Daily" />
      <xsd:enumeration value="Hourly" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATFunction">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Insert Phones - All Details" />
      <xsd:enumeration value="Insert Phones - Specific Details" />
      <xsd:enumeration value="Insert Users" />
      <xsd:enumeration value="Insert UDP - All Details" />
      <xsd:enumeration value="Insert UDP - Specific Details" />
      <xsd:enumeration value="Insert Gateways" />
      <xsd:enumeration value="Insert CAT6k FXS Ports" />
      <xsd:enumeration value="Insert Pickup Groups" />
      <xsd:enumeration value="Insert Forced Authorization Codes" />
      <xsd:enumeration value="Insert Client Matter Codes" />
      <xsd:enumeration value="Insert Phones/users" />
      <xsd:enumeration value="Insert Managers" />
      <xsd:enumeration value="Insert Assistants" />
      <xsd:enumeration value="Insert Manager/Assistants" />
      <xsd:enumeration value="Delete Phones - Query" />
      <xsd:enumeration value="Delete UDP - Query" />
      <xsd:enumeration value="Delete Users - Query" />
      <xsd:enumeration value="Delete Managers - Query" />
      <xsd:enumeration value="Delete Assistants - Query" />
      <xsd:enumeration value="Delete Lines - Query" />
      <xsd:enumeration value="Delete Pickup Groups - Query" />
      <xsd:enumeration value="Delete Client Matter Codes" />
      <xsd:enumeration value="Delete Forced Authorization Codes" />
      <xsd:enumeration value="Delete Gateways - Query" />
      <xsd:enumeration value="Delete Phones - Custom File" />
      <xsd:enumeration value="Delete Users - Custom File" />
      <xsd:enumeration value="Delete Managers - Custom File" />
      <xsd:enumeration value="Delete CAT6k FXS Ports" />
      <xsd:enumeration value="Delete Managers/Assistants" />
      <xsd:enumeration value="Update Phones - Query" />
      <xsd:enumeration value="Update Users - Query" />
      <xsd:enumeration value="Update Phones - Custom File" />
      <xsd:enumeration value="Update Users - Custom File" />
      <xsd:enumeration value="Update CAT6k FXS Ports - Custom File" />
      <xsd:enumeration value="Phone Add Lines" />
      <xsd:enumeration value="Reset/Restart Phones Query" />
      <xsd:enumeration value="Reset/Restart Phones Custom File" />
      <xsd:enumeration value="Generate Phone Reports" />
      <xsd:enumeration value="Generate User Reports" />
      <xsd:enumeration value="Generate Manager Reports" />
      <xsd:enumeration value="Generate Assistant Reports" />
      <xsd:enumeration value="Generate User Device Profile Reports" />
      <xsd:enumeration value="Generate Gateway Reports" />
      <xsd:enumeration value="Export Phones - All Details" />
      <xsd:enumeration value="Export Phones - Specific Details" />
      <xsd:enumeration value="Export UDP - All Details" />
      <xsd:enumeration value="Export UDP - Specific Details" />
      <xsd:enumeration value="Export Users" />
      <xsd:enumeration value="Reset users Pwd/Pin Query" />
      <xsd:enumeration value="Reset users Pwd/Pin Custom" />
      <xsd:enumeration value="Phone CAPF Configuration" />
      <xsd:enumeration value="Generate UDP" />
      <xsd:enumeration value="Delete Assistants - Custom File" />
      <xsd:enumeration value="Add Phone File Format" />
      <xsd:enumeration value="Add UDP File Format" />
      <xsd:enumeration value="Add User File Format" />
      <xsd:enumeration value="Phone File Format" />
      <xsd:enumeration value="UDP File Format" />
      <xsd:enumeration value="User File Format" />
      <xsd:enumeration value="Delete UDP - Custom File" />
      <xsd:enumeration value="Delete VG200 Gateways - Custom File" />
      <xsd:enumeration value="Validate Phones - All Details" />
      <xsd:enumeration value="Validate Phones - Specific Details" />
      <xsd:enumeration value="Validate UDP - All Details" />
      <xsd:enumeration value="Validate UDP - Specific Details" />
      <xsd:enumeration value="Validate Users" />
      <xsd:enumeration value="UDP Add Lines" />
      <xsd:enumeration value="Update Phones - CSV File" />
      <xsd:enumeration value="Update User Device Profiles - CSV File" />
      <xsd:enumeration value="Update Lines - Query" />
      <xsd:enumeration value="Validate Phones/Users" />
      <xsd:enumeration value="BAT Excel CSV Tool" />
      <xsd:enumeration value="Manager File Format" />
      <xsd:enumeration value="Assistant File Format" />
      <xsd:enumeration value="Add Phones Users File Format" />
      <xsd:enumeration value="Migrate Phones - SCCP TO SIP" />
      <xsd:enumeration value="Export Configuration" />
      <xsd:enumeration value="Import Configuration" />
      <xsd:enumeration value="Update CUP Users - Custom File" />
      <xsd:enumeration value="Export CUP Users" />
      <xsd:enumeration value="Populate/Depopulate Region Matrix" />
      <xsd:enumeration value="Update Line Appearance - Custom File" />
      <xsd:enumeration value="Export Line Appearance" />
      <xsd:enumeration value="Insert Access List" />
      <xsd:enumeration value="Delete Access List" />
      <xsd:enumeration value="Export Access List" />
      <xsd:enumeration value="Access List File Format" />
      <xsd:enumeration value="Insert Remote Destination Profiles" />
      <xsd:enumeration value="Delete Remote Destination Profiles" />
      <xsd:enumeration value="Export Remote Destination Profiles" />
      <xsd:enumeration value="Insert Remote Destination" />
      <xsd:enumeration value="Delete Remote Destination" />
      <xsd:enumeration value="Export Remote Destination" />
      <xsd:enumeration value="Remote Destination File Format" />
      <xsd:enumeration value="Remote Destination Profile File Format" />
      <xsd:enumeration value="Add Remote Destination Profile File Format" />
      <xsd:enumeration value="config Dependency File" />
      <xsd:enumeration value="Update Intercom DNs - Query" />
      <xsd:enumeration value="Insert Intercom DNs" />
      <xsd:enumeration value="Add Gateway File Format" />
      <xsd:enumeration value="Gateway File Format" />
      <xsd:enumeration value="Insert Time of Day Access" />
      <xsd:enumeration value="Delete Time of Day Access" />
      <xsd:enumeration value="Export Time of Day Access" />
      <xsd:enumeration value="Time of Day Access Format" />
      <xsd:enumeration value="Validate Configuration Items" />
      <xsd:enumeration value="Delete Unassigned DN - Query" />
      <xsd:enumeration value="Insert UDP Intercom DNs" />
      <xsd:enumeration value="Phone Migration" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATJobStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Pending" />
      <xsd:enumeration value="Stop Requested" />
      <xsd:enumeration value="Processing" />
      <xsd:enumeration value="Completed" />
      <xsd:enumeration value="InComplete" />
      <xsd:enumeration value="Hold" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATResultStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Success" />
      <xsd:enumeration value="Error" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATTarget">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Phones" />
      <xsd:enumeration value="Users" />
      <xsd:enumeration value="UDP" />
      <xsd:enumeration value="Gateways" />
      <xsd:enumeration value="CAT6k FXS Ports" />
      <xsd:enumeration value="Lines" />
      <xsd:enumeration value="Pickup Groups" />
      <xsd:enumeration value="Forced Authorization Codes" />
      <xsd:enumeration value="Client Matter Codes" />
      <xsd:enumeration value="CAPF" />
      <xsd:enumeration value="Phones/users" />
      <xsd:enumeration value="Managers" />
      <xsd:enumeration value="Assistants" />
      <xsd:enumeration value="Managers Assistants" />
      <xsd:enumeration value="Import/Export" />
      <xsd:enumeration value="CUP Users" />
      <xsd:enumeration value="User Line Appearance" />
      <xsd:enumeration value="Access Lists" />
      <xsd:enumeration value="Remote Destination Profiles" />
      <xsd:enumeration value="Remote Destination" />
      <xsd:enumeration value="Time of Day Access" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBATUsage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Select" />
      <xsd:enumeration value="Set Values" />
      <xsd:enumeration value="File Format" />
      <xsd:enumeration value="UI Values" />
      <xsd:enumeration value="System File Format" />
      <xsd:enumeration value="Display Query" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBLFSDOption">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Pickup" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBandwidth">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Keep Current Setting" />
      <xsd:enumeration value="Use System Default" />
      <xsd:enumeration value="G.723" />
      <xsd:enumeration value="G.729" />
      <xsd:enumeration value="G.722" />
      <xsd:enumeration value="GSM" />
      <xsd:enumeration value="G.728" />
      <xsd:enumeration value="G.711" />
      <xsd:enumeration value="Wideband" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBarge">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Off" />
      <xsd:enumeration value="Barge" />
      <xsd:enumeration value="CBarge" />
      <xsd:enumeration value="Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBillingserverprotocol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SFTP" />
      <xsd:enumeration value="FTP" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBitPos">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="bit 1" />
      <xsd:enumeration value="bit 2" />
      <xsd:enumeration value="bit 3" />
      <xsd:enumeration value="bit 4" />
      <xsd:enumeration value="bit 5" />
      <xsd:enumeration value="bit 6" />
      <xsd:enumeration value="bit 7" />
      <xsd:enumeration value="bit 8" />
      <xsd:enumeration value="bit 9" />
      <xsd:enumeration value="bit 10" />
      <xsd:enumeration value="bit 11" />
      <xsd:enumeration value="bit 12" />
      <xsd:enumeration value="bit 13" />
      <xsd:enumeration value="bit 14" />
      <xsd:enumeration value="bit 15" />
      <xsd:enumeration value="bit 16" />
      <xsd:enumeration value="bit 17" />
      <xsd:enumeration value="bit 18" />
      <xsd:enumeration value="bit 19" />
      <xsd:enumeration value="bit 20" />
      <xsd:enumeration value="bit 21" />
      <xsd:enumeration value="bit 22" />
      <xsd:enumeration value="bit 23" />
      <xsd:enumeration value="bit 24" />
      <xsd:enumeration value="bit 25" />
      <xsd:enumeration value="bit 26" />
      <xsd:enumeration value="bit 27" />
      <xsd:enumeration value="bit 28" />
      <xsd:enumeration value="bit 29" />
      <xsd:enumeration value="bit 30" />
      <xsd:enumeration value="bit 31" />
      <xsd:enumeration value="bit 32" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBoolean">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No" />
      <xsd:enumeration value="Yes" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XBriProtocol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="BRI NET3" />
      <xsd:enumeration value="NI" />
      <xsd:enumeration value="QSIG" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCFACSSActivationPolicy">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Use System Default" />
      <xsd:enumeration value="With Configured CSS" />
      <xsd:enumeration value="With Activating Device/Line CSS" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCSUParam">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="0dB" />
      <xsd:enumeration value="-7.5dB" />
      <xsd:enumeration value="-15dB" />
      <xsd:enumeration value="-22.5dB" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCallInfoDisplay">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Original Dialed Number" />
      <xsd:enumeration value="Redirected Dialed Number" />
      <xsd:enumeration value="Caller Number" />
      <xsd:enumeration value="Caller Name" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCallState">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="On Hook" />
      <xsd:enumeration value="Connected" />
      <xsd:enumeration value="On Hold" />
      <xsd:enumeration value="Ring In" />
      <xsd:enumeration value="Off Hook" />
      <xsd:enumeration value="Connected Transfer" />
      <xsd:enumeration value="Digits After First" />
      <xsd:enumeration value="Connected Conference" />
      <xsd:enumeration value="Ring Out" />
      <xsd:enumeration value="Off Hook With Feature" />
      <xsd:enumeration value="Remote In Use" />
      <xsd:enumeration value="Connected No Feature" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCallerFilterMask">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Directory Number" />
      <xsd:enumeration value="Not Available" />
      <xsd:enumeration value="Private" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCallerID">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ANI" />
      <xsd:enumeration value="DNIS" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCallingPartySelection">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Originator" />
      <xsd:enumeration value="First Redirect Number" />
      <xsd:enumeration value="Last Redirect Number" />
      <xsd:enumeration value="First Redirect Number (External)" />
      <xsd:enumeration value="Last Redirect Number (External)" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCertificate">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Unknown" />
      <xsd:enumeration value="No Certificate Exists" />
      <xsd:enumeration value="Locally Significant Certificate" />
      <xsd:enumeration value="Manufacture Installed Certificate Exists" />
      <xsd:enumeration value="Locally Significant Certificate and Manufacture Installed Certificate Exists" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCertificateOperation">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Pending Operation" />
      <xsd:enumeration value="Install/Upgrade" />
      <xsd:enumeration value="Delete" />
      <xsd:enumeration value="Troubleshoot" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCertificateStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Operation Pending" />
      <xsd:enumeration value="Upgrade Success" />
      <xsd:enumeration value="Delete Success" />
      <xsd:enumeration value="Troubleshoot Success" />
      <xsd:enumeration value="Upgrade Failed" />
      <xsd:enumeration value="Delete Failed" />
      <xsd:enumeration value="Troubleshoot Failed" />
      <xsd:enumeration value="Upgrade Failed: Invalid LSC" />
      <xsd:enumeration value="Upgrade Failed: Invalid Authentication String" />
      <xsd:enumeration value="Upgrade Failed: Invalid MIC" />
      <xsd:enumeration value="Upgrade Failed: Invalid Credentials" />
      <xsd:enumeration value="Upgrade Failed: Phone Communication Failure" />
      <xsd:enumeration value="Upgrade Failed: Key Generation Failed/Timeout" />
      <xsd:enumeration value="Upgrade Failed: CA Communication Failure" />
      <xsd:enumeration value="Upgrade Failed: CA Rejected Connection" />
      <xsd:enumeration value="Upgrade Failed: User Initiated Request Late/Timedout" />
      <xsd:enumeration value="Delete Failed: Invalid LSC" />
      <xsd:enumeration value="Delete Failed: Invalid Authentication String" />
      <xsd:enumeration value="Delete Failed: Invalid MIC" />
      <xsd:enumeration value="Delete Failed: Invalid Credentials" />
      <xsd:enumeration value="Delete Failed: Phone Communication Failure" />
      <xsd:enumeration value="Delete Failed: Key Generation Failed/Timeout" />
      <xsd:enumeration value="Delete Failed: CA Communication Failure" />
      <xsd:enumeration value="Delete Failed: CA Rejected Connection" />
      <xsd:enumeration value="Delete Failed: User Initiated Request Late/Timedout" />
      <xsd:enumeration value="Troubleshoot Failed: Invalid LSC" />
      <xsd:enumeration value="Troubleshoot Failed: Invalid Authentication String" />
      <xsd:enumeration value="Troubleshoot Failed: Invalid MIC" />
      <xsd:enumeration value="Troubleshoot Failed: Invalid Credentials" />
      <xsd:enumeration value="Troubleshoot Failed: Phone Communication Failure" />
      <xsd:enumeration value="Troubleshoot Failed: Key Generation Failed/Timeout" />
      <xsd:enumeration value="Troubleshoot Failed: User Initiated Request Late/Timedout" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XClass">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Phone" />
      <xsd:enumeration value="Gateway" />
      <xsd:enumeration value="Conference Bridge" />
      <xsd:enumeration value="Media Termination Point" />
      <xsd:enumeration value="Route List" />
      <xsd:enumeration value="Voice Mail" />
      <xsd:enumeration value="CTI Route Point" />
      <xsd:enumeration value="Music On Hold" />
      <xsd:enumeration value="Simulation" />
      <xsd:enumeration value="Pilot" />
      <xsd:enumeration value="GateKeeper" />
      <xsd:enumeration value="Add-on modules" />
      <xsd:enumeration value="Hidden Phone" />
      <xsd:enumeration value="Trunk" />
      <xsd:enumeration value="Tone Announcement Player" />
      <xsd:enumeration value="Remote Destination Profile" />
      <xsd:enumeration value="Remote Destination Profile Template" />
      <xsd:enumeration value="Gateway Template" />
      <xsd:enumeration value="UDP Template" />
      <xsd:enumeration value="Phone Template" />
      <xsd:enumeration value="Device Profile" />
      <xsd:enumeration value="Invalid" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XClientAppModel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Standard" />
      <xsd:enumeration value="CUMA Client" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XClockReference">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Network" />
      <xsd:enumeration value="Internal" />
      <xsd:enumeration value="Span 1" />
      <xsd:enumeration value="Span 2" />
      <xsd:enumeration value="Span 3" />
      <xsd:enumeration value="Span 4" />
      <xsd:enumeration value="Span 5" />
      <xsd:enumeration value="Span 6" />
      <xsd:enumeration value="Span 7" />
      <xsd:enumeration value="Span 8" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XConfigInputData">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Application Dial Rules" />
      <xsd:enumeration value="Cisco Unified Communications Manager" />
      <xsd:enumeration value="Cisco Unified Communications Manager Group" />
      <xsd:enumeration value="CSS (Class of Control)" />
      <xsd:enumeration value="Date/Time Group" />
      <xsd:enumeration value="Device Pool" />
      <xsd:enumeration value="Enterprise Parameter" />
      <xsd:enumeration value="Location" />
      <xsd:enumeration value="Partitions (Class of Control)" />
      <xsd:enumeration value="Phone NTP Reference" />
      <xsd:enumeration value="Region" />
      <xsd:enumeration value="Route Filter" />
      <xsd:enumeration value="Server" />
      <xsd:enumeration value="Service Parameter" />
      <xsd:enumeration value="SRST" />
      <xsd:enumeration value="Security Profile (Phone &amp; SIP Trunk)" />
      <xsd:enumeration value="Time Period (Class of Control)" />
      <xsd:enumeration value="Time Schedule (Class of Control)" />
      <xsd:enumeration value="Translation Pattern" />
      <xsd:enumeration value="AAR Group" />
      <xsd:enumeration value="Annunciator" />
      <xsd:enumeration value="Conference Bridge" />
      <xsd:enumeration value="Media Resource Group" />
      <xsd:enumeration value="Media Resource Group List" />
      <xsd:enumeration value="Media Termination Point" />
      <xsd:enumeration value="Physical Location" />
      <xsd:enumeration value="Device Mobility group" />
      <xsd:enumeration value="Transcoder" />
      <xsd:enumeration value="SIP Realm" />
      <xsd:enumeration value="Application User" />
      <xsd:enumeration value="User Group" />
      <xsd:enumeration value="Role" />
      <xsd:enumeration value="Application User CAPF Profile" />
      <xsd:enumeration value="Presence Group" />
      <xsd:enumeration value="Credential Policy Default" />
      <xsd:enumeration value="Credential Policy" />
      <xsd:enumeration value="LDAP System" />
      <xsd:enumeration value="End User" />
      <xsd:enumeration value="End User CAPF Profile" />
      <xsd:enumeration value="Softkey Template" />
      <xsd:enumeration value="Gate Keeper" />
      <xsd:enumeration value="Trunk" />
      <xsd:enumeration value="SIP Profile" />
      <xsd:enumeration value="Phone Services" />
      <xsd:enumeration value="Forced Authorization Codes" />
      <xsd:enumeration value="Phone Button Template" />
      <xsd:enumeration value="Directory Lookup Dial Rules" />
      <xsd:enumeration value="Common Phone Profile" />
      <xsd:enumeration value="Client Matter Codes" />
      <xsd:enumeration value="Cisco Attendant Console User" />
      <xsd:enumeration value="Call Park" />
      <xsd:enumeration value="Call Pickup Group" />
      <xsd:enumeration value="Directory Number" />
      <xsd:enumeration value="Message Waiting Numbers" />
      <xsd:enumeration value="MOH Server" />
      <xsd:enumeration value="MeetMe Number" />
      <xsd:enumeration value="Device Mobility Info" />
      <xsd:enumeration value="DHCP Server" />
      <xsd:enumeration value="DHCP Subnet" />
      <xsd:enumeration value="Gateway" />
      <xsd:enumeration value="Voice Mail Pilot" />
      <xsd:enumeration value="Voice Mail Profile" />
      <xsd:enumeration value="Voice Mail Port" />
      <xsd:enumeration value="Device Defaults" />
      <xsd:enumeration value="Device Profile" />
      <xsd:enumeration value="Common Device Configuration" />
      <xsd:enumeration value="Cisco Attendant Console Pilot Point" />
      <xsd:enumeration value="CTI Route Point" />
      <xsd:enumeration value="Application Server" />
      <xsd:enumeration value="Phone" />
      <xsd:enumeration value="Directed Call Park" />
      <xsd:enumeration value="SIP Dial Rules" />
      <xsd:enumeration value="LDAP Directory" />
      <xsd:enumeration value="LDAP Authentication" />
      <xsd:enumeration value="MLPP Domain" />
      <xsd:enumeration value="Line Group" />
      <xsd:enumeration value="Route Group" />
      <xsd:enumeration value="Recording Profile" />
      <xsd:enumeration value="Hunt List" />
      <xsd:enumeration value="Route List" />
      <xsd:enumeration value="Hunt Pilot" />
      <xsd:enumeration value="Remote Destination" />
      <xsd:enumeration value="Intercom Route Partition" />
      <xsd:enumeration value="Intercom CSS" />
      <xsd:enumeration value="Access List" />
      <xsd:enumeration value="Remote Destination Profile" />
      <xsd:enumeration value="Route Pattern" />
      <xsd:enumeration value="Called Party Transformation Pattern" />
      <xsd:enumeration value="SIP Route Pattern" />
      <xsd:enumeration value="Intercom Directory Number" />
      <xsd:enumeration value="SlotConfiguration" />
      <xsd:enumeration value="PRI" />
      <xsd:enumeration value="BRI" />
      <xsd:enumeration value="T1CAS" />
      <xsd:enumeration value="FXS" />
      <xsd:enumeration value="FXO" />
      <xsd:enumeration value="ANALOG" />
      <xsd:enumeration value="H323" />
      <xsd:enumeration value="VGC" />
      <xsd:enumeration value="CAT6K" />
      <xsd:enumeration value="CAT6K E1 VOIP" />
      <xsd:enumeration value="CAT6K T1 PRI" />
      <xsd:enumeration value="Mobile Voice Access" />
      <xsd:enumeration value="Resource Priority Namespace Network Domain" />
      <xsd:enumeration value="Mobility Configuration" />
      <xsd:enumeration value="Intercom Translation Pattern" />
      <xsd:enumeration value="Resource Priority Namespace List" />
      <xsd:enumeration value="Calling Party Transformation Pattern" />
      <xsd:enumeration value="CUMA Server Security Profile" />
      <xsd:enumeration value="Time Of Day Access" />
      <xsd:enumeration value="CAT6K T1 CAS" />
      <xsd:enumeration value="Geo Location" />
      <xsd:enumeration value="Geo Location Filter" />
      <xsd:enumeration value="Logical Partition Policy" />
      <xsd:enumeration value="Enterprise Phone Configuration" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XConfigInputDataGrouping">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="System Data" />
      <xsd:enumeration value="Call Routing Data" />
      <xsd:enumeration value="Media Resources" />
      <xsd:enumeration value="User Data" />
      <xsd:enumeration value="Device Data" />
      <xsd:enumeration value="Voice Mail Data" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XConnectedPBX">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Siemens Hicom" />
      <xsd:enumeration value="Ericsson MD-110" />
      <xsd:enumeration value="Alcatel PBX" />
      <xsd:enumeration value="Meridian Option 11C" />
      <xsd:enumeration value="Lucent Definity G3" />
      <xsd:enumeration value="IPC MX" />
      <xsd:enumeration value="Cisco CCM" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCountry">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Argentina" />
      <xsd:enumeration value="Australia" />
      <xsd:enumeration value="Austria" />
      <xsd:enumeration value="Belgium" />
      <xsd:enumeration value="Brazil" />
      <xsd:enumeration value="Canada" />
      <xsd:enumeration value="China" />
      <xsd:enumeration value="Colombia" />
      <xsd:enumeration value="Cyprus" />
      <xsd:enumeration value="Czech Republic" />
      <xsd:enumeration value="Denmark" />
      <xsd:enumeration value="Egypt" />
      <xsd:enumeration value="Finland" />
      <xsd:enumeration value="France" />
      <xsd:enumeration value="Germany" />
      <xsd:enumeration value="Ghana" />
      <xsd:enumeration value="Greece" />
      <xsd:enumeration value="Hong Kong" />
      <xsd:enumeration value="Hungary" />
      <xsd:enumeration value="Iceland" />
      <xsd:enumeration value="India" />
      <xsd:enumeration value="Indonesia" />
      <xsd:enumeration value="Ireland" />
      <xsd:enumeration value="Israel" />
      <xsd:enumeration value="Italy" />
      <xsd:enumeration value="Japan" />
      <xsd:enumeration value="Jordan" />
      <xsd:enumeration value="Kenya" />
      <xsd:enumeration value="Korea Republic" />
      <xsd:enumeration value="Lebanon" />
      <xsd:enumeration value="Luxembourg" />
      <xsd:enumeration value="Malaysia" />
      <xsd:enumeration value="Mexico" />
      <xsd:enumeration value="Nepal" />
      <xsd:enumeration value="Netherlands" />
      <xsd:enumeration value="New Zealand" />
      <xsd:enumeration value="Nigeria" />
      <xsd:enumeration value="Norway" />
      <xsd:enumeration value="Pakistan" />
      <xsd:enumeration value="Panama" />
      <xsd:enumeration value="Peru" />
      <xsd:enumeration value="Philippines" />
      <xsd:enumeration value="Poland" />
      <xsd:enumeration value="Portugal" />
      <xsd:enumeration value="Russian Federation" />
      <xsd:enumeration value="Saudi Arabia" />
      <xsd:enumeration value="Singapore" />
      <xsd:enumeration value="Slovakia" />
      <xsd:enumeration value="Slovenia" />
      <xsd:enumeration value="South Africa" />
      <xsd:enumeration value="Spain" />
      <xsd:enumeration value="Sweden" />
      <xsd:enumeration value="Switzerland" />
      <xsd:enumeration value="Taiwan" />
      <xsd:enumeration value="Thailand" />
      <xsd:enumeration value="Turkey" />
      <xsd:enumeration value="United Kingdom" />
      <xsd:enumeration value="United States" />
      <xsd:enumeration value="Venezuela" />
      <xsd:enumeration value="Zimbabwe" />
      <xsd:enumeration value="Itu" />
      <xsd:enumeration value="Chile" />
      <xsd:enumeration value="Bulgaria" />
      <xsd:enumeration value="Croatia" />
      <xsd:enumeration value="Romania" />
      <xsd:enumeration value="Serbia and Montenegro" />
      <xsd:enumeration value="United Arab Emirates" />
      <xsd:enumeration value="Oman" />
      <xsd:enumeration value="Kuwait" />
      <xsd:enumeration value="Algeria" />
      <xsd:enumeration value="Bahrain" />
      <xsd:enumeration value="Iraq" />
      <xsd:enumeration value="Mauritania" />
      <xsd:enumeration value="Republic of Montenegro" />
      <xsd:enumeration value="Morocco" />
      <xsd:enumeration value="Qatar" />
      <xsd:enumeration value="Republic of Serbia" />
      <xsd:enumeration value="Sudan" />
      <xsd:enumeration value="Tunisia" />
      <xsd:enumeration value="Vietnam" />
      <xsd:enumeration value="Yemen" />
      <xsd:enumeration value="Lithuania" />
      <xsd:enumeration value="Latvia" />
      <xsd:enumeration value="Estonia" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCredential">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Password" />
      <xsd:enumeration value="PIN" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XCredentialUser">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="End User" />
      <xsd:enumeration value="Application User" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDNDOption">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Ringer Off" />
      <xsd:enumeration value="Call Reject" />
      <xsd:enumeration value="Use Common Phone Profile Setting" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDNUsage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Undefined" />
      <xsd:enumeration value="Primary" />
      <xsd:enumeration value="ICD" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDTMFSignaling">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Preference" />
      <xsd:enumeration value="Out of Band" />
      <xsd:enumeration value="RFC 2833" />
      <xsd:enumeration value="OOB and RFC 2833" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDayOfWeek">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Sun" />
      <xsd:enumeration value="Mon" />
      <xsd:enumeration value="Tue" />
      <xsd:enumeration value="Wed" />
      <xsd:enumeration value="Thu" />
      <xsd:enumeration value="Fri" />
      <xsd:enumeration value="Sat" />
      <xsd:enumeration value="None" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDbErrors">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Failure" />
      <xsd:enumeration value="Success" />
      <xsd:enumeration value="A multi-field uniqueness has been violated on this table.  A combination of 2 or more columns on a table that need to be unique together are not." />
      <xsd:enumeration value="Checkout or checkin successful" />
      <xsd:enumeration value="Checkout or checkin successful using OVERDRAFT" />
      <xsd:enumeration value="Phone cannot have the same line more than once (duplicate NumPlanIndex)" />
      <xsd:enumeration value="Sum of device's line appearance values for maxNumCalls exceed device limitation" />
      <xsd:enumeration value="A line's busy trigger cannot exceed its maxNumCalls setting" />
      <xsd:enumeration value="Post-insert validation of pkid and isCallable in NumPlan failed" />
      <xsd:enumeration value="Update of NumPlan to isCallable = TRUE failed" />
      <xsd:enumeration value="Automatic update of CTIID during insert into DeviceNumPlanMap failed due to overflow" />
      <xsd:enumeration value="Busy Trigger cannot be greater than 1 because the specified device type does not support Call Waiting" />
      <xsd:enumeration value="A DN cannot be associated with this type of Device" />
      <xsd:enumeration value="A DN cannot be associated with the whole GW only a particular port" />
      <xsd:enumeration value="An RP cannot be associated with this type of Device" />
      <xsd:enumeration value="An RP can be associated with the whole GW only and not a particular port" />
      <xsd:enumeration value="An RP can be associated with only a single device of this type" />
      <xsd:enumeration value="The Device is already a member of a Route Group" />
      <xsd:enumeration value="Devices can only be associated with DNs, Route Patterns and Hunt Pilots" />
      <xsd:enumeration value="CTI Ports and CTI Route Points may not be associated with DNs that are in Line Groups" />
      <xsd:enumeration value="Shared Line feature is not supported" />
      <xsd:enumeration value="Shared Line is only for DNs" />
      <xsd:enumeration value="Ring Setting only valid when phone is off hook" />
      <xsd:enumeration value="Auto Answer feature is not supported for this device" />
      <xsd:enumeration value="The Dial Plan of the RouteList should match that of the associated Route Pattern" />
      <xsd:enumeration value="The Gateway already has port(s) assigned to a DN" />
      <xsd:enumeration value="The entire Gateway i.e all ports already assigned to a Route Pattern" />
      <xsd:enumeration value="Maximum calls must be less than or equal to 2 if Multiple Call Display not supported" />
      <xsd:enumeration value="Failure attempting to update isCallable in numbering plan" />
      <xsd:enumeration value="An HP cannot be associated with this type of Device" />
      <xsd:enumeration value="An HP can be associated with only a single device of type Hunt List" />
      <xsd:enumeration value="A device_template patternusage can only be associated with device of typeclass template" />
      <xsd:enumeration value="Message Waiting Lamp Policy not supported for this device" />
      <xsd:enumeration value="Ring Settings for this line are not supported for this device" />
      <xsd:enumeration value="DN assigned CAT6K FXS port not shareable" />
      <xsd:enumeration value="DN assigned to MWI cannot be shared" />
      <xsd:enumeration value="This device does not support the Pickup Alert feature." />
      <xsd:enumeration value="The retrieval code (Prefix + Park Code) already exists." />
      <xsd:enumeration value="The retrieval code record for Directed Call Park cannot be edited directly" />
      <xsd:enumeration value="Audible Message Waiting Indicator is not supported on the device where this line appears" />
      <xsd:enumeration value="Recording is not supported on the device where this line appears" />
      <xsd:enumeration value="Monitoring is not supported on the device where this line appears" />
      <xsd:enumeration value="No more than 5 EndUsers can be subscribed to receive status for a line appearance." />
      <xsd:enumeration value="Intercom line is not shareable" />
      <xsd:enumeration value="Phone cannot have the same Intercom line more than once (duplicate NumPlanIndex)" />
      <xsd:enumeration value="Only one Mobility number each for Handoff, DTMF and IVR is allowed." />
      <xsd:enumeration value="Intercom Default Device cannot be a Device Profile or BAT Template." />
      <xsd:enumeration value="Log Missed Calls option can only be set for devices that support this feature." />
      <xsd:enumeration value="This device has restricted value on maximum call, input value is not valid." />
      <xsd:enumeration value="This device has restricted value on busy trigger, input value is not valid." />
      <xsd:enumeration value="The list of Partition names (Clause) in a Calling Search Space is too long as a result of this operation (more than 1024 characters). Shorten the Partition names or use fewer Partitions in the Calling Search Space." />
      <xsd:enumeration value="The CSS cannot be deleted since gateway(s) is associated with it and useDevicePoolCdpnTransformCSS is false" />
      <xsd:enumeration value="The CSS cannot be deleted since phone(s) is associated with it and useDevicePoolCgpnTransformCSS is false" />
      <xsd:enumeration value="Uniqueness check of pilotNumber + CSSID failed" />
      <xsd:enumeration value="Uniqueness check of Pilot IsDefault = 1 failed" />
      <xsd:enumeration value="Attempt to delete required VM Pilot record; the value of IsDefault = 1" />
      <xsd:enumeration value="Attempt to delete system installed VM Pilot record" />
      <xsd:enumeration value="Uniqueness check of Profile IsDefault = 1 failed" />
      <xsd:enumeration value="Attempt to delete required VM Profile record; the value of IsDefault = 1 " />
      <xsd:enumeration value="Attempt to delete system installed VM Profile record" />
      <xsd:enumeration value="There is another End User already associated with this device as the Digest User (Digest In)" />
      <xsd:enumeration value="You can not change Association type of this Primary Device association." />
      <xsd:enumeration value="You can not change End user of Primary Device association." />
      <xsd:enumeration value="Device is already associated with another End User as Primary device" />
      <xsd:enumeration value="There is another device already associated with this End User as Primary device" />
      <xsd:enumeration value="This device does not qualify as a Mobility Primary device." />
      <xsd:enumeration value="Encountered digest user is already configured with other SIP device. Digest user can be configured either on one third party basic or advanced SIP device or on mutiple Cisco SIP devices." />
      <xsd:enumeration value="Device ID not found" />
      <xsd:enumeration value="Profile ID not found" />
      <xsd:enumeration value="Login Device does not support extension mobility" />
      <xsd:enumeration value="Device EM not enabled" />
      <xsd:enumeration value="No LOGOUT device profile, login/logout not allowed" />
      <xsd:enumeration value="ADP is out-of-syn, login not allowed" />
      <xsd:enumeration value="No default model profile, no mismatch login performed" />
      <xsd:enumeration value="Attempt to update tkClass failed" />
      <xsd:enumeration value="Attempt to insert record into MGCP failed" />
      <xsd:enumeration value="Attempt to insert into MGCPDeviceMember failed" />
      <xsd:enumeration value="Attempt to update MGCP VersionStamp failed" />
      <xsd:enumeration value="Attempt to update Device VersionStamp failed" />
      <xsd:enumeration value="Automatic update of CTIID during insert into Device table failed due to overflow" />
      <xsd:enumeration value="The Class type for this model device was not found" />
      <xsd:enumeration value="The Model type for the specified Product type was not found" />
      <xsd:enumeration value="No DigitalAccessPri entry found for this device" />
      <xsd:enumeration value="An invalid QSIG configuration was detected for this device" />
      <xsd:enumeration value="Attempt to update the MGCP Slot configuration for new MGCP device failed" />
      <xsd:enumeration value="Cannot make changes to OR delete a device while a user is logged in" />
      <xsd:enumeration value="Route List Enabled can be true only for Route List devices" />
      <xsd:enumeration value="Network Hold Audio Source can only be used for devices that support the Music On Hold feature" />
      <xsd:enumeration value="User Hold Audio Source can only be used for devices that support the Music On Hold feature" />
      <xsd:enumeration value="Only devices that support Video feature may set the Retry Video Call As Audio setting to false" />
      <xsd:enumeration value="The specified Device Protocol is not valid for this device" />
      <xsd:enumeration value="The specified Protocol Side is not valid for this device" />
      <xsd:enumeration value="MLPP Preemption must be disabled on devices that do not support the MLPP Preemption feature." />
      <xsd:enumeration value="MLPP Indication must be off on devices that do not support the MLPP Indication feature." />
      <xsd:enumeration value="Only devices that support Localization feature use the User Locale setting" />
      <xsd:enumeration value="Extension Mobility can only be turned on for devices that support Extension Mobility feature." />
      <xsd:enumeration value="AAR Group OR AAR Calling Search Space can only be used for devices that support the AAR feature." />
      <xsd:enumeration value="Device Profile can only be created for devices that support Extension Mobility feature." />
      <xsd:enumeration value="Softkey Template is not valid for this type of device." />
      <xsd:enumeration value="Login Duration is valid only for devices that support Extension Mobility feature." />
      <xsd:enumeration value="Login Time is valid only for devices that support Extension Mobility feature." />
      <xsd:enumeration value="Automatic delete of auto-generated Device record failed" />
      <xsd:enumeration value="Device name format is not correct for this mgcp device" />
      <xsd:enumeration value="Security Profile is required for this device" />
      <xsd:enumeration value="Security Profile is not supported for this device" />
      <xsd:enumeration value="SRTP and Outbound Fast Start cannot be enabled at the same time." />
      <xsd:enumeration value="Device does not support security encryption" />
      <xsd:enumeration value="Device does not support security authentication" />
      <xsd:enumeration value="SIP Dial Rules are not compatible with non-SIP devices." />
      <xsd:enumeration value="The SIP Dial Rule type is not compatible with this device type." />
      <xsd:enumeration value="Duplicate E.164 address for gatekeeper-controlled H.323 device." />
      <xsd:enumeration value="Cannot set DTMF Signaling Method to OOB " />
      <xsd:enumeration value="User Defined Device Profile cannot be deleted if it is in use. " />
      <xsd:enumeration value="Only one device default profile is allowed per model." />
      <xsd:enumeration value="There is at least one device that has extension mobility enabled for this model, device default profile cannot be deleted." />
      <xsd:enumeration value="The model and protocol of the Extension Mobility Logout Profile do not match the model and protocol of the device." />
      <xsd:enumeration value="This device does not support Passing Precedence Level Through UUIE." />
      <xsd:enumeration value="Max number of phones in cluster has been exceeded for install type." />
      <xsd:enumeration value="Feature DND is not supported for this device." />
      <xsd:enumeration value="Device does not support selected DND Option." />
      <xsd:enumeration value="Cannot delete the IP Media Streaming software devices installed on a server by default." />
      <xsd:enumeration value="Device Outbound Call Rollover Feature Restriction." />
      <xsd:enumeration value="The specified Security Profile is not valid for this device type (model and protocol)." />
      <xsd:enumeration value="The Server Based Software Device cannot be deleted." />
      <xsd:enumeration value="Outbound Faststart cannot be enabled. Outbound Faststart requires an MTP and a hardware Transcoder configured through a Media Resource Group List for the device." />
      <xsd:enumeration value="Only devices that support Join Across Lines feature use the Join Across Lines setting" />
      <xsd:enumeration value="Only devices that support Single Button Barge feature use the Single Button Barge setting" />
      <xsd:enumeration value="sRPT cannot be used on a SIP trunk with Security Mode of Authenticated." />
      <xsd:enumeration value="TKPresentationBit ConnectedLine cannt be enabled. TKPresentationBit ConnectedLine requires IsRPIDEnabled to be set to True." />
      <xsd:enumeration value="TKPresentationBit ConnectedName cannt be enabled. TKPresentationBit ConnectedName requires IsRPIDEnabled to be set to True." />
      <xsd:enumeration value="Security Profile used by a device cannot be a CUMA security policy." />
      <xsd:enumeration value="fkCalledSearchSpace_cdpnTransform is not allowed for FXS ports" />
      <xsd:enumeration value="Phone Personalization feature is not supported on the specified device type." />
      <xsd:enumeration value="National, International and Subscriber Prefixes must be empty for SIP trunks" />
      <xsd:enumeration value="Only H225 trunk (gatekeep controlled) and SIP trunk can have non-zero Allocated License Unit" />
      <xsd:enumeration value="Remote Destination Profile and Dual Mode Device can only have Call Reject DND option" />
      <xsd:enumeration value="IsProtected setting can only be true for devices supporting secure tone feature " />
      <xsd:enumeration value="Security Profile used with Protected device must be secure (encrypted)" />
      <xsd:enumeration value="Protected device does not support shared line and all lines on a protected device must have max calls (and busy trigger) set to 1." />
      <xsd:enumeration value="Device does not support SmartClient feature. " />
      <xsd:enumeration value="Remote Cisco Unified Communications Manager is already defined for other ICT Trunk." />
      <xsd:enumeration value="Cannot add more than one IP Media Streaming software devices per type (CFB,MOH,ANN,SVR) per server." />
      <xsd:enumeration value="Cannot use QSIG Variant or ASN1 Rose OID Encoding because QSIG is not enabled for this device. Enable QSIG protocol or tunneling and try again." />
      <xsd:enumeration value="Attempted to insert an invalid product into the device table. Make sure the product is an endpoint device and try again." />
      <xsd:enumeration value="The specified name has invalid characters or is not formatted correctly for this device type." />
      <xsd:enumeration value="The autogenerated profile name has invalid characters or is not formatted correctly for this device type." />
      <xsd:enumeration value="The specified name has invalid characters or is not formatted correctly for this type of device, profile or template." />
      <xsd:enumeration value="Gatekeeper table may only reference devices that are Gatekeepers (model = 122)" />
      <xsd:enumeration value="Failure attempting to insert into Region table" />
      <xsd:enumeration value="URI as a BLF Speed-dial Destination is not allowed for this device with this protocol." />
      <xsd:enumeration value="BLF Destination does not appear to be a valid URI for dialing." />
      <xsd:enumeration value="BLF Destination does not appear to be dialable." />
      <xsd:enumeration value="BLF Directed Call Park number must be of type Directed Call Park." />
      <xsd:enumeration value="BLF Directed Call Park number must be dialable. Numeric Digits (0-9), asterisks (*), and pound(#) are allowed characters." />
      <xsd:enumeration value="The subnet mask is out of range, the first octet value is 223 or less." />
      <xsd:enumeration value="Subnet mask and mask size do not match." />
      <xsd:enumeration value="Failure attempting to insert into RegionMatrix table" />
      <xsd:enumeration value="User must override the default Bandwidth and Video Bandwidth settings" />
      <xsd:enumeration value="No appropriate base product type value found in Mgcp table" />
      <xsd:enumeration value="Propgation of MgcpDeviceMember values to Device table failed" />
      <xsd:enumeration value="Automatic update of Device name failed after MGCP port value update" />
      <xsd:enumeration value="Cannot change from Qsig to non_Qsig if this gateway is in a route group" />
      <xsd:enumeration value="DigitalAccessPri table may only reference devices with matching Device Protocol (DigitalAccessPri)" />
      <xsd:enumeration value="Attempt to change device Qsig value failed" />
      <xsd:enumeration value="E1 gateway can not have g.clear enabled." />
      <xsd:enumeration value="G.Clear is not supported on the PRI interface on this type of gateway." />
      <xsd:enumeration value="Failure attempting to insert into AARDialPrefixMatrix table" />
      <xsd:enumeration value="The standard locations should not be deleted and the configration for the standard location should not be modified other than RSVP policy configurations." />
      <xsd:enumeration value="Failure attempting to update CSS Clause after update in CSSMember table" />
      <xsd:enumeration value="Members of a calling search space must be of the same partition type" />
      <xsd:enumeration value="Cannot modify or delete the installed Default Credential Policy." />
      <xsd:enumeration value="Automatic update of CTIID during insert into CallManager table failed due to overflow" />
      <xsd:enumeration value="CallManager SIP Port cannot match any existing CallManager(s) SIP Secured Port" />
      <xsd:enumeration value="CallManager SIP Secured Port cannot match any existing CallManager(s) SIP Port" />
      <xsd:enumeration value="Failure to insert phone button records for new phone template" />
      <xsd:enumeration value="Failure attempting to add user-definable buttons to PhoneButton table" />
      <xsd:enumeration value="Phone Template may only be assigned to devices that support the phone template feature" />
      <xsd:enumeration value="Extension Mobility login failed - phone button template protocol (SCCP/SIP) mismatch" />
      <xsd:enumeration value="Failure attempting to reconstruct the SoftKeyTemplate table SoftKeySetClause" />
      <xsd:enumeration value="Failure attempting to reconstruct the SoftKeyTemplate table SoftKeyClause" />
      <xsd:enumeration value="Attempt to change an existing template. Templates are not modifiable" />
      <xsd:enumeration value="Attempt to add more than the limit of 16 softkeys per call state." />
      <xsd:enumeration value="Attempt to update a restricted column denied" />
      <xsd:enumeration value="Attempt to update a standard template is denied; can only update a derived template" />
      <xsd:enumeration value="Can not assign the same softkey to the same call state for one softkey template except the Undefined softkey" />
      <xsd:enumeration value="Attempt to delete CallManagerGroup record defined as the default tftp record" />
      <xsd:enumeration value="Invalid attempt to change status of CallManagerGroup default tftp record to non-default" />
      <xsd:enumeration value="Failure in triggered insert into SoftkeyTemplateServiceMap during insert of a new SoftkeyTemplate" />
      <xsd:enumeration value="Encountered malformed base template record when attempting to insert a new Softkey Template" />
      <xsd:enumeration value="Attempt to update a Standard template denied. Only user-defined templates may be updated" />
      <xsd:enumeration value="Attempt to delete a Standard template denied. Only user-defined templates may be delete" />
      <xsd:enumeration value="Attempt to insert a Standard template denied. Only user-defined templates may be inserted" />
      <xsd:enumeration value="Invalid internal key encountered attempting to insert user template" />
      <xsd:enumeration value="Cannot map this Service to a Softkey Template because the Service has no Softkeys defined." />
      <xsd:enumeration value="Cannot remove the Cisco CallManager softkeys from a Softkey Template." />
      <xsd:enumeration value="You cannot delete this SoftKey Template because it is the default SoftKey Template." />
      <xsd:enumeration value="Failure in triggered insert of new record(s) into SoftkeySet during insert of new SoftkeyTemplateServiceMap record" />
      <xsd:enumeration value="Attempt to delete a Standard template denied. Only user-defined templates may be deleted" />
      <xsd:enumeration value="Attempt to directly delete last service for this user template from SoftkeyTemplateServiceMap table denied" />
      <xsd:enumeration value="Attempt to delete CallManager service denied. CallManager is an essential service" />
      <xsd:enumeration value="Failure attempting to update the Qsig value in RouteGroup" />
      <xsd:enumeration value="Cannot mix H323 or Mixed Non-QSIG with PRI QSIG" />
      <xsd:enumeration value="Invalid Qsig configuration: at least one QSIG variety must be declared" />
      <xsd:enumeration value="The selected device or pattern is already associated with a Route Pattern" />
      <xsd:enumeration value="Only individual ports or the whole GW can be assigned to a Route Group. Not both." />
      <xsd:enumeration value="Failure attempting to update a device QSIG type value" />
      <xsd:enumeration value="No such route group defined for this route list" />
      <xsd:enumeration value="No such device defined for this route list" />
      <xsd:enumeration value="An invalid QSIG configuration was detected for this Route List" />
      <xsd:enumeration value="User attempted delete of a mapped RouteList entry not allowed. Must delete the Device from the Device table" />
      <xsd:enumeration value="RouteList table may only reference Route List devices" />
      <xsd:enumeration value="HuntList table may only reference Hunt List devices" />
      <xsd:enumeration value="Digit discard instruction in a Route List, needs that its Dial Plan match that of the corresponding Device" />
      <xsd:enumeration value="Failure attempting automatic insert of Process Node Service records occuring on insert of Process Node record" />
      <xsd:enumeration value="An IP address from input or from a resolved host name is already in use" />
      <xsd:enumeration value="Encountered an invalid hostname: Server name can be an IP address or hostname. Hostname must be at least 2 characters and no more than 63,should contains only letters, numbers,dots and dashes,and end with only a letter or number" />
      <xsd:enumeration value="Encountered an invalid IP address" />
      <xsd:enumeration value="Invalid IPv4 address format: requires 4 octets separated by periods" />
      <xsd:enumeration value="The publisher sever entry cannot be deleted" />
      <xsd:enumeration value="Max number of servers in cluster has been exceeded for install type." />
      <xsd:enumeration value="Server Name contains invalid characters. Server name can be an IP address or hostname. Hostname must be at least 2 characters and no more than 64." />
      <xsd:enumeration value="Failure attempting automatic insert Alarm Configuration records occuring on insert of Process Node Service record" />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, No DevicePool record exists to assign to these devices." />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, No Server record exists to assign to these devices." />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of software MTP device failed." />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of media mixer record failed." />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of software CFB device failed." />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of tone annunciator device failed." />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of MOH device failed." />
      <xsd:enumeration value="Failure attempting automatic insert of Media Streaming devices, Insert of MOHServer record failed." />
      <xsd:enumeration value="Failure attempting CallManager service activation.  You need to add a CallManager first." />
      <xsd:enumeration value="Failure attempting to remove a record that has a relation in the service parameters" />
      <xsd:enumeration value="A requested multicast IP address is beyond the range 224.0.1.0 - 239.255.255.255" />
      <xsd:enumeration value="Attempt to use a multicast IP address reserved for another server" />
      <xsd:enumeration value="A requested multicast IP port is either an odd number or beyond the allowed range (16384-32766)" />
      <xsd:enumeration value="Attempt to add a new Audio Source record into an auxiliary table failed" />
      <xsd:enumeration value="Attempt to delete an Audio Source record from an auxiliary table failed" />
      <xsd:enumeration value="Invalid IP Address" />
      <xsd:enumeration value="All Multicast IP Addresses must be in the range 224.0.1.0 to 239.255.255.255" />
      <xsd:enumeration value="Multicast Base Port number must be an even number in the range 16384 to 32766" />
      <xsd:enumeration value="MOHServer table may only reference MOH Server devices" />
      <xsd:enumeration value="Two MOH Servers cannot use the same Multicast Base IP Address and Port Number" />
      <xsd:enumeration value="Cannot insert additional Add-on Modules for this device" />
      <xsd:enumeration value="Failure attempting to automatically re-number devices in the database" />
      <xsd:enumeration value="Expansion Modules can not be of mixed types" />
      <xsd:enumeration value="This type of expansion module is not supported by this device." />
      <xsd:enumeration value="Duplicate End User or System Time Schedule Name. A Time Schedule with this name already exists for the specified user" />
      <xsd:enumeration value="Cannot modify or delete the Time Schedule for All the time." />
      <xsd:enumeration value="Duplicate End User or System Time Period Name. A Time Period with this name already exists for the specified user" />
      <xsd:enumeration value="Cannot modify or delete the Time Period for All the time." />
      <xsd:enumeration value="Day of week should be different for each Time Period in an End User Time Schedule." />
      <xsd:enumeration value="Failure attempting to automatically update Device name after MGCP Domain name change" />
      <xsd:enumeration value="The specified distribution algorithm is not valid for Route and Line Groups" />
      <xsd:enumeration value="Cannot delete or modify Standard Local Route Group" />
      <xsd:enumeration value="AnalogAccess table may only reference devices with matching Device Protocol (AnalogAccess)" />
      <xsd:enumeration value="AnalogAccessPort table may only reference devices with matching Device Protocol (AnalogAccess)" />
      <xsd:enumeration value="A device that uses Phone Templates must have a specific Phone Template assigned" />
      <xsd:enumeration value="The Phone Template model and protocol do not match the device model and protocol" />
      <xsd:enumeration value="The Device Defaults record for a device that uses a firmware load must specify the default firmware load name" />
      <xsd:enumeration value="DigitalAccessBri table may only reference devices with matching Device Protocol (DigitalAccessBri)" />
      <xsd:enumeration value="Only Media Resource devices can be members of Media Resource Groups" />
      <xsd:enumeration value="MediaMixer table may only reference Media Resource devices" />
      <xsd:enumeration value="The sum of the streams configured for all media resources (CFB, MTP, XCODE, ANN) associated with this gateway cannot exceed 128" />
      <xsd:enumeration value="NSFInformationElements must be associated with a Route Pattern" />
      <xsd:enumeration value="The specified NSF Service is not valid for the selected protocol" />
      <xsd:enumeration value="The specified NSF Carrier Identification Code has invalid format" />
      <xsd:enumeration value="The specified NSF Parameter Value has invalid format" />
      <xsd:enumeration value="DigitalAccessT1 table may only reference devices with matching Device Protocol (DigitalAccessT1)" />
      <xsd:enumeration value="DigitalAccessT1Port table may only reference devices with matching Device Protocol (DigitalAccessT1)" />
      <xsd:enumeration value="User-defined SRST records must use the corresponding SRST Option" />
      <xsd:enumeration value="Cannot delete the system installed SRST records" />
      <xsd:enumeration value="Telecaster table may only reference devices that support IP Phone Services" />
      <xsd:enumeration value="The specified feature is not available for this model and protocol" />
      <xsd:enumeration value="Pilot table may only reference CTI Route Point devices" />
      <xsd:enumeration value="Cannot associate Speed Dials with a device that does not support phone templates or abbreviated dial features" />
      <xsd:enumeration value="The specified Address Book entry is not avaiable in the user''s Personal Address Book" />
      <xsd:enumeration value="The Fast Dial Index for this Phone Book entry is not unique" />
      <xsd:enumeration value="Cannot have more than one number of each type (Home, Work, Mobile) associated with a Personal Address Book entry" />
      <xsd:enumeration value="Only one record with same fastdialindex and fkenduser can exist" />
      <xsd:enumeration value="NickName cannot be a NULL or empty string" />
      <xsd:enumeration value="The specified DN or pattern evaluates to more than the maximum allowable 48 digits for this pattern usage" />
      <xsd:enumeration value="Encountered more characters than allowed in the submitted DnOrPattern string" />
      <xsd:enumeration value="The specified DN or pattern evaluates to more than the maximum allowable 24 digits for this pattern usage" />
      <xsd:enumeration value="Pattern has to be unique in a Route Partition unless associated with a Dial Plan" />
      <xsd:enumeration value="Digit Discard Instruction must be associated with the current DN's Dial Plan" />
      <xsd:enumeration value="Route Filter must be associated with the current DN's Dial Plan" />
      <xsd:enumeration value="Attempt to delete a Call Pickup record still in use" />
      <xsd:enumeration value="Improper values for IP CIDR address" />
      <xsd:enumeration value="The IP address you have entered is not valid. Please enter a valid IP address" />
      <xsd:enumeration value="Name contains invalid characters or the length was exceeded" />
      <xsd:enumeration value="The domain name you have entered is not in an acceptable format. Please enter a domain name in the following format: alpha/numeric characters.alphabetic characters. For example, abc123.com, abc.net, 123abc.org, and so on" />
      <xsd:enumeration value="Name contains nested brackets" />
      <xsd:enumeration value="Name contains misplaced or embedded circumflex characters" />
      <xsd:enumeration value="Name is a mal-formed regular expression" />
      <xsd:enumeration value="Only one dot is permitted per expression" />
      <xsd:enumeration value="Only one @ permitted per expression" />
      <xsd:enumeration value="A plus sign cannot appear within brackets" />
      <xsd:enumeration value="A question mark cannot appear within brackets" />
      <xsd:enumeration value="A dot precede an @ sign" />
      <xsd:enumeration value="Cannot have consecutive plus signs and question marks in any combination (?+, +?, ++ or ??)" />
      <xsd:enumeration value="Cannot follow a plus sign with a plus sign" />
      <xsd:enumeration value="The first character cannot be a plus sign" />
      <xsd:enumeration value="The first character cannot be a question mark" />
      <xsd:enumeration value="The character X is not permitted within brackets" />
      <xsd:enumeration value="The character @ is not permitted within brackets" />
      <xsd:enumeration value="A double circumflex is not permitted" />
      <xsd:enumeration value="The circumflex must appear within brackets" />
      <xsd:enumeration value="The dash must appear within brackets and follow a digit" />
      <xsd:enumeration value="A range violation has occurred: numbers must be in increasing order" />
      <xsd:enumeration value="CallPark values cannot have more than 2 Xs and/or bracketed (e.g., [0-9]) expressions" />
      <xsd:enumeration value="Nested brackets not permitted" />
      <xsd:enumeration value="Brackets either mismatched, or do not contain characters" />
      <xsd:enumeration value="Consecutive asterisks are not allowed" />
      <xsd:enumeration value="A plus sign cannot follow a bang" />
      <xsd:enumeration value="Intercom line or translation must have an intercom partition" />
      <xsd:enumeration value="Intercom line or translation must have an intercom calling search space" />
      <xsd:enumeration value="Intercom Partitions may only be used for Intercom DN or Intercom Translation pattern" />
      <xsd:enumeration value="Intercom Calling Search Spaces may only be used for Intercom DN or Intercom Translation pattern" />
      <xsd:enumeration value="Translation pattern for intercom line must have an intercom calling search space" />
      <xsd:enumeration value="Translation pattern for non-intercom line should not have an intercom calling search space" />
      <xsd:enumeration value="The combination of Prefix Digits and Park Code contain too many characters - the resulting Retrieval Code is not valid" />
      <xsd:enumeration value="The combination of Prefix Digits and Park Code evaluates to more than 48 digits - the resulting Retrieval Code is not valid" />
      <xsd:enumeration value="Cannot set isCallable to False when a DN or Intercom DN is associted with a device, device profile, or BAT Template" />
      <xsd:enumeration value="Can only set isCallable to False for DN or Intercom DN patterns" />
      <xsd:enumeration value="The clause for the route filter is too long as a result of this operation (more than 1024 characters) " />
      <xsd:enumeration value="Intercom DN can only have compatible AutoAnswer Type (such as speakerphone or headset) " />
      <xsd:enumeration value="The Prefix Digits must be less than 24 digits for Directed Call Park" />
      <xsd:enumeration value="Intercom feature is not supported for this device" />
      <xsd:enumeration value="Cannot insert or update pattern. A Entry already exists with same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Call Park already exists with same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Conferance exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A DN exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Translation exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Call Pick Up Group exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Route exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Message Waiting exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Hunt Pilot exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Voice Mail Port exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Route Domain exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A IPAddress exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Device Template exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Directed Call Park exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Device Intercom exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Translation Intercom exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Translation Calling Party exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Mobility Handoff exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Mobility DTMF exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Mobility IVR exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Device Intercom Template exists with the same pattern and partition." />
      <xsd:enumeration value="Cannot insert or update pattern. A Transformation Called Party Number exists with the same pattern and partition." />
      <xsd:enumeration value="\+ may only be used at the start of a DN. It is not valid after the first digit. Slash (\) is only allowed as part of \+ at the beginning of a DN." />
      <xsd:enumeration value="Cannot have duplicate IPv6 patterns in the same partition." />
      <xsd:enumeration value="Brackets need to be in pair." />
      <xsd:enumeration value="A Cisco CallManager Group may not contain more than 3 Cisco CallManagers" />
      <xsd:enumeration value="Slot value is not supported for this gateway" />
      <xsd:enumeration value="This Slot Module is not allowed at the current slot position for this gateway" />
      <xsd:enumeration value="This VIC card is not allowed for this gateway, under specified slot position and SlotModule" />
      <xsd:enumeration value="The specified slot and subunit are already defined for this MGCP gateway." />
      <xsd:enumeration value="AppUser Name already exists as an EndUser Userid. AppUser Name cannot be the same as an EndUser's userid" />
      <xsd:enumeration value="EndUser userid already exists as an AppUser Name. EndUser userid cannot be the same as an AppUsers name." />
      <xsd:enumeration value="EndUser cannot be inserted because Corporate LDAP directory is the sync master. Add users in the corporate directory." />
      <xsd:enumeration value="EndUser cannot be deleted because Corporate LDAP directory is the sync master. Remove users from the corporate directory." />
      <xsd:enumeration value="Cannot reduce Remote Destination Limit below the number of currently configured Remote Destinations for the EndUser." />
      <xsd:enumeration value="The encrypted form of the password is too large to be stored. Use a shorter or less complex password." />
      <xsd:enumeration value="Only one application server per type can be configured with the localdomain definition." />
      <xsd:enumeration value="The .localdomain suffix is required and cannot be removed from Cisco Unity Connection AppServer name." />
      <xsd:enumeration value="Another Application Server with this name already exists. Please check the Application Server Find/List page to verify your entry does not exist or use a different name." />
      <xsd:enumeration value="A Server with this name already exists as Cisco UCM Server. Please check the Server Find/List page to verify your entry does not exist or use a different name." />
      <xsd:enumeration value="Cannot have more than 100 IP Phone Service subscriptions on a device" />
      <xsd:enumeration value="Cannot subscribe to IP Phone Service that is an Enterprise Subscription service" />
      <xsd:enumeration value="Duplicate Number Plan entries for this Pilot record" />
      <xsd:enumeration value="If NumPlan is null, then PilotUser and DeviceLine must contain values" />
      <xsd:enumeration value="If NumPlan is not null, then PilotUser and DeviceLine must not contain entries" />
      <xsd:enumeration value="PilotUser, device line index, and pilot must be unique" />
      <xsd:enumeration value="Only one record with alwaysroute true is allowed for a particular fkpilot" />
      <xsd:enumeration value="Only Phones and VoiceMail Port usage are allowed" />
      <xsd:enumeration value="Attempt to delete default MLPP Domain record not allowed" />
      <xsd:enumeration value="Cannot have more than one default MLPP Domain record." />
      <xsd:enumeration value="Attempt to update a record that is not user-modifiable" />
      <xsd:enumeration value="Attempt to update MediaResourceList clause failed" />
      <xsd:enumeration value="Attempt to insert value into LicenseDistributionUsed triggered by insert into LicenseInfo table failed" />
      <xsd:enumeration value="Attempt to delete from LicenseDistributionUsed failed because used count, distributed count or both were non-zero" />
      <xsd:enumeration value="Cannot make an active licensed device inactive (IsActive cannot change from true to false)" />
      <xsd:enumeration value="Request unsuccessful to license manager(Please check the Licensing logs for further details) " />
      <xsd:enumeration value="Cannot connect to License Manager" />
      <xsd:enumeration value="Datastore exception in licensing" />
      <xsd:enumeration value="Internal licensing error (check the log file for details)" />
      <xsd:enumeration value="All licenses in use for this feature. Please upload additional licenses (a new license file) and try activating the feature again." />
      <xsd:enumeration value="No licensing support for the requested feature" />
      <xsd:enumeration value="Can't connect to datastore for licensing" />
      <xsd:enumeration value="License file not loaded" />
      <xsd:enumeration value="Licenses not available for the required version" />
      <xsd:enumeration value="All the allocated licenses to this node are consumed. Please upload additional licenses (a new license file) and try again." />
      <xsd:enumeration value="Licensing checkin failed (checkin count is greater than checked out count)" />
      <xsd:enumeration value="License Server not serving licenses on this node" />
      <xsd:enumeration value="All license servers down" />
      <xsd:enumeration value="Unexpected message from license server" />
      <xsd:enumeration value="Request Failed and some License Servers down" />
      <xsd:enumeration value="License File Version Mismatch" />
      <xsd:enumeration value="License File MAC Address Mismatch" />
      <xsd:enumeration value="Invalid or tampered License File" />
      <xsd:enumeration value="License loader parameters file error" />
      <xsd:enumeration value="License File Exception" />
      <xsd:enumeration value="License File Already Loaded" />
      <xsd:enumeration value="License File Format Error" />
      <xsd:enumeration value="Approaching license limit warning" />
      <xsd:enumeration value="Allocated licenses consumed by used and pending. Please upload additional licenses (a new license file) and try again." />
      <xsd:enumeration value="Allocated licenses consumed by used. Please upload additional licenses (a new license file) and try again." />
      <xsd:enumeration value="AllocatedLicenseUnits is reserved for future use. It must be set to 0 and cannot be updated" />
      <xsd:enumeration value="Only characters A-Z, a-z, 0-9 are allowed in prompt name" />
      <xsd:enumeration value="Invalid IP address" />
      <xsd:enumeration value="There cannot be more than 8 NTP entries for the same Date Time Group" />
      <xsd:enumeration value="IP address out of range; addresses must be less than 255.255.255.255" />
      <xsd:enumeration value="7905/12 Dial Rule Pattern contains invalid characters." />
      <xsd:enumeration value="7960/40/Other Dial Rule Pattern contains invalid characters." />
      <xsd:enumeration value="Not a valid parameter for 7905/12 Dial Rule (only patterns allowed)" />
      <xsd:enumeration value="The specified SIP Realm already exists." />
      <xsd:enumeration value="This instance is configured as a service parameter and cannot be deleted" />
      <xsd:enumeration value="This Instance ID already exists in Application or End User CAPF mapping" />
      <xsd:enumeration value="Cannot delete the last Application User from the Standard CCM Super Users group. This group must contain at least one Application User." />
      <xsd:enumeration value="Cannot remove the last Application User from the Standard CCM Super Users group. This group must contain at least one Application User." />
      <xsd:enumeration value="Roles for a standard user group cannot be added, modified or deleted." />
      <xsd:enumeration value="The Resources for a standard role cannot be added, modified or deleted." />
      <xsd:enumeration value="Model/device protocol does not support security encryption" />
      <xsd:enumeration value="Model/device protocol does not support authentication" />
      <xsd:enumeration value="TLS and UDP/TCP ports cannot be shared" />
      <xsd:enumeration value="Phone Security Profiles cannot be nonsecure and use TLS" />
      <xsd:enumeration value="Phone Security Profiles that are Authenticated or Encrypted must use TLS" />
      <xsd:enumeration value="Trunk Security Profiles Incoming Transport Type must use TLS or TCP+UDP" />
      <xsd:enumeration value="Trunk Security Profiles Outgoing Transport Type must use TCP or UDP or TLS" />
      <xsd:enumeration value="Incoming Port in Trunk Security Profile cannot be the same as CallManager SIP Port if Incoming Transport Type is TLS" />
      <xsd:enumeration value="Incoming Port in Trunk Security Profile cannot be the same as CallManager SIP Secured Port if Incoming Transport Type is TCP+UDP" />
      <xsd:enumeration value="Non-secured SCCP phones must use TCP Transport Type" />
      <xsd:enumeration value="Secured phones must use TLS Transport Type" />
      <xsd:enumeration value="Model/device protocol supports TCP therefore Transport Type cannot be TLS" />
      <xsd:enumeration value="Model/device protocol does not support TCP therefore Transport Type must be UDP" />
      <xsd:enumeration value="The value for Exclude Digest Credentials must be set to false" />
      <xsd:enumeration value="The value for Enable Digest Authentication must be set to false" />
      <xsd:enumeration value="The value for TFTP Encrypted must be set to false" />
      <xsd:enumeration value="The value for Model Type must be configured" />
      <xsd:enumeration value="The value for Protocol Type must be configured" />
      <xsd:enumeration value="The Security Profile must be Encrypted and TLS because another device is using this profile which has SRTP enabled" />
      <xsd:enumeration value="Only 1 CUMA Server SecurityProfile is allowed" />
      <xsd:enumeration value="Device security Mode is required for CUMA security profile." />
      <xsd:enumeration value="CUMA security profile incoming transport type must use TCP for non secure mode." />
      <xsd:enumeration value="CUMA security profile transport type must use TLS for secure mode." />
      <xsd:enumeration value="X.509 subject name can not be empty if transport type use TLS." />
      <xsd:enumeration value="The URL needs to begin with either http:// or https://" />
      <xsd:enumeration value="The URL hostname should be a valid hostname or IP address, with an optional port value" />
      <xsd:enumeration value="Cannot add parameters to an IP Phone Service that is an EnterpriseSubscription service. Include all parameters in the Service URL" />
      <xsd:enumeration value="Remote Destination can not be empty." />
      <xsd:enumeration value="Remote Destination must be a phone number or URI." />
      <xsd:enumeration value="Cannot use a Blocked type list for fkCallerFilterList_Allowed" />
      <xsd:enumeration value="Cannot use an Allowed type list for fkCallerFilterList_Blocked" />
      <xsd:enumeration value="Check the type of device specified in fkDevice_DualMode. Remote Destionations other than Dual Mode must use fkDevice_RemoteDestinationTemplate." />
      <xsd:enumeration value="The specified Remote Destination already exists." />
      <xsd:enumeration value="CallerFilterList must belong to same EndUser as the Remote Destination." />
      <xsd:enumeration value="A Dual Mode remote destination already exists for this device." />
      <xsd:enumeration value="Remote Destination must reference a Remote Destionation Profile or Dual Mode device." />
      <xsd:enumeration value="Remote Destination cannot be added because there is no associated EndUser for this dual-mode phone, Remote Destination Profile or MobileSmartClient." />
      <xsd:enumeration value="Remote Destination cannot be added because the associated EndUser does not have Mobility Enabled." />
      <xsd:enumeration value="Remote Destination cannot be added because the Remote Destination Limit set by Administrator for this EndUser account has already been reached." />
      <xsd:enumeration value="A MobileSmartClient can only be associated with a single Remote Destination." />
      <xsd:enumeration value="Cannot have more than 1000 members in a Caller Filter List." />
      <xsd:enumeration value="Cannot have more than 250 CallerFilterLists for an EndUser." />
      <xsd:enumeration value="The specified DN Mask already exists for this Caller Filter List." />
      <xsd:enumeration value="Only one instance of Private or Not Available may be exist for any given Caller Filter List." />
      <xsd:enumeration value="Remotedestination already refer to a Remote Destionation Profile. You cannot associate it to Dual Mode device or a MobileSmartClient" />
      <xsd:enumeration value="Remote Destination must reference a Remote Destionation Profile, a Dual Mode device or a MobileSmartClient" />
      <xsd:enumeration value="Remote Destination can only be assigned to a single device as Dual Mode device and/or MobileSmartClient" />
      <xsd:enumeration value="Mobile Smart Client for a Remote Destination must be a device with Mobile Smart Client Enabled" />
      <xsd:enumeration value="This ToDAccess is already associated with another Remote Destination.There must be a different ToDAccess for each Remote Destination." />
      <xsd:enumeration value="Fail to validate the primary phone configuration." />
      <xsd:enumeration value="The device cannot be configured as a secondary phone." />
      <xsd:enumeration value="The device does not have a valid phone for its primary phone." />
      <xsd:enumeration value="The primary phone for the device can not be a secondary phone." />
      <xsd:enumeration value="A phone may be referenced as a primary phone by 2 other phones at most." />
      <xsd:enumeration value="The device must use the same or fewer DLUs as its primary phone." />
      <xsd:enumeration value="Cannot delete a device that is used as a Primary Phone." />
      <xsd:enumeration value="Cannot have more than 100 Resource Priority Namespaces." />
      <xsd:enumeration value="Cannot use RFC4412 reserved names WPS, ETS, and Q735 for namespaces." />
      <xsd:enumeration value="Cannot remove ResourcePriorityDefaultNamespace if there are namespaces defined." />
      <xsd:enumeration value="System Time Schedule can only use system time period." />
      <xsd:enumeration value="Published time schedule can only use published time period." />
      <xsd:enumeration value="End User can only use his own time period or published system time period." />
      <xsd:enumeration value="Cannot modify the members of All the time Schedule." />
      <xsd:enumeration value="Cannot associate an EndUser TimePeriod with more than one TimeSchedule. Create new TimePeriods for each TimeSchedule." />
      <xsd:enumeration value="End user for TODAccess and CallerFilterList must match." />
      <xsd:enumeration value="End user for TimeSchedule and TODAccess must match." />
      <xsd:enumeration value="Time schedule must be unique for each ToDAccess Setting." />
      <xsd:enumeration value="Invalid IPv6 name: Valid values include IPv6 address excluding link local, site local, IPv4 mapped/compatible or unspecified. Hostname must be 2 to 63 letters, numbers, dots and dashes. Hostname must end with an alphanumeric character." />
      <xsd:enumeration value="Encountered invalid IPv6 address: Value can be valid IPv6 address and it can not be link local, site local, IPv4 mapped, IPv4 compatible or unspecified IPv6 address." />
      <xsd:enumeration value="Encountered link local IPv6 address. Value can be valid IPv6 address and it can not be link local, site local, IPv4 mapped, IPv4 compatible or unspecified IPv6 address." />
      <xsd:enumeration value="Encountered site local IPv6 address. Value can be valid IPv6 address and it can not be link local, site local, IPv4 mapped, IPv4 compatible or unspecified IPv6 address." />
      <xsd:enumeration value="Encountered IPv4 mapped IPv6 address. Value can be valid IPv6 address and it can not be link local, site local, IPv4 mapped, IPv4 compatible or unspecified IPv6 address." />
      <xsd:enumeration value="Encountered IPv4 compatible IPv6 address. Value can be valid IPv6 address and it can not be link local, site local, IPv4 mapped, IPv4 compatible or unspecified IPv6 address." />
      <xsd:enumeration value="Encountered unspecified IPv6 address. Value can be valid IPv6 address and it can not be link local, site local, IPv4 mapped, IPv4 compatible or unspecified IPv6 address." />
      <xsd:enumeration value="Encountered IPv4 value: Value can be IPv6 address or hostname. Hostname must be at least 2 characters and no more than 63,should contains only letters, numbers,dots and dashes,and end with only a letter or number. Value can not be IPv4 address." />
      <xsd:enumeration value="Invalid IPv6 destination address: Valid values include IPv6 address excluding link local, site local, IPv4 mapped/compatible or unspecified. Hostname must be 2 to 63 letters, numbers, dots and dashes. Hostname must end with an alphanumeric character." />
      <xsd:enumeration value="Before CUPC can be enabled for a user, CUPS must be enabled" />
      <xsd:enumeration value="Before CUPS can be disabled for a user, CUPC must be disabled" />
      <xsd:enumeration value="Cannot delete or modify Unspecified GeoLocation Record" />
      <xsd:enumeration value="DO NOT USE ERROR NUMBERS BEYOND THIS LIMIT" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDeviceFeature">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Presence Status Report" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDeviceProfile">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Real Device" />
      <xsd:enumeration value="User Profile" />
      <xsd:enumeration value="Autogenerated Profile" />
      <xsd:enumeration value="Model Profile" />
      <xsd:enumeration value="User Template Profile" />
      <xsd:enumeration value="System Template Profile" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDeviceProtocol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SCCP" />
      <xsd:enumeration value="Digital Access PRI" />
      <xsd:enumeration value="H.225" />
      <xsd:enumeration value="Analog Access" />
      <xsd:enumeration value="Digital Access T1" />
      <xsd:enumeration value="Route Point" />
      <xsd:enumeration value="Unicast Bridge" />
      <xsd:enumeration value="Multicast Point" />
      <xsd:enumeration value="Inter-Cluster Trunk" />
      <xsd:enumeration value="RAS" />
      <xsd:enumeration value="Digital Access BRI" />
      <xsd:enumeration value="SIP" />
      <xsd:enumeration value="MGCP" />
      <xsd:enumeration value="Static SIP Mobile Subscriber" />
      <xsd:enumeration value="SIP Connector" />
      <xsd:enumeration value="Remote Destination" />
      <xsd:enumeration value="Mobile Smart Client" />
      <xsd:enumeration value="Protocol Not Specified" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDeviceSecurityMode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Non Secure" />
      <xsd:enumeration value="Authenticated" />
      <xsd:enumeration value="Encrypted" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDialParameter">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Pattern" />
      <xsd:enumeration value="Button" />
      <xsd:enumeration value="Timeout" />
      <xsd:enumeration value="User" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDialPattern">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="7905_7912" />
      <xsd:enumeration value="7940_7960_OTHER" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDigitSending">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DTMF" />
      <xsd:enumeration value="MF" />
      <xsd:enumeration value="PULSE" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDistributeAlgorithm">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Top Down" />
      <xsd:enumeration value="Circular" />
      <xsd:enumeration value="Longest Idle Time" />
      <xsd:enumeration value="Broadcast" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDrfRegistered">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NotRegistered" />
      <xsd:enumeration value="Registered" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XDrfScript">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Backup" />
      <xsd:enumeration value="Restore" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XEncode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A-law" />
      <xsd:enumeration value="u-law" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XFDLChannel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AT&amp;T 54016" />
      <xsd:enumeration value="ANSI T1.403 NI" />
      <xsd:enumeration value="ANSI T1.403.CI" />
      <xsd:enumeration value="None" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XFeature">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Redial" />
      <xsd:enumeration value="Speed Dial" />
      <xsd:enumeration value="Hold" />
      <xsd:enumeration value="Transfer" />
      <xsd:enumeration value="Forward All" />
      <xsd:enumeration value="Display" />
      <xsd:enumeration value="Line" />
      <xsd:enumeration value="Chat" />
      <xsd:enumeration value="Whiteboard" />
      <xsd:enumeration value="Application Sharing" />
      <xsd:enumeration value="File Transfer" />
      <xsd:enumeration value="Video" />
      <xsd:enumeration value="Message Waiting" />
      <xsd:enumeration value="Answer/Release" />
      <xsd:enumeration value="Auto Answer" />
      <xsd:enumeration value="Settings" />
      <xsd:enumeration value="Privacy" />
      <xsd:enumeration value="Service URL" />
      <xsd:enumeration value="Speed Dial BLF" />
      <xsd:enumeration value="Call Park BLF" />
      <xsd:enumeration value="Intercom" />
      <xsd:enumeration value="Malicious Call Identification" />
      <xsd:enumeration value="Meet Me Conference" />
      <xsd:enumeration value="Conference" />
      <xsd:enumeration value="Call Park" />
      <xsd:enumeration value="Call Pickup" />
      <xsd:enumeration value="Group Call Pickup" />
      <xsd:enumeration value="Mobility" />
      <xsd:enumeration value="Do Not Disturb" />
      <xsd:enumeration value="Conference List" />
      <xsd:enumeration value="Remove Last Participant" />
      <xsd:enumeration value="Quality Reporting Tool" />
      <xsd:enumeration value="CallBack" />
      <xsd:enumeration value="Other Pickup" />
      <xsd:enumeration value="Video Mode" />
      <xsd:enumeration value="New Call" />
      <xsd:enumeration value="End Call" />
      <xsd:enumeration value="Hunt Group Logout" />
      <xsd:enumeration value="All Calls" />
      <xsd:enumeration value="Answer Oldest" />
      <xsd:enumeration value="Services" />
      <xsd:enumeration value="Messages" />
      <xsd:enumeration value="Directories" />
      <xsd:enumeration value="Information" />
      <xsd:enumeration value="Application Menu" />
      <xsd:enumeration value="Headset" />
      <xsd:enumeration value="AEC" />
      <xsd:enumeration value="None" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XForward">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="All" />
      <xsd:enumeration value="Busy" />
      <xsd:enumeration value="No Answer" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XFraming">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D4" />
      <xsd:enumeration value="ESF" />
      <xsd:enumeration value="CRC4" />
      <xsd:enumeration value="Non CRC4" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XGClear">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Disabled" />
      <xsd:enumeration value="CLEARMODE" />
      <xsd:enumeration value="CCD" />
      <xsd:enumeration value="G.nX64" />
      <xsd:enumeration value="X-CCD" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XGeoLocationDevice">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Border" />
      <xsd:enumeration value="Interior" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XGkOption">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Remote" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XGroupVersionStamp">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Generic Group" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XHuntAlgorithm">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Try next member; then, try next group in Hunt List" />
      <xsd:enumeration value="Try next member, but do not go to next group" />
      <xsd:enumeration value="Skip remaining members, and go directly to next group" />
      <xsd:enumeration value="Stop hunting" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XHuntAlgorithmForAC">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="First Available" />
      <xsd:enumeration value="Longest Idle" />
      <xsd:enumeration value="Circular Hunting" />
      <xsd:enumeration value="Broadcast Hunting" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XIDSAuditLevel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Schema Only" />
      <xsd:enumeration value="Administrative Tasks" />
      <xsd:enumeration value="Database Updates" />
      <xsd:enumeration value="Database Reads" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XIPAddressingMode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IPv4 Only" />
      <xsd:enumeration value="IPv6 Only" />
      <xsd:enumeration value="IPv4 and IPv6" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XIPAddressingModePrefControl">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IPv4" />
      <xsd:enumeration value="IPv6" />
      <xsd:enumeration value="Use System Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XIPMALineMode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Proxy" />
      <xsd:enumeration value="Shared" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XIPMATarget">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Manager/Assistant" />
      <xsd:enumeration value="Diverted" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XKeyAuthority">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="none" />
      <xsd:enumeration value="lsc" />
      <xsd:enumeration value="mic" />
      <xsd:enumeration value="symmetric key" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XKeySize">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="512" />
      <xsd:enumeration value="1024" />
      <xsd:enumeration value="2048" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLDAPProtocol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ldap_AD" />
      <xsd:enumeration value="gc" />
      <xsd:enumeration value="ldap_ND" />
      <xsd:enumeration value="ldap_OP" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLampBlinkRate">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Lamp Off" />
      <xsd:enumeration value="Lamp On" />
      <xsd:enumeration value="Wink" />
      <xsd:enumeration value="Flash" />
      <xsd:enumeration value="Blink" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLanguage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Afar" />
      <xsd:enumeration value="Abkhazian" />
      <xsd:enumeration value="Afrikaans" />
      <xsd:enumeration value="Amharic" />
      <xsd:enumeration value="Arabic" />
      <xsd:enumeration value="Assamese" />
      <xsd:enumeration value="Aymara" />
      <xsd:enumeration value="Azerbaijani" />
      <xsd:enumeration value="Bashkir" />
      <xsd:enumeration value="Byelorussian" />
      <xsd:enumeration value="Bulgarian" />
      <xsd:enumeration value="Bihari" />
      <xsd:enumeration value="Bislama" />
      <xsd:enumeration value="Bengali; Bangla" />
      <xsd:enumeration value="Tibetan" />
      <xsd:enumeration value="Breton" />
      <xsd:enumeration value="Catalan" />
      <xsd:enumeration value="Corsican" />
      <xsd:enumeration value="Czech" />
      <xsd:enumeration value="Welsh" />
      <xsd:enumeration value="Danish" />
      <xsd:enumeration value="German" />
      <xsd:enumeration value="Bhutani" />
      <xsd:enumeration value="Greek" />
      <xsd:enumeration value="English" />
      <xsd:enumeration value="Esperanto" />
      <xsd:enumeration value="Spanish" />
      <xsd:enumeration value="Estonian" />
      <xsd:enumeration value="Basque" />
      <xsd:enumeration value="Persian" />
      <xsd:enumeration value="Finnish" />
      <xsd:enumeration value="Fiji" />
      <xsd:enumeration value="Faroese" />
      <xsd:enumeration value="French" />
      <xsd:enumeration value="Frisian" />
      <xsd:enumeration value="Irish" />
      <xsd:enumeration value="Scots Gaelic" />
      <xsd:enumeration value="Galician" />
      <xsd:enumeration value="Guarani" />
      <xsd:enumeration value="Gujarati" />
      <xsd:enumeration value="Hausa" />
      <xsd:enumeration value="Hebrew" />
      <xsd:enumeration value="Hindi" />
      <xsd:enumeration value="Croatian" />
      <xsd:enumeration value="Hungarian" />
      <xsd:enumeration value="Armenian" />
      <xsd:enumeration value="Interlingua" />
      <xsd:enumeration value="Indonesian" />
      <xsd:enumeration value="Interlingue" />
      <xsd:enumeration value="Inupiak" />
      <xsd:enumeration value="Icelandic" />
      <xsd:enumeration value="Italian" />
      <xsd:enumeration value="Inuktitut" />
      <xsd:enumeration value="Japanese" />
      <xsd:enumeration value="Javanese" />
      <xsd:enumeration value="Georgian" />
      <xsd:enumeration value="Kazakh" />
      <xsd:enumeration value="Greenlandic" />
      <xsd:enumeration value="Cambodian" />
      <xsd:enumeration value="Kannada" />
      <xsd:enumeration value="Korean" />
      <xsd:enumeration value="Kashmiri" />
      <xsd:enumeration value="Kurdish" />
      <xsd:enumeration value="Kirghiz" />
      <xsd:enumeration value="Latin" />
      <xsd:enumeration value="Lingala" />
      <xsd:enumeration value="Laothian" />
      <xsd:enumeration value="Lithuanian" />
      <xsd:enumeration value="Latvian, Lettish" />
      <xsd:enumeration value="Malagasy" />
      <xsd:enumeration value="Maori" />
      <xsd:enumeration value="Macedonian" />
      <xsd:enumeration value="Malayalam" />
      <xsd:enumeration value="Mongolian" />
      <xsd:enumeration value="Moldavian" />
      <xsd:enumeration value="Marathi" />
      <xsd:enumeration value="Malay" />
      <xsd:enumeration value="Maltese" />
      <xsd:enumeration value="Burmese" />
      <xsd:enumeration value="Nauru" />
      <xsd:enumeration value="Nepali" />
      <xsd:enumeration value="Dutch" />
      <xsd:enumeration value="Norwegian" />
      <xsd:enumeration value="Occitan" />
      <xsd:enumeration value="(Afan) Oromo" />
      <xsd:enumeration value="Oriya" />
      <xsd:enumeration value="Punjabi" />
      <xsd:enumeration value="Polish" />
      <xsd:enumeration value="Pashto, Pushto" />
      <xsd:enumeration value="Portuguese" />
      <xsd:enumeration value="Quechua" />
      <xsd:enumeration value="Rhaeto-Romance" />
      <xsd:enumeration value="Kirundi" />
      <xsd:enumeration value="Romanian" />
      <xsd:enumeration value="Russian" />
      <xsd:enumeration value="Kinyarwanda" />
      <xsd:enumeration value="Sanskrit" />
      <xsd:enumeration value="Sindhi" />
      <xsd:enumeration value="Sangho" />
      <xsd:enumeration value="Serbo-Croatian" />
      <xsd:enumeration value="Sinhalese" />
      <xsd:enumeration value="Slovak" />
      <xsd:enumeration value="Slovenian" />
      <xsd:enumeration value="Samoan" />
      <xsd:enumeration value="Shona" />
      <xsd:enumeration value="Somali" />
      <xsd:enumeration value="Albanian" />
      <xsd:enumeration value="Serbian" />
      <xsd:enumeration value="Siswati" />
      <xsd:enumeration value="Sesotho" />
      <xsd:enumeration value="Sundanese" />
      <xsd:enumeration value="Swedish" />
      <xsd:enumeration value="Swahili" />
      <xsd:enumeration value="Tamil" />
      <xsd:enumeration value="Telugu" />
      <xsd:enumeration value="Tajik" />
      <xsd:enumeration value="Thai" />
      <xsd:enumeration value="Tigrinya" />
      <xsd:enumeration value="Turkmen" />
      <xsd:enumeration value="Tagalog" />
      <xsd:enumeration value="Setswana" />
      <xsd:enumeration value="Tonga" />
      <xsd:enumeration value="Turkish" />
      <xsd:enumeration value="Tsonga" />
      <xsd:enumeration value="Tatar" />
      <xsd:enumeration value="Twi" />
      <xsd:enumeration value="Uighur" />
      <xsd:enumeration value="Ukrainian" />
      <xsd:enumeration value="Urdu" />
      <xsd:enumeration value="Uzbek" />
      <xsd:enumeration value="Vietnamese" />
      <xsd:enumeration value="Volapuk" />
      <xsd:enumeration value="Wolof" />
      <xsd:enumeration value="Xhosa" />
      <xsd:enumeration value="Yiddish " />
      <xsd:enumeration value="Yoruba" />
      <xsd:enumeration value="Zhuang" />
      <xsd:enumeration value="Chinese" />
      <xsd:enumeration value="Zulu" />
      <xsd:enumeration value="Chinese (Simplified) Spoken Mandarin" />
      <xsd:enumeration value="Chinese (Traditional) Spoken Mandarin" />
      <xsd:enumeration value="Chinese (Traditional) Spoken Cantonese" />
      <xsd:enumeration value="Portuguese (Brazilian)" />
      <xsd:enumeration value="English (British)" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLanguageGroup">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Western European" />
      <xsd:enumeration value="Eastern European" />
      <xsd:enumeration value="Baltic" />
      <xsd:enumeration value="Cyrillic" />
      <xsd:enumeration value="Arabic" />
      <xsd:enumeration value="Greek" />
      <xsd:enumeration value="Hebrew" />
      <xsd:enumeration value="Turkish" />
      <xsd:enumeration value="Japanese" />
      <xsd:enumeration value="Simplified Chinese" />
      <xsd:enumeration value="Traditional Chinese" />
      <xsd:enumeration value="Korean" />
      <xsd:enumeration value="Thai" />
      <xsd:enumeration value="Vietnamese" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLdapServer">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Microsoft Active Directory" />
      <xsd:enumeration value="Netscape or Sun ONE LDAP Server" />
      <xsd:enumeration value="OpenLDAP" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLdapServerAttr">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UniqueIdentifier" />
      <xsd:enumeration value="UserId" />
      <xsd:enumeration value="FirstName" />
      <xsd:enumeration value="MiddleName" />
      <xsd:enumeration value="LastName" />
      <xsd:enumeration value="Manager" />
      <xsd:enumeration value="Department" />
      <xsd:enumeration value="TelephoneNumber" />
      <xsd:enumeration value="Mailid" />
      <xsd:enumeration value="Title" />
      <xsd:enumeration value="HomePhone" />
      <xsd:enumeration value="Mobile" />
      <xsd:enumeration value="Pager" />
      <xsd:enumeration value="OCSPrimaryUserAddress" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLicenseFeature">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CCM Node" />
      <xsd:enumeration value="Phone Unit" />
      <xsd:enumeration value="SW Version" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLicenseUnit">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CCM Node" />
      <xsd:enumeration value="Cisco 7902" />
      <xsd:enumeration value="Cisco ATA 186" />
      <xsd:enumeration value="Cisco 7905" />
      <xsd:enumeration value="Cisco 7910" />
      <xsd:enumeration value="Cisco 7912" />
      <xsd:enumeration value="Cisco 7935" />
      <xsd:enumeration value="Cisco 7936" />
      <xsd:enumeration value="Cisco IP Communicator" />
      <xsd:enumeration value="Cisco 7920" />
      <xsd:enumeration value="Cisco 7940" />
      <xsd:enumeration value="Cisco 7941" />
      <xsd:enumeration value="Cisco 7960" />
      <xsd:enumeration value="Cisco 7961" />
      <xsd:enumeration value="Cisco 7970" />
      <xsd:enumeration value="Cisco 7971" />
      <xsd:enumeration value="Cisco 7941G-GE" />
      <xsd:enumeration value="Cisco 7961G-GE" />
      <xsd:enumeration value="Cisco 7985" />
      <xsd:enumeration value="Cisco 7911" />
      <xsd:enumeration value="H.323 Client" />
      <xsd:enumeration value="CTI Port" />
      <xsd:enumeration value="Other Phone" />
      <xsd:enumeration value="IP-STE" />
      <xsd:enumeration value="Motorola CN622" />
      <xsd:enumeration value="Cisco 12 S" />
      <xsd:enumeration value="Cisco 12 SP" />
      <xsd:enumeration value="Cisco 12 SP+" />
      <xsd:enumeration value="Cisco 30 SP+" />
      <xsd:enumeration value="Cisco 30 VIP" />
      <xsd:enumeration value="Cisco VGC Phone" />
      <xsd:enumeration value="Cisco VGC Virtual Phone" />
      <xsd:enumeration value="Analog Phone" />
      <xsd:enumeration value="Cisco 7906" />
      <xsd:enumeration value="Cisco Unified Presence Server End User Feature License" />
      <xsd:enumeration value="Cisco Unified Personal Client End User Feature License" />
      <xsd:enumeration value="Cisco 7921" />
      <xsd:enumeration value="Cisco 3951" />
      <xsd:enumeration value="Cisco 7931" />
      <xsd:enumeration value="Third-party SIP Device (Basic)" />
      <xsd:enumeration value="Third-party SIP Device (Advanced)" />
      <xsd:enumeration value="Cisco TelePresence" />
      <xsd:enumeration value="Cisco 7962" />
      <xsd:enumeration value="Cisco 7942" />
      <xsd:enumeration value="Cisco 7945" />
      <xsd:enumeration value="Cisco 7965" />
      <xsd:enumeration value="Cisco 7937" />
      <xsd:enumeration value="Cisco 7975" />
      <xsd:enumeration value="Cisco Unified Personal Communicator" />
      <xsd:enumeration value="Mobility Enabled End Users" />
      <xsd:enumeration value="Cisco 3911" />
      <xsd:enumeration value="Cisco Unified Mobile Communicator" />
      <xsd:enumeration value="Cisco TelePresence 1000" />
      <xsd:enumeration value="Cisco TelePresence 3000" />
      <xsd:enumeration value="Cisco TelePresence 3200" />
      <xsd:enumeration value="Cisco TelePresence 500" />
      <xsd:enumeration value="Cisco 7925" />
      <xsd:enumeration value="CP-9971" />
      <xsd:enumeration value="Cisco 6921" />
      <xsd:enumeration value="Cisco 6941" />
      <xsd:enumeration value="Cisco 6961" />
      <xsd:enumeration value="Cisco Unified Client Services Framework" />
      <xsd:enumeration value="Cisco TelePresence 1300" />
      <xsd:enumeration value="Cisco TelePresence 1100" />
      <xsd:enumeration value="Transnova S3" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLogicalPartitionPolicy">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Use Default Policy" />
      <xsd:enumeration value="Allow" />
      <xsd:enumeration value="Deny" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XLossyNetwork">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Keep Current Setting" />
      <xsd:enumeration value="Use System Default" />
      <xsd:enumeration value="Low Loss" />
      <xsd:enumeration value="Lossy" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMGCPSlotModule">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NM-1V" />
      <xsd:enumeration value="NM-2V" />
      <xsd:enumeration value="NM-HDV" />
      <xsd:enumeration value="VIC-SLOT" />
      <xsd:enumeration value="NONE" />
      <xsd:enumeration value="VWIC-SLOT" />
      <xsd:enumeration value="FLEX-SLOT" />
      <xsd:enumeration value="ANALOG" />
      <xsd:enumeration value="DIGITAL" />
      <xsd:enumeration value="VGC_PORT" />
      <xsd:enumeration value="WS-X6600" />
      <xsd:enumeration value="AIM-VOICE-30 (2 subunits)" />
      <xsd:enumeration value="NM-HDA" />
      <xsd:enumeration value="PA-VXA" />
      <xsd:enumeration value="PA-VXB" />
      <xsd:enumeration value="PA-VXC" />
      <xsd:enumeration value="PA-MCX" />
      <xsd:enumeration value="NM-HD-1V" />
      <xsd:enumeration value="NM-HD-2V" />
      <xsd:enumeration value="NM-HD-2VE" />
      <xsd:enumeration value="GENERIC-SLOT" />
      <xsd:enumeration value="NM-4VWIC-MBRD" />
      <xsd:enumeration value="EVM-HD" />
      <xsd:enumeration value="NM-HDV2-0PORT" />
      <xsd:enumeration value="NM-HDV2-1PORT-T1" />
      <xsd:enumeration value="NM-HDV2-1PORT-E1" />
      <xsd:enumeration value="NM-HDV2-2PORT-T1" />
      <xsd:enumeration value="NM-HDV2-2PORT-E1" />
      <xsd:enumeration value="AIM-VOICE-30-SLOT-0 (3 subunits- slot 0 only)" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMGCPVic">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VIC-2FXS" />
      <xsd:enumeration value="VIC-2FXO" />
      <xsd:enumeration value="VWIC-1MFT-T1" />
      <xsd:enumeration value="VWIC-2MFT-T1" />
      <xsd:enumeration value="VIC_NONE" />
      <xsd:enumeration value="VWIC-1MFT-E1" />
      <xsd:enumeration value="VWIC-2MFT-E1" />
      <xsd:enumeration value="WS-U4604-8FXS" />
      <xsd:enumeration value="8FXS" />
      <xsd:enumeration value="16FXS" />
      <xsd:enumeration value="1T1" />
      <xsd:enumeration value="16FXS8FXO" />
      <xsd:enumeration value="48_PORTS" />
      <xsd:enumeration value="VIC-4FXS" />
      <xsd:enumeration value="VIC-4FXO" />
      <xsd:enumeration value="VIC-8FXS" />
      <xsd:enumeration value="VIC-16FXS" />
      <xsd:enumeration value="WS-X6600-24FXS" />
      <xsd:enumeration value="WS-X6600-6T1" />
      <xsd:enumeration value="WS-X6600-6E1" />
      <xsd:enumeration value="EM-4FXO-EM0" />
      <xsd:enumeration value="EM-4FXO-EM1" />
      <xsd:enumeration value="EM-8FXS-EM0" />
      <xsd:enumeration value="EM-8FXS-EM1" />
      <xsd:enumeration value="NM-HDA-4FXS" />
      <xsd:enumeration value="PA-VXA-1TE1-24-T1" />
      <xsd:enumeration value="PA-VXA-1TE1-30-E1" />
      <xsd:enumeration value="PA-VXB-2TE1-T1" />
      <xsd:enumeration value="PA-VXB-2TE1-E1" />
      <xsd:enumeration value="PA-VXC-2TE1-T1" />
      <xsd:enumeration value="PA-VXC-2TE1-E1" />
      <xsd:enumeration value="PA-MCX-2TE1-T1" />
      <xsd:enumeration value="PA-MCX-2TE1-E1" />
      <xsd:enumeration value="PA-MCX-4TE1-T1" />
      <xsd:enumeration value="PA-MCX-4TE1-E1" />
      <xsd:enumeration value="PA-MCX-6TE1-T1" />
      <xsd:enumeration value="PA-MCX-6TE1-E1" />
      <xsd:enumeration value="PA-MCX-8TE1-T1" />
      <xsd:enumeration value="PA-MCX-8TE1-E1" />
      <xsd:enumeration value="VIC-8FXO" />
      <xsd:enumeration value="WS-U4604-8FXO-2FXS" />
      <xsd:enumeration value="WS-U4604-16FXS" />
      <xsd:enumeration value="VIC-2BRI" />
      <xsd:enumeration value="VIC-2FXS-SCCP" />
      <xsd:enumeration value="VIC-4FXS-SCCP" />
      <xsd:enumeration value="VIC2-2FXS-SCCP" />
      <xsd:enumeration value="VIC2-2BRI-NT/TE-SCCP" />
      <xsd:enumeration value="NM-HDA-4FXS-SCCP" />
      <xsd:enumeration value="EM-8FXS-EM0-SCCP" />
      <xsd:enumeration value="24FXS-SCCP" />
      <xsd:enumeration value="EM-8FXS-EM1-SCCP" />
      <xsd:enumeration value="EVM-HD-8FXS/DID-SCCP" />
      <xsd:enumeration value="EM-4BRI-NT/TE-SCCP" />
      <xsd:enumeration value="EM-HDA-8FXS-SCCP" />
      <xsd:enumeration value="EM-HDA-3FXS/4FXO-SCCP" />
      <xsd:enumeration value="VIC3-2FXS/DID" />
      <xsd:enumeration value="VIC3-4FXS/DID" />
      <xsd:enumeration value="EM3-HDA-8FXS/DID" />
      <xsd:enumeration value="VIC3-2FXS/DID-SCCP" />
      <xsd:enumeration value="VIC3-4FXS/DID-SCCP" />
      <xsd:enumeration value="EM3-HDA-8FXS/DID-SCCP" />
      <xsd:enumeration value="4FXS-MGCP" />
      <xsd:enumeration value="4FXS-SCCP" />
      <xsd:enumeration value="2FXS-MGCP" />
      <xsd:enumeration value="2FXS-SCCP" />
      <xsd:enumeration value="VGD-DFC-CT3" />
      <xsd:enumeration value="VIC3-2FXS-E/DID" />
      <xsd:enumeration value="VIC3-2FXS-E/DID-SCCP" />
      <xsd:enumeration value="VIC2-1FXO" />
      <xsd:enumeration value="VIC2-1BRI" />
      <xsd:enumeration value="WS-SVC-CMM-MS" />
      <xsd:enumeration value="VIC2-2FXS" />
      <xsd:enumeration value="VIC2-2FXO" />
      <xsd:enumeration value="VIC2-2BRI" />
      <xsd:enumeration value="VIC-4FXS/DID" />
      <xsd:enumeration value="VIC2-4FXO" />
      <xsd:enumeration value="NM-HDV2-ONBOARD-T1" />
      <xsd:enumeration value="NM-HDV2-ONBOARD-E1" />
      <xsd:enumeration value="VWIC2-1MFT-T1E1-T1" />
      <xsd:enumeration value="VWIC2-1MFT-T1E1-E1" />
      <xsd:enumeration value="VWIC2-2MFT-T1E1-T1" />
      <xsd:enumeration value="VWIC2-2MFT-T1E1-E1" />
      <xsd:enumeration value="VWIC2-1MFT-G703-T1" />
      <xsd:enumeration value="VWIC2-1MFT-G703-E1" />
      <xsd:enumeration value="VWIC2-2MFT-G703-T1" />
      <xsd:enumeration value="VWIC2-2MFT-G703-E1" />
      <xsd:enumeration value="EVM-HD-8FXS/DID" />
      <xsd:enumeration value="EM-4BRI-NT/TE-EM0" />
      <xsd:enumeration value="EM-4BRI-NT/TE-EM1" />
      <xsd:enumeration value="24FXS" />
      <xsd:enumeration value="NM-HDV2-ONBOARD-T1-2PORT" />
      <xsd:enumeration value="NM-HDV2-ONBOARD-E1-2PORT" />
      <xsd:enumeration value="EM-HDA-8FXS" />
      <xsd:enumeration value="EM-HDA-6FXO" />
      <xsd:enumeration value="EM-HDA-3FXS/4FXO" />
      <xsd:enumeration value="EM-4BRI-NT/TE" />
      <xsd:enumeration value="VIC2-1MFT-T1E1-T1" />
      <xsd:enumeration value="VIC2-1MFT-T1E1-E1" />
      <xsd:enumeration value="VIC2-2MFT-T1E1-T1" />
      <xsd:enumeration value="VIC2-2MFT-T1E1-E1" />
      <xsd:enumeration value="EM2-4FXO-EM0" />
      <xsd:enumeration value="EM2-4FXO-EM1" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMOHCodec">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="711 ulaw" />
      <xsd:enumeration value="711 alaw" />
      <xsd:enumeration value="729" />
      <xsd:enumeration value="wideband" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMWLPolicy">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Use System Policy" />
      <xsd:enumeration value="Light and Prompt" />
      <xsd:enumeration value="Prompt Only" />
      <xsd:enumeration value="Light Only" />
      <xsd:enumeration value="None" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMatrix">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Presence Group" />
      <xsd:enumeration value="RSVP Policy" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMatrixValue">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Use System Default" />
      <xsd:enumeration value="No Reservation" />
      <xsd:enumeration value="Optional(Video Desired)" />
      <xsd:enumeration value="Mandatory" />
      <xsd:enumeration value="Mandatory(Video Desired)" />
      <xsd:enumeration value="Allow Subscription" />
      <xsd:enumeration value="Disallow Subscription" />
      <xsd:enumeration value="Use System Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMediaPayload">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="G711 a-law 64K" />
      <xsd:enumeration value="G711 u-law 64K" />
      <xsd:enumeration value="G723" />
      <xsd:enumeration value="G729" />
      <xsd:enumeration value="G729AnnexA" />
      <xsd:enumeration value="G729AnnexB" />
      <xsd:enumeration value="G729AnnexA-AnnexB" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMixer">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Not Selected" />
      <xsd:enumeration value="Multicast Point" />
      <xsd:enumeration value="Unicast Bridge" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMobileSmartClient">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CUMC" />
      <xsd:enumeration value="Standard" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XModel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Cisco 30 SP+" />
      <xsd:enumeration value="Cisco 12 SP+" />
      <xsd:enumeration value="Cisco 12 SP" />
      <xsd:enumeration value="Cisco 12 S" />
      <xsd:enumeration value="Cisco 30 VIP" />
      <xsd:enumeration value="Cisco 7910" />
      <xsd:enumeration value="Cisco 7960" />
      <xsd:enumeration value="Cisco 7940" />
      <xsd:enumeration value="Cisco 7935" />
      <xsd:enumeration value="Cisco VGC Phone" />
      <xsd:enumeration value="Cisco VGC Virtual Phone" />
      <xsd:enumeration value="Cisco ATA 186" />
      <xsd:enumeration value="SCCP Phone" />
      <xsd:enumeration value="Analog Access" />
      <xsd:enumeration value="Digital Access" />
      <xsd:enumeration value="Digital Access+" />
      <xsd:enumeration value="Digital Access WS-X6608" />
      <xsd:enumeration value="Analog Access WS-X6624" />
      <xsd:enumeration value="VGC Gateway" />
      <xsd:enumeration value="Conference Bridge" />
      <xsd:enumeration value="Conference Bridge WS-X6608" />
      <xsd:enumeration value="Cisco IOS Conference Bridge (HDV2)" />
      <xsd:enumeration value="Cisco Conference Bridge (WS-SVC-CMM)" />
      <xsd:enumeration value="H.323 Phone" />
      <xsd:enumeration value="H.323 Gateway" />
      <xsd:enumeration value="Music On Hold" />
      <xsd:enumeration value="Device Pilot" />
      <xsd:enumeration value="CTI Port" />
      <xsd:enumeration value="CTI Route Point" />
      <xsd:enumeration value="Voice Mail Port" />
      <xsd:enumeration value="Cisco IOS Software Media Termination Point (HDV2)" />
      <xsd:enumeration value="Cisco Media Server (WS-SVC-CMM-MS)" />
      <xsd:enumeration value="Cisco Video Conference Bridge (IPVC-35xx)" />
      <xsd:enumeration value="Route List" />
      <xsd:enumeration value="Load Simulator" />
      <xsd:enumeration value="Media Termination Point" />
      <xsd:enumeration value="Media Termination Point Hardware" />
      <xsd:enumeration value="Cisco IOS Media Termination Point (HDV2)" />
      <xsd:enumeration value="Cisco Media Termination Point (WS-SVC-CMM)" />
      <xsd:enumeration value="Cisco 7941" />
      <xsd:enumeration value="Cisco 7971" />
      <xsd:enumeration value="MGCP Station" />
      <xsd:enumeration value="MGCP Trunk" />
      <xsd:enumeration value="GateKeeper" />
      <xsd:enumeration value="7914 14-Button Line Expansion Module" />
      <xsd:enumeration value="Trunk" />
      <xsd:enumeration value="Tone Announcement Player" />
      <xsd:enumeration value="SIP Trunk" />
      <xsd:enumeration value="SIP Gateway" />
      <xsd:enumeration value="WSM Trunk" />
      <xsd:enumeration value="Remote Destination Profile" />
      <xsd:enumeration value="7915 12-Button Line Expansion Module" />
      <xsd:enumeration value="7915 24-Button Line Expansion Module" />
      <xsd:enumeration value="7916 12-Button Line Expansion Module" />
      <xsd:enumeration value="7916 24-Button Line Expansion Module" />
      <xsd:enumeration value="CKEM 36-Button Line Expansion Module" />
      <xsd:enumeration value="Unknown MGCP Gateway" />
      <xsd:enumeration value="Unknown" />
      <xsd:enumeration value="Cisco 7985" />
      <xsd:enumeration value="Cisco 7911" />
      <xsd:enumeration value="Cisco 7961G-GE" />
      <xsd:enumeration value="Cisco 7941G-GE" />
      <xsd:enumeration value="Motorola CN622" />
      <xsd:enumeration value="Third-party SIP Device (Basic)" />
      <xsd:enumeration value="Cisco 7931" />
      <xsd:enumeration value="Cisco Unified Personal Communicator" />
      <xsd:enumeration value="Cisco 7921" />
      <xsd:enumeration value="Cisco 7906" />
      <xsd:enumeration value="Third-party SIP Device (Advanced)" />
      <xsd:enumeration value="Cisco TelePresence" />
      <xsd:enumeration value="Cisco 7962" />
      <xsd:enumeration value="Cisco 3951" />
      <xsd:enumeration value="Cisco 7937" />
      <xsd:enumeration value="Cisco 7942" />
      <xsd:enumeration value="Cisco 7945" />
      <xsd:enumeration value="Cisco 7965" />
      <xsd:enumeration value="Cisco 7975" />
      <xsd:enumeration value="Cisco 3911" />
      <xsd:enumeration value="Cisco Unified Mobile Communicator" />
      <xsd:enumeration value="Cisco TelePresence 1000" />
      <xsd:enumeration value="Cisco TelePresence 3000" />
      <xsd:enumeration value="Cisco TelePresence 3200" />
      <xsd:enumeration value="Cisco TelePresence 500" />
      <xsd:enumeration value="Cisco 7925" />
      <xsd:enumeration value="CP-9971" />
      <xsd:enumeration value="Cisco 6921" />
      <xsd:enumeration value="Cisco 6941" />
      <xsd:enumeration value="Cisco 6961" />
      <xsd:enumeration value="Cisco Unified Client Services Framework" />
      <xsd:enumeration value="Cisco TelePresence 1300" />
      <xsd:enumeration value="Cisco TelePresence 1100" />
      <xsd:enumeration value="Transnova S3" />
      <xsd:enumeration value="Cisco 7905" />
      <xsd:enumeration value="Cisco 7920" />
      <xsd:enumeration value="Cisco 7970" />
      <xsd:enumeration value="Cisco 7912" />
      <xsd:enumeration value="Cisco 7902" />
      <xsd:enumeration value="Cisco IP Communicator" />
      <xsd:enumeration value="Cisco 7961" />
      <xsd:enumeration value="Cisco 7936" />
      <xsd:enumeration value="Analog Phone" />
      <xsd:enumeration value="ISDN BRI Phone" />
      <xsd:enumeration value="SCCP gateway virtual phone" />
      <xsd:enumeration value="IP-STE" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMonitor">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Event Log" />
      <xsd:enumeration value="Sys Log" />
      <xsd:enumeration value="AST" />
      <xsd:enumeration value="SDI" />
      <xsd:enumeration value="SDL" />
      <xsd:enumeration value="Data Collector" />
      <xsd:enumeration value="SNMP Traps" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XMonthOfYear">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Jan" />
      <xsd:enumeration value="Feb" />
      <xsd:enumeration value="Mar" />
      <xsd:enumeration value="Apr" />
      <xsd:enumeration value="May" />
      <xsd:enumeration value="Jun" />
      <xsd:enumeration value="Jul" />
      <xsd:enumeration value="Aug" />
      <xsd:enumeration value="Sep" />
      <xsd:enumeration value="Oct" />
      <xsd:enumeration value="Nov" />
      <xsd:enumeration value="Dec" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XNSFService">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACCUNET Switched Digital Service" />
      <xsd:enumeration value="Billing Number Only" />
      <xsd:enumeration value="Billing Number Preferred" />
      <xsd:enumeration value="Calling Party Number Only" />
      <xsd:enumeration value="Calling Party Number Preferred" />
      <xsd:enumeration value="Foreign Exchange" />
      <xsd:enumeration value="Foreign Exchange Selection" />
      <xsd:enumeration value="International Long Distance Service" />
      <xsd:enumeration value="InterLATAOUTWATS" />
      <xsd:enumeration value="IntraLATAOUTWATS" />
      <xsd:enumeration value="Long Distance Service" />
      <xsd:enumeration value="MEGACOM Telecom Service" />
      <xsd:enumeration value="National ISDN Banded OUTWATS" />
      <xsd:enumeration value="National ISDN Unbanded OUTWATS" />
      <xsd:enumeration value="OUTWATS Selection" />
      <xsd:enumeration value="Private" />
      <xsd:enumeration value="Private Selection" />
      <xsd:enumeration value="Software Defined Network" />
      <xsd:enumeration value="Tie Trunk (Cut-through)" />
      <xsd:enumeration value="Tie Trunk (Senderized)" />
      <xsd:enumeration value="Tie Trunk Selection (Cut-through)" />
      <xsd:enumeration value="Tie Trunk Selection (Senderized)" />
      <xsd:enumeration value="WATS Band Selection" />
      <xsd:enumeration value="WATS Band Selection" />
      <xsd:enumeration value="WATS Maximal Subscribed Band" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XNetworkLocation">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="OnNet" />
      <xsd:enumeration value="OffNet" />
      <xsd:enumeration value="Use System Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XNodeUsage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Publisher" />
      <xsd:enumeration value="Subscriber" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XNumberingPlan">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Cisco CallManager" />
      <xsd:enumeration value="ISDN" />
      <xsd:enumeration value="National Standard" />
      <xsd:enumeration value="Private" />
      <xsd:enumeration value="Unknown" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XOperator">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT-SELECTED" />
      <xsd:enumeration value="EXISTS" />
      <xsd:enumeration value="DOES-NOT-EXIST" />
      <xsd:enumeration value="==" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XOutboundCallRollover">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Rollover" />
      <xsd:enumeration value="Rollover Within Same DN" />
      <xsd:enumeration value="Rollover to any line" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPRIChanIE">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Timeslot Number" />
      <xsd:enumeration value="Slotmap" />
      <xsd:enumeration value="Use Number when 1B" />
      <xsd:enumeration value="Continuous Number" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPacketCaptureMode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Batch Processing Mode" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XParam">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="boolean" />
      <xsd:enumeration value="double" />
      <xsd:enumeration value="long" />
      <xsd:enumeration value="string" />
      <xsd:enumeration value="date/time" />
      <xsd:enumeration value="any digit" />
      <xsd:enumeration value="digits" />
      <xsd:enumeration value="timeout" />
      <xsd:enumeration value="terminating" />
      <xsd:enumeration value="more digits" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPartitionUsage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Intercom" />
      <xsd:enumeration value="General" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPattern">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Pattern" />
      <xsd:enumeration value="Plar" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPatternPrecedence">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Flash Override" />
      <xsd:enumeration value="Flash" />
      <xsd:enumeration value="Immediate" />
      <xsd:enumeration value="Priority" />
      <xsd:enumeration value="Routine" />
      <xsd:enumeration value="Default" />
      <xsd:enumeration value="Executive Override" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPatternUsage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CallPark" />
      <xsd:enumeration value="Conference" />
      <xsd:enumeration value="Device" />
      <xsd:enumeration value="Translation" />
      <xsd:enumeration value="Call Pick Up Group" />
      <xsd:enumeration value="Route" />
      <xsd:enumeration value="Message Waiting" />
      <xsd:enumeration value="Hunt Pilot" />
      <xsd:enumeration value="Voice Mail Port" />
      <xsd:enumeration value="Domain Routing" />
      <xsd:enumeration value="IPAddress Routing" />
      <xsd:enumeration value="Device template" />
      <xsd:enumeration value="Directed Call Park" />
      <xsd:enumeration value="Device Intercom" />
      <xsd:enumeration value="Translation Intercom" />
      <xsd:enumeration value="Translation Calling Party Number " />
      <xsd:enumeration value="Mobility Handoff" />
      <xsd:enumeration value="Mobility DTMF" />
      <xsd:enumeration value="Mobility IVR" />
      <xsd:enumeration value="Device Intercom Template" />
      <xsd:enumeration value="Called Party Number Transformation" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPermission">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NoAccess" />
      <xsd:enumeration value="ReadOnly" />
      <xsd:enumeration value="FullAccess" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPersonalPhoneNumber">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Undefined" />
      <xsd:enumeration value="Home" />
      <xsd:enumeration value="Work" />
      <xsd:enumeration value="Mobile" />
      <xsd:enumeration value="Raw" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPhonePersonalization">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Disabled" />
      <xsd:enumeration value="Enabled" />
      <xsd:enumeration value="HTTPS Only" />
      <xsd:enumeration value="Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPhoneService">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Standard IP Phone Service" />
      <xsd:enumeration value="Directories" />
      <xsd:enumeration value="Messages" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPhoneServiceCategory">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="XML Service" />
      <xsd:enumeration value="Java MIDlet" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPhoneServiceDisplay">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Internal" />
      <xsd:enumeration value="External URL" />
      <xsd:enumeration value="Both" />
      <xsd:enumeration value="Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPhoneTemplateUsage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Traditional Phone Template" />
      <xsd:enumeration value="Side Car 14-Buttons" />
      <xsd:enumeration value="7915 Side Car 12-Buttons" />
      <xsd:enumeration value="7915 Side Car 24-Buttons" />
      <xsd:enumeration value="7916 Side Car 12-Buttons" />
      <xsd:enumeration value="7916 Side Car 24-Buttons" />
      <xsd:enumeration value="CKEM 36-Buttons" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPickupNotification">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Alert" />
      <xsd:enumeration value="Audio Alert" />
      <xsd:enumeration value="Visual Alert" />
      <xsd:enumeration value="Audio and Visual Alert" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPilotStation">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Attendant" />
      <xsd:enumeration value="User" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPlatformCertificate">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Tomcat" />
      <xsd:enumeration value="IPSec" />
      <xsd:enumeration value="CallManager" />
      <xsd:enumeration value="CAPF" />
      <xsd:enumeration value="Directory" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPluginUsage">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Application Menu" />
      <xsd:enumeration value="Installation" />
      <xsd:enumeration value="User Menu" />
      <xsd:enumeration value="Telecaster Menu" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPreemption">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Disabled" />
      <xsd:enumeration value="Forceful" />
      <xsd:enumeration value="Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPresentationBit">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Default" />
      <xsd:enumeration value="Allowed" />
      <xsd:enumeration value="Restricted" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPriOfNumber">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Cisco CallManager" />
      <xsd:enumeration value="Unknown" />
      <xsd:enumeration value="National" />
      <xsd:enumeration value="International" />
      <xsd:enumeration value="Subscriber" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XPriProtocol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PRI 4ESS" />
      <xsd:enumeration value="PRI 5E8" />
      <xsd:enumeration value="PRI 5E8 TELEOS" />
      <xsd:enumeration value="PRI 5E8 INTECOME" />
      <xsd:enumeration value="PRI 5E9" />
      <xsd:enumeration value="PRI DMS-100" />
      <xsd:enumeration value="PRI DMS-250" />
      <xsd:enumeration value="PRI EURO" />
      <xsd:enumeration value="PRI NI2" />
      <xsd:enumeration value="PRI AUSTRALIAN" />
      <xsd:enumeration value="PRI 5E8 CUSTOM" />
      <xsd:enumeration value="PRI ETSI SC" />
      <xsd:enumeration value="PRI NTT" />
      <xsd:enumeration value="PRI ISO QSIG T1" />
      <xsd:enumeration value="PRI ISO QSIG E1" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XProduct">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Pilot" />
      <xsd:enumeration value="Cisco Catalyst 6000 T1 VoIP Gateway" />
      <xsd:enumeration value="Cisco Catalyst 6000 E1 VoIP Gateway" />
      <xsd:enumeration value="Cisco Catalyst 6000 24 port FXS Gateway" />
      <xsd:enumeration value="Cisco Catalyst 6000 12 port FXO Gateway" />
      <xsd:enumeration value="H.323 Client" />
      <xsd:enumeration value="H.323 Gateway" />
      <xsd:enumeration value="Cisco MGCP FXO Port" />
      <xsd:enumeration value="Cisco MGCP FXS Port" />
      <xsd:enumeration value="Cisco 12 SP+" />
      <xsd:enumeration value="Cisco 12 SP" />
      <xsd:enumeration value="Cisco 12 S" />
      <xsd:enumeration value="Cisco 30 SP+" />
      <xsd:enumeration value="Cisco 30 VIP" />
      <xsd:enumeration value="CTI Port" />
      <xsd:enumeration value="Cisco CallManager Attendant Console Server" />
      <xsd:enumeration value="Cisco Voice Mail Port" />
      <xsd:enumeration value="Cisco Conference Bridge Software" />
      <xsd:enumeration value="Cisco Conference Bridge Hardware" />
      <xsd:enumeration value="Cisco Media Termination Point Software" />
      <xsd:enumeration value="Cisco Media Termination Point Hardware" />
      <xsd:enumeration value="Cisco 7935" />
      <xsd:enumeration value="SCCP Device" />
      <xsd:enumeration value="Cisco 7910" />
      <xsd:enumeration value="Cisco 7960" />
      <xsd:enumeration value="Cisco 7940" />
      <xsd:enumeration value="Route List" />
      <xsd:enumeration value="Unknown" />
      <xsd:enumeration value="Load Simulator" />
      <xsd:enumeration value="Gatekeeper" />
      <xsd:enumeration value="NM-1V" />
      <xsd:enumeration value="NM-2V" />
      <xsd:enumeration value="Cisco VG200" />
      <xsd:enumeration value="Cisco 26XX" />
      <xsd:enumeration value="Cisco 362X" />
      <xsd:enumeration value="Cisco 364X" />
      <xsd:enumeration value="Cisco 366X" />
      <xsd:enumeration value="CTI Route Point" />
      <xsd:enumeration value="Music On Hold" />
      <xsd:enumeration value="Cisco MGCP T1 Port" />
      <xsd:enumeration value="NM-HDV" />
      <xsd:enumeration value="VIC_SLOT" />
      <xsd:enumeration value="Cisco MGCP E1 Port" />
      <xsd:enumeration value="VWIC_SLOT" />
      <xsd:enumeration value="FLEX_SLOT" />
      <xsd:enumeration value="Cisco Catalyst 4224 Voice Gateway Switch" />
      <xsd:enumeration value="Cisco Catalyst 4000 Access Gateway  Module" />
      <xsd:enumeration value="Cisco IOS Conference Bridge" />
      <xsd:enumeration value="Cisco IOS Media Termination Point" />
      <xsd:enumeration value="Cisco  IAD2400" />
      <xsd:enumeration value="IAD2400_ANALOG" />
      <xsd:enumeration value="IAD2400_DIGITAL" />
      <xsd:enumeration value="Cisco VGC Phone" />
      <xsd:enumeration value="Cisco VG248 Gateway" />
      <xsd:enumeration value="VGC Port" />
      <xsd:enumeration value="Cisco VGC Virtual Phone" />
      <xsd:enumeration value="Cisco ATA 186" />
      <xsd:enumeration value="H.225 Trunk (Gatekeeper Controlled)" />
      <xsd:enumeration value="Inter-Cluster Trunk (Gatekeeper Controlled)" />
      <xsd:enumeration value="Inter-Cluster Trunk (Non-Gatekeeper Controlled)" />
      <xsd:enumeration value="Communication Media Module" />
      <xsd:enumeration value="WS-X6600" />
      <xsd:enumeration value="AIM-VOICE-30" />
      <xsd:enumeration value="NM-HDA" />
      <xsd:enumeration value="PA-VXA" />
      <xsd:enumeration value="PA-VXB" />
      <xsd:enumeration value="PA-VXC" />
      <xsd:enumeration value="PA-MCX" />
      <xsd:enumeration value="Annunciator" />
      <xsd:enumeration value="Cisco MGCP BRI Port" />
      <xsd:enumeration value="NM-HD-1V" />
      <xsd:enumeration value="NM-HD-2V" />
      <xsd:enumeration value="NM-HD-2VE" />
      <xsd:enumeration value="SIP Trunk" />
      <xsd:enumeration value="Cisco Conference Bridge (WS-SVC-CMM)" />
      <xsd:enumeration value="Cisco Media Server (WS-SVC-CMM-MS)" />
      <xsd:enumeration value="Cisco Media Termination Point (WS-SVC-CMM)" />
      <xsd:enumeration value="Cisco IOS Enhanced Software Media Termination Point" />
      <xsd:enumeration value="7914 14-Button Line Expansion Module" />
      <xsd:enumeration value="Cisco IOS Enhanced Conference Bridge" />
      <xsd:enumeration value="Cisco IOS Enhanced Media Termination Point" />
      <xsd:enumeration value="Cisco Video Conference Bridge(IPVC-35xx)" />
      <xsd:enumeration value="Hunt List" />
      <xsd:enumeration value="SIP WSM Connection" />
      <xsd:enumeration value="Remote Destination Profile" />
      <xsd:enumeration value="Cisco 7941" />
      <xsd:enumeration value="Cisco 7971" />
      <xsd:enumeration value="Cisco 7985" />
      <xsd:enumeration value="Cisco 7911" />
      <xsd:enumeration value="Cisco 7961G-GE" />
      <xsd:enumeration value="Cisco 7941G-GE" />
      <xsd:enumeration value="7915 12-Button Line Expansion Module" />
      <xsd:enumeration value="7915 24-Button Line Expansion Module" />
      <xsd:enumeration value="7916 12-Button Line Expansion Module" />
      <xsd:enumeration value="7916 24-Button Line Expansion Module" />
      <xsd:enumeration value="CKEM 36-Button Line Expansion Module" />
      <xsd:enumeration value="Motorola CN622" />
      <xsd:enumeration value="Third-party SIP Device (Basic)" />
      <xsd:enumeration value="Cisco 7931" />
      <xsd:enumeration value="Cisco Unified Personal Communicator" />
      <xsd:enumeration value="Cisco 7921" />
      <xsd:enumeration value="Cisco 7906" />
      <xsd:enumeration value="Third-party SIP Device (Advanced)" />
      <xsd:enumeration value="Cisco TelePresence" />
      <xsd:enumeration value="Cisco 7962" />
      <xsd:enumeration value="Cisco 3951" />
      <xsd:enumeration value="Cisco 7937" />
      <xsd:enumeration value="Cisco 7942" />
      <xsd:enumeration value="Cisco 7945" />
      <xsd:enumeration value="Cisco 7965" />
      <xsd:enumeration value="Cisco 7975" />
      <xsd:enumeration value="Cisco 3911" />
      <xsd:enumeration value="Cisco Unified Mobile Communicator" />
      <xsd:enumeration value="Cisco TelePresence 1000" />
      <xsd:enumeration value="Cisco TelePresence 3000" />
      <xsd:enumeration value="Cisco TelePresence 3200" />
      <xsd:enumeration value="Cisco TelePresence 500" />
      <xsd:enumeration value="Cisco 7925" />
      <xsd:enumeration value="CP-9971" />
      <xsd:enumeration value="Cisco 6921" />
      <xsd:enumeration value="Cisco 6941" />
      <xsd:enumeration value="Cisco 6961" />
      <xsd:enumeration value="Cisco Unified Client Services Framework" />
      <xsd:enumeration value="Cisco TelePresence 1300" />
      <xsd:enumeration value="Cisco TelePresence 1100" />
      <xsd:enumeration value="Transnova S3" />
      <xsd:enumeration value="WS-SVC-CMM-MS" />
      <xsd:enumeration value="NM-4VWIC-MBRD" />
      <xsd:enumeration value="VNM-HDA" />
      <xsd:enumeration value="NM-HDV2-0PORT" />
      <xsd:enumeration value="NM-HDV2-1PORT" />
      <xsd:enumeration value="NM-HDV2-2PORT" />
      <xsd:enumeration value="Cisco 3745" />
      <xsd:enumeration value="Cisco 3725" />
      <xsd:enumeration value="Cisco 7905" />
      <xsd:enumeration value="Cisco 7920" />
      <xsd:enumeration value="Cisco 269X" />
      <xsd:enumeration value="Cisco 7970" />
      <xsd:enumeration value="Cisco 1760" />
      <xsd:enumeration value="Cisco 1751" />
      <xsd:enumeration value="Cisco 7912" />
      <xsd:enumeration value="Cisco 7902" />
      <xsd:enumeration value="VG224" />
      <xsd:enumeration value="Cisco 2821" />
      <xsd:enumeration value="Cisco IP Communicator" />
      <xsd:enumeration value="Cisco 7961" />
      <xsd:enumeration value="Cisco 7936" />
      <xsd:enumeration value="Cisco 3825" />
      <xsd:enumeration value="Cisco 3845" />
      <xsd:enumeration value="Cisco 2811" />
      <xsd:enumeration value="Cisco 2851" />
      <xsd:enumeration value="Analog Phone" />
      <xsd:enumeration value="ISDN BRI Phone" />
      <xsd:enumeration value="SCCP gateway virtual phone" />
      <xsd:enumeration value="IP-STE" />
      <xsd:enumeration value="Cisco 2801" />
      <xsd:enumeration value="Cisco 1861" />
      <xsd:enumeration value="VG204" />
      <xsd:enumeration value="Cisco VGD-1T3" />
      <xsd:enumeration value="VG202" />
      <xsd:enumeration value="Cisco 881" />
      <xsd:enumeration value="Cisco 2951" />
      <xsd:enumeration value="Cisco 3945" />
      <xsd:enumeration value="Cisco 888/887/886" />
      <xsd:enumeration value="Cisco 2911" />
      <xsd:enumeration value="Cisco 3925" />
      <xsd:enumeration value="Cisco 2921" />
      <xsd:enumeration value="Cisco 2901" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XProductConfig">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CallingPartySelection" />
      <xsd:enumeration value="ClockReference" />
      <xsd:enumeration value="CSUParam" />
      <xsd:enumeration value="DeviceProtocol" />
      <xsd:enumeration value="DigitSending" />
      <xsd:enumeration value="PriProtocolT1" />
      <xsd:enumeration value="ProtocolSide" />
      <xsd:enumeration value="StartDialProtocol" />
      <xsd:enumeration value="Trunk" />
      <xsd:enumeration value="ZeroSuppressionPri" />
      <xsd:enumeration value="ZeroSuppressionT1" />
      <xsd:enumeration value="FramingPRI" />
      <xsd:enumeration value="FramingT1" />
      <xsd:enumeration value="ZeroSuppressionE1" />
      <xsd:enumeration value="MGCPCompatibleModules" />
      <xsd:enumeration value="MGCPSlotModuleMap" />
      <xsd:enumeration value="MGCPModuleVicMap" />
      <xsd:enumeration value="PriProtocolE1" />
      <xsd:enumeration value="NetworkLocale" />
      <xsd:enumeration value="Encode" />
      <xsd:enumeration value="BriProtocol" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XProtocolSide">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Network" />
      <xsd:enumeration value="User" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XQSIG">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Not Initialized" />
      <xsd:enumeration value="All PRI QSIG" />
      <xsd:enumeration value="Miscible Mix" />
      <xsd:enumeration value="H.323 Gateways" />
      <xsd:enumeration value="Mixed non-QSIG" />
      <xsd:enumeration value="Invalid group configuration" />
      <xsd:enumeration value="All SIP" />
      <xsd:enumeration value="Mixed SIP" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XQSIGVariant">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Changes" />
      <xsd:enumeration value="ECMA" />
      <xsd:enumeration value="ISO" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XRecordingFlag">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Call Recording Disabled" />
      <xsd:enumeration value="Automatic Call Recording Enabled" />
      <xsd:enumeration value="Application Invoked Call Recording Enabled" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XReleaseCauseValue">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Error" />
      <xsd:enumeration value="Unallocated Number" />
      <xsd:enumeration value="Call Rejected" />
      <xsd:enumeration value="Number Changed" />
      <xsd:enumeration value="Invalid Number Format" />
      <xsd:enumeration value="Precedence Level Exceeded" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XReset">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Reset" />
      <xsd:enumeration value="Restart" />
      <xsd:enumeration value="Apply Configuration" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XResetHandShake">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="new" />
      <xsd:enumeration value="done" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XResource">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AAR Group web pages" />
      <xsd:enumeration value="Annunciator web pages" />
      <xsd:enumeration value="Application Dial Rules web pages" />
      <xsd:enumeration value="CallManager web pages" />
      <xsd:enumeration value="CallManager Group web pages" />
      <xsd:enumeration value="Call Park web pages" />
      <xsd:enumeration value="Call Pickup web pages" />
      <xsd:enumeration value="CallManager Attendant Console Pilot Point web pages" />
      <xsd:enumeration value="CallManager Attendant Console User web pages" />
      <xsd:enumeration value="IPMA Wizard web pages" />
      <xsd:enumeration value="Conference Bridge web pages" />
      <xsd:enumeration value="Calling Search Space web pages" />
      <xsd:enumeration value="CTI Route Point web pages" />
      <xsd:enumeration value="Date/Time Group web pages" />
      <xsd:enumeration value="Default Device Profile web pages" />
      <xsd:enumeration value="Device Default web pages" />
      <xsd:enumeration value="Device Pool web pages" />
      <xsd:enumeration value="Device Profile web pages" />
      <xsd:enumeration value="Directory Number web pages" />
      <xsd:enumeration value="Firmware Load web pages" />
      <xsd:enumeration value="Gate Keeper web pages" />
      <xsd:enumeration value="Gateway web pages" />
      <xsd:enumeration value="Line Group web pages" />
      <xsd:enumeration value="Location web pages" />
      <xsd:enumeration value="Meet Me web pages" />
      <xsd:enumeration value="Message Waiting web pages" />
      <xsd:enumeration value="MOH Audio Source web pages" />
      <xsd:enumeration value="MOH Server web pages" />
      <xsd:enumeration value="Media Resource Group web pages" />
      <xsd:enumeration value="Media Resource Group List web pages" />
      <xsd:enumeration value="Media Termination Point web pages" />
      <xsd:enumeration value="Route Partition web page" />
      <xsd:enumeration value="Phone web pages" />
      <xsd:enumeration value="Phone Services web pages" />
      <xsd:enumeration value="Phone Button Template web pages" />
      <xsd:enumeration value="Plugin web pages" />
      <xsd:enumeration value="Region  web pages" />
      <xsd:enumeration value="Route Filter web pages" />
      <xsd:enumeration value="Route Group web pages" />
      <xsd:enumeration value="Route Hunt List web pages" />
      <xsd:enumeration value="Route Pattern web  pages" />
      <xsd:enumeration value="Route Plan Report web  pages" />
      <xsd:enumeration value="Server web pages" />
      <xsd:enumeration value="Service Parameter web pages" />
      <xsd:enumeration value="Softkey Template web pages" />
      <xsd:enumeration value="SRST web pages" />
      <xsd:enumeration value="Transcoder web pages" />
      <xsd:enumeration value="Translation Pattern web pages" />
      <xsd:enumeration value="Trunk web pages" />
      <xsd:enumeration value="User web pages" />
      <xsd:enumeration value="Voice Mail Pilot web pages" />
      <xsd:enumeration value="Voice Mail Port web pages" />
      <xsd:enumeration value="Voice Mail Port Wizard web pages" />
      <xsd:enumeration value="Voice Mail Profile web pages" />
      <xsd:enumeration value="Voice Mail web pages" />
      <xsd:enumeration value="Alarm Configuration web page" />
      <xsd:enumeration value="Alarm Definition web page" />
      <xsd:enumeration value="Trace Configuration web page" />
      <xsd:enumeration value="Troubleshoot Trace Settings web page" />
      <xsd:enumeration value="Service Activation web page" />
      <xsd:enumeration value="Control Center - Feature Services web page" />
      <xsd:enumeration value="Control Center - Network Services web page" />
      <xsd:enumeration value="Serviceability Report Archive" />
      <xsd:enumeration value="User Group web pages" />
      <xsd:enumeration value="Role web pages" />
      <xsd:enumeration value="Security Setting web pages" />
      <xsd:enumeration value="Enterprise Parameters web pages" />
      <xsd:enumeration value="LDAP System Configuration Page" />
      <xsd:enumeration value="LDAP Directory Configuration Pages" />
      <xsd:enumeration value="LDAP Authentication Configuration Page" />
      <xsd:enumeration value="MLPP Domain web pages" />
      <xsd:enumeration value="SNMP-&gt;V1/V2c-&gt;Configuration-&gt;Community String web page" />
      <xsd:enumeration value="SNMP-&gt;V1/V2c-&gt;Configuration-&gt;Notification Destination web page" />
      <xsd:enumeration value="SNMP-&gt;V3 Configuration-&gt;User web page" />
      <xsd:enumeration value="SNMP-&gt;V3 Configuration-&gt;Notification Destination web page" />
      <xsd:enumeration value="SNMP-&gt;system Group Configuration-&gt;MIB2 System Group Configuration web page" />
      <xsd:enumeration value="Log Partition Monitoring-&gt;Configuration web page" />
      <xsd:enumeration value="Line Appearance web pages" />
      <xsd:enumeration value="CTI Application" />
      <xsd:enumeration value="CTI Calling Number" />
      <xsd:enumeration value="CTI Call Park" />
      <xsd:enumeration value="CTI All Devices" />
      <xsd:enumeration value="AXL Database API" />
      <xsd:enumeration value="DHCP Server Web Pages" />
      <xsd:enumeration value="DHCP Subnet Web Pages" />
      <xsd:enumeration value="Application User Web Pages" />
      <xsd:enumeration value="Speed Dial Page" />
      <xsd:enumeration value="Service Url Page" />
      <xsd:enumeration value="Phone Device Profile Page" />
      <xsd:enumeration value="Phone Service Subscribe Page" />
      <xsd:enumeration value="DRF Schedule Page" />
      <xsd:enumeration value="DRF Show Status Page" />
      <xsd:enumeration value="DRF Show Dependency Page" />
      <xsd:enumeration value="DRF Restore Warning Page" />
      <xsd:enumeration value="Real Time Monitoring Tool" />
      <xsd:enumeration value="SOAP Realtime Informations and Control Center APIs" />
      <xsd:enumeration value="SOAP Performance Informations APIs" />
      <xsd:enumeration value="SOAP Log Collection APIs" />
      <xsd:enumeration value="SOAP CDR on Demand APIs" />
      <xsd:enumeration value="SOAP Backup and Restore APIs" />
      <xsd:enumeration value="Fac Info" />
      <xsd:enumeration value="NTP Server" />
      <xsd:enumeration value="CMC Info" />
      <xsd:enumeration value="Time Period" />
      <xsd:enumeration value="Time Schedule" />
      <xsd:enumeration value="Sip Profile" />
      <xsd:enumeration value="Hunt List" />
      <xsd:enumeration value="Route List" />
      <xsd:enumeration value="SIP Phone Security Profile" />
      <xsd:enumeration value="SIP Trunk Security Profile" />
      <xsd:enumeration value="SCCP Security Profile" />
      <xsd:enumeration value="Hunt Pilot" />
      <xsd:enumeration value="Route Pattern2" />
      <xsd:enumeration value="Bulk Job Scheduler pages" />
      <xsd:enumeration value="User and Phone add" />
      <xsd:enumeration value="Dial Rules Info" />
      <xsd:enumeration value="SIP Route Pattern" />
      <xsd:enumeration value="Presence Group" />
      <xsd:enumeration value="BLF Speeddial" />
      <xsd:enumeration value="Dial Rule Pattern Info" />
      <xsd:enumeration value="Pattern Parameter Info" />
      <xsd:enumeration value="Bulk File Upload Pages" />
      <xsd:enumeration value="CallManager Attendant Console User File Upload" />
      <xsd:enumeration value="Directory Dial Rules pages" />
      <xsd:enumeration value="Application User CAPF" />
      <xsd:enumeration value="End User CAPF" />
      <xsd:enumeration value="SIP Realm" />
      <xsd:enumeration value="Gateway Security Profile" />
      <xsd:enumeration value="H323 Security Profile" />
      <xsd:enumeration value="Application Server" />
      <xsd:enumeration value="SOAP Control Center APIs" />
      <xsd:enumeration value="Trace Collection Tool" />
      <xsd:enumeration value="Licensing Report" />
      <xsd:enumeration value="Common Phone Profile" />
      <xsd:enumeration value="EM Proxy Rights" />
      <xsd:enumeration value="Licensing Calculator" />
      <xsd:enumeration value="Licensing File Upload" />
      <xsd:enumeration value="CCMUser: Device" />
      <xsd:enumeration value="CCMUser: Line Settings" />
      <xsd:enumeration value="CCMUser: Speed Dial User" />
      <xsd:enumeration value="CCMUser: IP Phone Services" />
      <xsd:enumeration value="CCMUser: Service URL" />
      <xsd:enumeration value="CCMUser: User Settings" />
      <xsd:enumeration value="CCMUser: Directory" />
      <xsd:enumeration value="CCMUser: Personal Address Book" />
      <xsd:enumeration value="CCMUser: Fast Dials" />
      <xsd:enumeration value="Reorder Info" />
      <xsd:enumeration value="Dial Plan" />
      <xsd:enumeration value="Add Unity User" />
      <xsd:enumeration value="Super Copy Info" />
      <xsd:enumeration value="Fixed MOH Audio Source" />
      <xsd:enumeration value="SRST Certificate" />
      <xsd:enumeration value="RTMT-&gt;Profile Saving" />
      <xsd:enumeration value="RTMT-&gt;Alert Config" />
      <xsd:enumeration value="MOH Audio Source Management web pages" />
      <xsd:enumeration value="Bulk Phone Template" />
      <xsd:enumeration value="Bulk Phone File Format" />
      <xsd:enumeration value="Bulk Validate Phones" />
      <xsd:enumeration value="Bulk Insert Phones" />
      <xsd:enumeration value="Bulk Update Phones" />
      <xsd:enumeration value="Bulk Delete Phones" />
      <xsd:enumeration value="Bulk Export Phones" />
      <xsd:enumeration value="Bulk Add/Update Phones" />
      <xsd:enumeration value="Bulk Reset/Restart Phones" />
      <xsd:enumeration value="Bulk Generate Phone Reports" />
      <xsd:enumeration value="Bulk Migrate Phones" />
      <xsd:enumeration value="Bulk User Template" />
      <xsd:enumeration value="Bulk Insert Users" />
      <xsd:enumeration value="Bulk Update Users" />
      <xsd:enumeration value="Bulk Delete Users" />
      <xsd:enumeration value="Bulk Export Users" />
      <xsd:enumeration value="Bulk Reset Password/PIN" />
      <xsd:enumeration value="Bulk Generate User Reports" />
      <xsd:enumeration value="Bulk Phone &amp; Users File Format" />
      <xsd:enumeration value="Bulk Validate Phones/Users" />
      <xsd:enumeration value="Bulk Insert Phones with Users" />
      <xsd:enumeration value="Bulk Insert IPMA Managers/Assistants" />
      <xsd:enumeration value="Bulk Delete IPMA Managers/Assistants" />
      <xsd:enumeration value="Bulk Delete IPMA Managers" />
      <xsd:enumeration value="Bulk Delete IPMA Assistants" />
      <xsd:enumeration value="Bulk Generate IPMA Manager Reports" />
      <xsd:enumeration value="Bulk Generate IPMA Assistant Reports" />
      <xsd:enumeration value="Bulk UDP Template" />
      <xsd:enumeration value="Bulk UDP File Format" />
      <xsd:enumeration value="Bulk Validate UDP" />
      <xsd:enumeration value="Bulk Insert UDP" />
      <xsd:enumeration value="Bulk Delete UDP" />
      <xsd:enumeration value="Bulk Export UDP" />
      <xsd:enumeration value="Bulk Add/Update Lines" />
      <xsd:enumeration value="Bulk Generate UDP Reports" />
      <xsd:enumeration value="Bulk Gateway Template" />
      <xsd:enumeration value="Bulk Insert Gateways" />
      <xsd:enumeration value="Bulk Delete Gateways" />
      <xsd:enumeration value="Bulk Generate Gateway Reports" />
      <xsd:enumeration value="Bulk Insert Forced Authorization Codes" />
      <xsd:enumeration value="Bulk Delete Forced Authorization Codes" />
      <xsd:enumeration value="Bulk Insert Client Matter Codes" />
      <xsd:enumeration value="Bulk Delete Client Matter Codes" />
      <xsd:enumeration value="Bulk Insert Call Pickup Group" />
      <xsd:enumeration value="Bulk Delete Call Pickup Group" />
      <xsd:enumeration value="Bulk Secure TAPS" />
      <xsd:enumeration value="Bulk User Locales for TAPS" />
      <xsd:enumeration value="Bulk View TAPS Log File" />
      <xsd:enumeration value="Phone Security Profile" />
      <xsd:enumeration value="Directed Call Park" />
      <xsd:enumeration value="Physical Location" />
      <xsd:enumeration value="Device Mobility Group" />
      <xsd:enumeration value="Device Mobility Info" />
      <xsd:enumeration value="Common Device Mobility Profile" />
      <xsd:enumeration value="Cisco UPS Capabilities Assignment" />
      <xsd:enumeration value="BLF Directed Call Park" />
      <xsd:enumeration value="CTI Call Monitoring" />
      <xsd:enumeration value="CTI Call Recording" />
      <xsd:enumeration value="Recording Profile" />
      <xsd:enumeration value="IntercomCallingSearchSpace" />
      <xsd:enumeration value="IntercomRoutePartition" />
      <xsd:enumeration value="IntercomDirectoryNumber" />
      <xsd:enumeration value="IntercomTranslation" />
      <xsd:enumeration value="Access List" />
      <xsd:enumeration value="Transformation Pattern" />
      <xsd:enumeration value="Bulk CUPS User Page" />
      <xsd:enumeration value="Bulk Region Matrix" />
      <xsd:enumeration value="RemoteDestinationTemplate" />
      <xsd:enumeration value="RemoteDestination" />
      <xsd:enumeration value="Bulk Update Line Appearance" />
      <xsd:enumeration value="Bulk Export Line Appearance" />
      <xsd:enumeration value="CCMUser: RemoteDestination" />
      <xsd:enumeration value="Mobility Configuration" />
      <xsd:enumeration value="Credential Policy" />
      <xsd:enumeration value="Mobile Voice Access" />
      <xsd:enumeration value="CCMUser: Access List" />
      <xsd:enumeration value="Bulk Insert Access List" />
      <xsd:enumeration value="Bulk Delete Access List" />
      <xsd:enumeration value="Bulk Export Access List" />
      <xsd:enumeration value="Credential" />
      <xsd:enumeration value="Bulk Insert Remote Destination" />
      <xsd:enumeration value="Bulk Delete Remote Destination" />
      <xsd:enumeration value="Bulk Export Remote Destination" />
      <xsd:enumeration value="Credential Policy Default" />
      <xsd:enumeration value="Bulk Insert Remote Destination Profile" />
      <xsd:enumeration value="Bulk Delete Remote Destination Profile" />
      <xsd:enumeration value="Bulk Export Remote Destination Profile" />
      <xsd:enumeration value="Bulk Remote Destination Profile Template" />
      <xsd:enumeration value="Bulk Remote Destination Profile File Format" />
      <xsd:enumeration value="Bulk Config Tool Export" />
      <xsd:enumeration value="Bulk Config Tool Import" />
      <xsd:enumeration value="Bulk Update Intercom" />
      <xsd:enumeration value="Bulk Insert Intercom" />
      <xsd:enumeration value="Bulk Gateway File Format" />
      <xsd:enumeration value="Bulk Intercom DN Template" />
      <xsd:enumeration value="Called Party Transformation Pattern" />
      <xsd:enumeration value="Resource Priority Namespace" />
      <xsd:enumeration value="Resource Priority Namespace List" />
      <xsd:enumeration value="CCMUser: Plugins" />
      <xsd:enumeration value="CUMA Server Security Profile" />
      <xsd:enumeration value="Bulk Insert Time of Day Access" />
      <xsd:enumeration value="Bulk Delete Time of Day Access" />
      <xsd:enumeration value="Bulk Export Time of Day Access" />
      <xsd:enumeration value="CDR Management" />
      <xsd:enumeration value="Bulk Config Tool Import Validation" />
      <xsd:enumeration value="Bulk UDP Intercom DN Update" />
      <xsd:enumeration value="Bulk UDP Intercom DN Add" />
      <xsd:enumeration value="SOAP SNMP Config API" />
      <xsd:enumeration value="System Reports" />
      <xsd:enumeration value="Show Report" />
      <xsd:enumeration value="Generate Report" />
      <xsd:enumeration value="Download Report" />
      <xsd:enumeration value="Delte Unassigned DN" />
      <xsd:enumeration value="Upload Report" />
      <xsd:enumeration value="Enterprise Phone Configuration" />
      <xsd:enumeration value="Bulk Phone Migration" />
      <xsd:enumeration value="Audit Trace" />
      <xsd:enumeration value="Audit Configuration" />
      <xsd:enumeration value="DNA Analyser" />
      <xsd:enumeration value="DNA Gateways" />
      <xsd:enumeration value="DNA Phones" />
      <xsd:enumeration value="DNA Trunks" />
      <xsd:enumeration value="DNA Dump Da Information" />
      <xsd:enumeration value="DNA Multiple Analyser" />
      <xsd:enumeration value="DNA View Files" />
      <xsd:enumeration value="DNA Control Center" />
      <xsd:enumeration value="CTI Control of Phones supporting Connected Xfer and conf" />
      <xsd:enumeration value="Geolocation" />
      <xsd:enumeration value="Geolocation Filter" />
      <xsd:enumeration value="Geolocation Policy" />
      <xsd:enumeration value="Phone Migration" />
      <xsd:enumeration value="CTI Control of Phones supporting Rollover Mode" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XResourceAction">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="enabled" />
      <xsd:enumeration value="allow modification" />
      <xsd:enumeration value="allow retrieval" />
      <xsd:enumeration value="allow control of all devices" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="Allow to use API" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="allow" />
      <xsd:enumeration value="enable CTI security" />
      <xsd:enumeration value="enable CTI SRTP key distribution" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="allow monitoring" />
      <xsd:enumeration value="allow recording" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="Allow Control" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="update" />
      <xsd:enumeration value="read" />
      <xsd:enumeration value="Allow Control" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XRevertPriority">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Default" />
      <xsd:enumeration value="Highest" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XRingSetting">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Use System Default" />
      <xsd:enumeration value="Disable" />
      <xsd:enumeration value="Flash Only" />
      <xsd:enumeration value="Ring Once" />
      <xsd:enumeration value="Ring" />
      <xsd:enumeration value="Beep Only" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XRisClass">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Not Applicable" />
      <xsd:enumeration value="Phone" />
      <xsd:enumeration value="Gateway" />
      <xsd:enumeration value="H.323" />
      <xsd:enumeration value="CTI" />
      <xsd:enumeration value="Voice Mail" />
      <xsd:enumeration value="MediaResources" />
      <xsd:enumeration value="Hunt List" />
      <xsd:enumeration value="SIP" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XRisStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Unknown" />
      <xsd:enumeration value="Registered" />
      <xsd:enumeration value="Unregistered" />
      <xsd:enumeration value="Rejected" />
      <xsd:enumeration value="Partial Registered" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSIPCodec">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="711ulaw" />
      <xsd:enumeration value="711alaw" />
      <xsd:enumeration value="G729/G729a" />
      <xsd:enumeration value="G729b/G729ab" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSIPReroute">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Never" />
      <xsd:enumeration value="Contact Header" />
      <xsd:enumeration value="Call-Info Header with purpose=x-cisco-origIP" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSRSTOption">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Disable" />
      <xsd:enumeration value="Use Default Gateway" />
      <xsd:enumeration value="Legacy Configuration" />
      <xsd:enumeration value="User Specific" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XScheduleUnit">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HOUR" />
      <xsd:enumeration value="DAY" />
      <xsd:enumeration value="WEEK" />
      <xsd:enumeration value="MONTH" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSecurityPolicy">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SIP Trunk" />
      <xsd:enumeration value="Phone" />
      <xsd:enumeration value="VM Port" />
      <xsd:enumeration value="Conference Bridge" />
      <xsd:enumeration value="CUMA Server" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XService">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Cisco CallManager" />
      <xsd:enumeration value="Cisco Tftp" />
      <xsd:enumeration value="Cisco Messaging Interface" />
      <xsd:enumeration value="Cisco IP Voice Media Streaming App" />
      <xsd:enumeration value="Cisco CTIManager" />
      <xsd:enumeration value="Cisco CallManager Attendant Console Server" />
      <xsd:enumeration value="Cisco RIS Data Collector" />
      <xsd:enumeration value="Cisco Extension Mobility" />
      <xsd:enumeration value="Cisco Database Layer Monitor" />
      <xsd:enumeration value="Enterprise Wide" />
      <xsd:enumeration value="Cisco IP Manager Assistant" />
      <xsd:enumeration value="Cisco Extended Functions" />
      <xsd:enumeration value="Cisco Serviceability Reporter" />
      <xsd:enumeration value="Cisco CTL Provider" />
      <xsd:enumeration value="Cisco WebDialer Web Service" />
      <xsd:enumeration value="Cisco Dialed Number Analyzer" />
      <xsd:enumeration value="Cisco CDR Repository Manager" />
      <xsd:enumeration value="Cisco Certificate Authority Proxy Function" />
      <xsd:enumeration value="Cisco CDR Agent" />
      <xsd:enumeration value="Cisco SOAP - CDRonDemand Service" />
      <xsd:enumeration value="Cisco CAR Scheduler" />
      <xsd:enumeration value="Cisco CAR Web Service" />
      <xsd:enumeration value="Cisco AMC Service" />
      <xsd:enumeration value="Cisco Log Partition Monitoring Tool" />
      <xsd:enumeration value="Cisco CallManager SNMP Service" />
      <xsd:enumeration value="Cisco DirSync" />
      <xsd:enumeration value="Cisco AXL Web Service" />
      <xsd:enumeration value="Cisco DRF Master" />
      <xsd:enumeration value="Cisco DRF Local" />
      <xsd:enumeration value="Cisco CallManager Cisco IP Phone Services" />
      <xsd:enumeration value="Cisco CCMAdmin Web Service" />
      <xsd:enumeration value="Cisco CCMRealm Web Service" />
      <xsd:enumeration value="Cisco CCMService Web Service" />
      <xsd:enumeration value="Cisco SOAP Web Service" />
      <xsd:enumeration value="Cisco RTMT Web Service" />
      <xsd:enumeration value="Cisco CCM PD Web Service" />
      <xsd:enumeration value="Cisco CCM DBL Web Library" />
      <xsd:enumeration value="Cisco CCM NCS Web Library" />
      <xsd:enumeration value="Cisco Bulk Provisioning Service" />
      <xsd:enumeration value="Cisco Extension Mobility Application" />
      <xsd:enumeration value="Cisco License Manager" />
      <xsd:enumeration value="Cisco Role-based Security" />
      <xsd:enumeration value="Cisco Trace Collection Service" />
      <xsd:enumeration value="Cisco Security Agent" />
      <xsd:enumeration value="Cisco DHCP Monitor Service" />
      <xsd:enumeration value="Cisco TAPS Service" />
      <xsd:enumeration value="Cisco Tomcat" />
      <xsd:enumeration value="Cisco Unified OS Admin Web Service" />
      <xsd:enumeration value="Cisco GRT Communication Web Service" />
      <xsd:enumeration value="Cisco Unified Reporting Web Service" />
      <xsd:enumeration value="Cisco RisBean Library" />
      <xsd:enumeration value="Cisco SOAPMessage Service" />
      <xsd:enumeration value="Cisco CCMUser Web Service" />
      <xsd:enumeration value="Cisco Audit Event Service" />
      <xsd:enumeration value="Cisco UXL Web Service" />
      <xsd:enumeration value="Cisco Common User Interface" />
      <xsd:enumeration value="Cisco Unified Mobile Voice Access Service" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XServiceCategory">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Service" />
      <xsd:enumeration value="Servlet" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XServiceGrouping">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CM Services" />
      <xsd:enumeration value="CTI Services" />
      <xsd:enumeration value="CDR Services" />
      <xsd:enumeration value="Database and Admin Services" />
      <xsd:enumeration value="Performance and Monitoring Services" />
      <xsd:enumeration value="Security Services" />
      <xsd:enumeration value="Directory Services" />
      <xsd:enumeration value="Backup and Restore Services" />
      <xsd:enumeration value="System Services" />
      <xsd:enumeration value="Soap Services" />
      <xsd:enumeration value="Voice Quality Reporter Services" />
      <xsd:enumeration value="Platform Services" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XServiceRestriction">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="none" />
      <xsd:enumeration value="ordered" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSilenceSuppressionThreshold">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Disable" />
      <xsd:enumeration value="-48dbm0" />
      <xsd:enumeration value="-45dbm0" />
      <xsd:enumeration value="-42dbm0" />
      <xsd:enumeration value="-39dbm0" />
      <xsd:enumeration value="-36dbm0" />
      <xsd:enumeration value="-33dbm0" />
      <xsd:enumeration value="-30dbm0" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSipAssertedType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Default" />
      <xsd:enumeration value="PAI" />
      <xsd:enumeration value="PPI" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSipPrivacy">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Default" />
      <xsd:enumeration value="None" />
      <xsd:enumeration value="ID" />
      <xsd:enumeration value="ID Critical" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSoftkey">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Undefined" />
      <xsd:enumeration value="Redial" />
      <xsd:enumeration value="NewCall" />
      <xsd:enumeration value="Hold" />
      <xsd:enumeration value="Transfer" />
      <xsd:enumeration value="Forward All" />
      <xsd:enumeration value="Forward Busy" />
      <xsd:enumeration value="Forward No Answer" />
      <xsd:enumeration value="Backward" />
      <xsd:enumeration value="End Call" />
      <xsd:enumeration value="Resume" />
      <xsd:enumeration value="Answer" />
      <xsd:enumeration value="Info" />
      <xsd:enumeration value="Conference" />
      <xsd:enumeration value="Park" />
      <xsd:enumeration value="Join" />
      <xsd:enumeration value="Meet Me" />
      <xsd:enumeration value="Pick Up" />
      <xsd:enumeration value="Group Pick Up" />
      <xsd:enumeration value="Remove Last Conference Party" />
      <xsd:enumeration value="Call Back" />
      <xsd:enumeration value="Barge" />
      <xsd:enumeration value="Quality Report Tool" />
      <xsd:enumeration value="Toggle Malicious Call Trace" />
      <xsd:enumeration value="Direct Transfer" />
      <xsd:enumeration value="Select" />
      <xsd:enumeration value="Conference List" />
      <xsd:enumeration value="Immediate Divert" />
      <xsd:enumeration value="Conference Barge" />
      <xsd:enumeration value="Video Mode Command" />
      <xsd:enumeration value="Other Pickup" />
      <xsd:enumeration value="HLog" />
      <xsd:enumeration value="Reject" />
      <xsd:enumeration value="Mobility" />
      <xsd:enumeration value="Redirect" />
      <xsd:enumeration value="Intercept" />
      <xsd:enumeration value="Toggle Watch On/Off" />
      <xsd:enumeration value="Transfer to Voice Mail" />
      <xsd:enumeration value="Toggle Do Not Disturb" />
      <xsd:enumeration value="Toggle Send All Calls" />
      <xsd:enumeration value="Abbreviated Dial" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XStartDialProtocol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Not Set" />
      <xsd:enumeration value="Immediate" />
      <xsd:enumeration value="Wink Start Feature Group B" />
      <xsd:enumeration value="Delay Dial" />
      <xsd:enumeration value="Wink Start Feature Group D" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XStatus">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Off" />
      <xsd:enumeration value="On" />
      <xsd:enumeration value="Default" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSubClass">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Default" />
      <xsd:enumeration value="CTI Port" />
      <xsd:enumeration value="H323 Phone" />
      <xsd:enumeration value="Default" />
      <xsd:enumeration value="MGCP Stn" />
      <xsd:enumeration value="MGCP Trunk" />
      <xsd:enumeration value="H323 GW" />
      <xsd:enumeration value="Conference Bridge" />
      <xsd:enumeration value="Conference Bridge WS-X6608" />
      <xsd:enumeration value="Cisco IOS Conference Bridge (HDV2)" />
      <xsd:enumeration value="Cisco Conference Bridge (WS-SVC-CMM)" />
      <xsd:enumeration value="Cisco Media Server (WS-SVC-CMM-MS)" />
      <xsd:enumeration value="Cisco Video Conference Bridge (IPVC-35xx)" />
      <xsd:enumeration value="Music On Hold" />
      <xsd:enumeration value="Device Pilot" />
      <xsd:enumeration value="CTI Route Point" />
      <xsd:enumeration value="Voice Mail Port" />
      <xsd:enumeration value="Route List" />
      <xsd:enumeration value="Load Simulator" />
      <xsd:enumeration value="Media Termination Point" />
      <xsd:enumeration value="Media Termination Point Hardware" />
      <xsd:enumeration value="Cisco IOS Software Media Termination Point (HDV2)" />
      <xsd:enumeration value="Cisco IOS Media Termination Point (HDV2)" />
      <xsd:enumeration value="Cisco Media Termination Point (WS-SVC-CMM)" />
      <xsd:enumeration value="GateKeeper" />
      <xsd:enumeration value="Trunk" />
      <xsd:enumeration value="SIP Trunk" />
      <xsd:enumeration value="Tone Announcement Player" />
      <xsd:enumeration value="Invalid" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSupportsFeature">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IP Phone Services" />
      <xsd:enumeration value="Is legacy device" />
      <xsd:enumeration value="HTTP Server Enabled" />
      <xsd:enumeration value="Music On Hold" />
      <xsd:enumeration value="Ring Setting on This Line" />
      <xsd:enumeration value="Call Waiting" />
      <xsd:enumeration value="Auto Answer" />
      <xsd:enumeration value="Shared Line Appearance" />
      <xsd:enumeration value="Extension Mobility" />
      <xsd:enumeration value="Show Speeddial Labels" />
      <xsd:enumeration value="Show Forward on Failure" />
      <xsd:enumeration value="Has firmware load" />
      <xsd:enumeration value="Has phone templates" />
      <xsd:enumeration value="Media Resource Managed" />
      <xsd:enumeration value="CTI controlled" />
      <xsd:enumeration value="Phone template is User Modifiable" />
      <xsd:enumeration value="Localization" />
      <xsd:enumeration value="Has softkey template" />
      <xsd:enumeration value="Supports different port types for FXO module" />
      <xsd:enumeration value="Phone attached to a Gateway (Like Chalice)" />
      <xsd:enumeration value="Automated Alternate Routing (AAR)" />
      <xsd:enumeration value="Network Hold" />
      <xsd:enumeration value="User Hold" />
      <xsd:enumeration value="Monitor" />
      <xsd:enumeration value="Record" />
      <xsd:enumeration value="Auto Registration" />
      <xsd:enumeration value="Use Generic Icon" />
      <xsd:enumeration value="MWL Policy" />
      <xsd:enumeration value="Line Text Label" />
      <xsd:enumeration value="Multiple Call Display" />
      <xsd:enumeration value="Abbreviated Dial" />
      <xsd:enumeration value="Built In Bridge" />
      <xsd:enumeration value="Malicious Call Identification" />
      <xsd:enumeration value="Call Precedence (for MLPP)" />
      <xsd:enumeration value="Call Pre-emption (for MLPP)" />
      <xsd:enumeration value="Status Report (Busy Device Indicator)" />
      <xsd:enumeration value="Video" />
      <xsd:enumeration value="Security Authentication" />
      <xsd:enumeration value="Security Encryption" />
      <xsd:enumeration value="Online User Guide (HTML or PDF)" />
      <xsd:enumeration value="Gateway supports summit MTP" />
      <xsd:enumeration value="Expansion Module" />
      <xsd:enumeration value="Privacy" />
      <xsd:enumeration value="IPMA" />
      <xsd:enumeration value="V150 Modem Relay Capable" />
      <xsd:enumeration value="Hospitality" />
      <xsd:enumeration value="Max Call Limit" />
      <xsd:enumeration value="Manufacture Installed Certificate(MIC)" />
      <xsd:enumeration value="Perfer alternate script" />
      <xsd:enumeration value="Key Authority" />
      <xsd:enumeration value="File encrypt" />
      <xsd:enumeration value="Secure RTP" />
      <xsd:enumeration value="BLF Speed dial" />
      <xsd:enumeration value="URI Dialing" />
      <xsd:enumeration value="Digest authentication support" />
      <xsd:enumeration value="Support for server-side auth TLS (basic)" />
      <xsd:enumeration value="Support for Mutual-auth TLS" />
      <xsd:enumeration value="Support CAPF" />
      <xsd:enumeration value="Require DTMF Reception" />
      <xsd:enumeration value="RFC 2833 Disabled" />
      <xsd:enumeration value="BLF Speed Dial with URI" />
      <xsd:enumeration value="Secure Shell Support" />
      <xsd:enumeration value="SIP Dial-Plan" />
      <xsd:enumeration value="Specify Types of TFTP Config Files" />
      <xsd:enumeration value="Presence Subscription" />
      <xsd:enumeration value="SIP TCP Support" />
      <xsd:enumeration value="Feature Safe on Phone Template" />
      <xsd:enumeration value="Size Safe on Phone Template" />
      <xsd:enumeration value="Hold Reversion" />
      <xsd:enumeration value="Intercom" />
      <xsd:enumeration value="Do Not Disturb" />
      <xsd:enumeration value="Audible Message Waiting Indicator" />
      <xsd:enumeration value="Digest Password Caching" />
      <xsd:enumeration value="Mobility" />
      <xsd:enumeration value="Dual-Mode" />
      <xsd:enumeration value="Automatic Outbound Call Rollover" />
      <xsd:enumeration value="Join Across Lines" />
      <xsd:enumeration value="Single Button Barge" />
      <xsd:enumeration value="Phone Personalization" />
      <xsd:enumeration value="Secure Tone" />
      <xsd:enumeration value="7915 12-Button Line Expansion Module" />
      <xsd:enumeration value="7915 24-Button Line Expansion Module" />
      <xsd:enumeration value="7916 12-Button Line Expansion Module" />
      <xsd:enumeration value="7916 24-Button Line Expansion Module" />
      <xsd:enumeration value="Expansion Module Supports Matrix" />
      <xsd:enumeration value="Enhanced Message Waiting Indicator" />
      <xsd:enumeration value="Apply Configuration" />
      <xsd:enumeration value="Assisted Directed Call Park" />
      <xsd:enumeration value="Multiple Level Vendor Config" />
      <xsd:enumeration value="Log Missed Calls Option" />
      <xsd:enumeration value="CKEM 36-Button Line Expansion Module" />
      <xsd:enumeration value="Connected Transfer and Conference" />
      <xsd:enumeration value="Restrict Maximum Call and Busy Trigger" />
      <xsd:enumeration value="G.Clear" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSystemFeature">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="VoiceMail" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTelnetLevel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Disabled" />
      <xsd:enumeration value="Limited" />
      <xsd:enumeration value="Enabled" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTerminal">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="-- Not Selected --" />
      <xsd:enumeration value="Terminal" />
      <xsd:enumeration value="Gateway" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTimeOfDay">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="No Office Hours" />
      <xsd:enumeration value="00:00" />
      <xsd:enumeration value="00:15" />
      <xsd:enumeration value="00:30" />
      <xsd:enumeration value="00:45" />
      <xsd:enumeration value="01:00" />
      <xsd:enumeration value="01:15" />
      <xsd:enumeration value="01:30" />
      <xsd:enumeration value="01:45" />
      <xsd:enumeration value="02:00" />
      <xsd:enumeration value="02:15" />
      <xsd:enumeration value="02:30" />
      <xsd:enumeration value="02:45" />
      <xsd:enumeration value="03:00" />
      <xsd:enumeration value="03:15" />
      <xsd:enumeration value="03:30" />
      <xsd:enumeration value="03:45" />
      <xsd:enumeration value="04:00" />
      <xsd:enumeration value="04:15" />
      <xsd:enumeration value="04:30" />
      <xsd:enumeration value="04:45" />
      <xsd:enumeration value="05:00" />
      <xsd:enumeration value="05:15" />
      <xsd:enumeration value="05:30" />
      <xsd:enumeration value="05:45" />
      <xsd:enumeration value="06:00" />
      <xsd:enumeration value="06:15" />
      <xsd:enumeration value="06:30" />
      <xsd:enumeration value="06:45" />
      <xsd:enumeration value="07:00" />
      <xsd:enumeration value="07:15" />
      <xsd:enumeration value="07:30" />
      <xsd:enumeration value="07:45" />
      <xsd:enumeration value="08:00" />
      <xsd:enumeration value="08:15" />
      <xsd:enumeration value="08:30" />
      <xsd:enumeration value="08:45" />
      <xsd:enumeration value="09:00" />
      <xsd:enumeration value="09:15" />
      <xsd:enumeration value="09:30" />
      <xsd:enumeration value="09:45" />
      <xsd:enumeration value="10:00" />
      <xsd:enumeration value="10:15" />
      <xsd:enumeration value="10:30" />
      <xsd:enumeration value="10:45" />
      <xsd:enumeration value="11:00" />
      <xsd:enumeration value="11:15" />
      <xsd:enumeration value="11:30" />
      <xsd:enumeration value="11:45" />
      <xsd:enumeration value="12:00" />
      <xsd:enumeration value="12:15" />
      <xsd:enumeration value="12:30" />
      <xsd:enumeration value="12:45" />
      <xsd:enumeration value="13:00" />
      <xsd:enumeration value="13:15" />
      <xsd:enumeration value="13:30" />
      <xsd:enumeration value="13:45" />
      <xsd:enumeration value="14:00" />
      <xsd:enumeration value="14:15" />
      <xsd:enumeration value="14:30" />
      <xsd:enumeration value="14:45" />
      <xsd:enumeration value="15:00" />
      <xsd:enumeration value="15:15" />
      <xsd:enumeration value="15:30" />
      <xsd:enumeration value="15:45" />
      <xsd:enumeration value="16:00" />
      <xsd:enumeration value="16:15" />
      <xsd:enumeration value="16:30" />
      <xsd:enumeration value="16:45" />
      <xsd:enumeration value="17:00" />
      <xsd:enumeration value="17:15" />
      <xsd:enumeration value="17:30" />
      <xsd:enumeration value="17:45" />
      <xsd:enumeration value="18:00" />
      <xsd:enumeration value="18:15" />
      <xsd:enumeration value="18:30" />
      <xsd:enumeration value="18:45" />
      <xsd:enumeration value="19:00" />
      <xsd:enumeration value="19:15" />
      <xsd:enumeration value="19:30" />
      <xsd:enumeration value="19:45" />
      <xsd:enumeration value="20:00" />
      <xsd:enumeration value="20:15" />
      <xsd:enumeration value="20:30" />
      <xsd:enumeration value="20:45" />
      <xsd:enumeration value="21:00" />
      <xsd:enumeration value="21:15" />
      <xsd:enumeration value="21:30" />
      <xsd:enumeration value="21:45" />
      <xsd:enumeration value="22:00" />
      <xsd:enumeration value="22:15" />
      <xsd:enumeration value="22:30" />
      <xsd:enumeration value="22:45" />
      <xsd:enumeration value="23:00" />
      <xsd:enumeration value="23:15" />
      <xsd:enumeration value="23:30" />
      <xsd:enumeration value="23:45" />
      <xsd:enumeration value="24:00" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTimeScheduleCategory">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Regular" />
      <xsd:enumeration value="Holiday or Vacation" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTimeZone">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Dateline Standard Time" />
      <xsd:enumeration value="Samoa Standard Time" />
      <xsd:enumeration value="Hawaiian Standard Time" />
      <xsd:enumeration value="Alaskan Standard/Daylight Time" />
      <xsd:enumeration value="Pacific Standard/Daylight Time" />
      <xsd:enumeration value="US Mountain Standard Time" />
      <xsd:enumeration value="Mountain Standard/Daylight Time" />
      <xsd:enumeration value="Central Standard/Daylight Time" />
      <xsd:enumeration value="Mexico Standard/Daylight Time" />
      <xsd:enumeration value="Canada Central Standard Time" />
      <xsd:enumeration value="SA Pacific Standard Time" />
      <xsd:enumeration value="Eastern Standard/Daylight Time" />
      <xsd:enumeration value="US Eastern Standard Time" />
      <xsd:enumeration value="Atlantic Standard/Daylight Time" />
      <xsd:enumeration value="SA Western Standard Time" />
      <xsd:enumeration value="Newfoundland Standard/Daylight Time" />
      <xsd:enumeration value="E. South America Standard/Daylight Time" />
      <xsd:enumeration value="SA Eastern Standard Time" />
      <xsd:enumeration value="Mid-Atlantic Standard/Daylight Time" />
      <xsd:enumeration value="Azores Standard/Daylight Time" />
      <xsd:enumeration value="GMT Standard/Daylight Time" />
      <xsd:enumeration value="Greenwich Standard Time" />
      <xsd:enumeration value="W. Europe Standard/Daylight Time" />
      <xsd:enumeration value="GTB Standard/Daylight Time" />
      <xsd:enumeration value="Egypt Standard/Daylight Time" />
      <xsd:enumeration value="E. Europe Standard/Daylight Time" />
      <xsd:enumeration value="Romance Standard/Daylight Time" />
      <xsd:enumeration value="Central Europe Standard/Daylight Time" />
      <xsd:enumeration value="South Africa Standard Time" />
      <xsd:enumeration value="Jerusalem Standard/Daylight Time" />
      <xsd:enumeration value="Saudi Arabia Standard Time" />
      <xsd:enumeration value="Russian Standard/Daylight Time" />
      <xsd:enumeration value="Iran Standard/Daylight Time" />
      <xsd:enumeration value="Caucasus Standard/Daylight Time" />
      <xsd:enumeration value="Afghanistan Standard Time" />
      <xsd:enumeration value="West Asia Standard Time" />
      <xsd:enumeration value="India Standard Time" />
      <xsd:enumeration value="Central Asia Standard Time" />
      <xsd:enumeration value="SE Asia Standard Time" />
      <xsd:enumeration value="China Standard/Daylight Time" />
      <xsd:enumeration value="Taipei Standard Time" />
      <xsd:enumeration value="Tokyo Standard Time" />
      <xsd:enumeration value="Cen. Australia Standard/Daylight Time" />
      <xsd:enumeration value="AUS Central Standard Time" />
      <xsd:enumeration value="E. Australia Standard Time" />
      <xsd:enumeration value="AUS Eastern Standard/Daylight Time" />
      <xsd:enumeration value="West Pacific Standard Time" />
      <xsd:enumeration value="Tasmania Standard/Daylight Time" />
      <xsd:enumeration value="Central Pacific Standard Time" />
      <xsd:enumeration value="Fiji Standard Time" />
      <xsd:enumeration value="New Zealand Standard/Daylight Time" />
      <xsd:enumeration value="Arabian Standard Time" />
      <xsd:enumeration value="Ekaterinburg Standard Time" />
      <xsd:enumeration value="Jerusalem Standard Time" />
      <xsd:enumeration value="Pacific SA Daylight Time" />
      <xsd:enumeration value="Greenland Daylight Time" />
      <xsd:enumeration value="W.Central Africa Standard Time" />
      <xsd:enumeration value="E.Europe Daylight Time" />
      <xsd:enumeration value="Nepal Standard Time" />
      <xsd:enumeration value="Sri Lanka Standard Time" />
      <xsd:enumeration value="Myanmar Standard Time" />
      <xsd:enumeration value="North Asia Daylight Time" />
      <xsd:enumeration value="North Asia East Daylight Time" />
      <xsd:enumeration value="Tonga Standard Time" />
      <xsd:enumeration value="Central America Standard Time" />
      <xsd:enumeration value="Cape Verde Standard Time" />
      <xsd:enumeration value="FLE Standard Time" />
      <xsd:enumeration value="Arabic Daylight Time" />
      <xsd:enumeration value="E. Africa Standard Time" />
      <xsd:enumeration value="N. Central Asia Standard/Daylight Time" />
      <xsd:enumeration value="Singapore Standard Time" />
      <xsd:enumeration value="W. Australia Standard Time" />
      <xsd:enumeration value="Yakutsk Standard Time" />
      <xsd:enumeration value="Vladivostok Standard/Daylight Time" />
      <xsd:enumeration value="Mexico Pacific Standard/Daylight Time" />
      <xsd:enumeration value="Mexico Mountain Standard/Daylight Time" />
      <xsd:enumeration value="Central Brazillian Daylight Time" />
      <xsd:enumeration value="Montevideo Daylight Time" />
      <xsd:enumeration value="Namibia Daylight Time" />
      <xsd:enumeration value="Azerbaijan Daylight Time" />
      <xsd:enumeration value="Magadan Standard/Daylight Time" />
      <xsd:enumeration value="Anadyr Standard/Daylight Time" />
      <xsd:enumeration value="Venezuela Standard Time" />
      <xsd:enumeration value="Argentina Standard/Daylight Time" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTraceLevelGrouping">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Error" />
      <xsd:enumeration value="Special" />
      <xsd:enumeration value="State Transistion" />
      <xsd:enumeration value="Significant" />
      <xsd:enumeration value="Entry_exit" />
      <xsd:enumeration value="Arbitrary" />
      <xsd:enumeration value="Detailed" />
      <xsd:enumeration value="Error" />
      <xsd:enumeration value="Special" />
      <xsd:enumeration value="State Transistion" />
      <xsd:enumeration value="Significant" />
      <xsd:enumeration value="Arbitrary" />
      <xsd:enumeration value="Detailed" />
      <xsd:enumeration value="Fatal" />
      <xsd:enumeration value="Error" />
      <xsd:enumeration value="Warning" />
      <xsd:enumeration value="Informational" />
      <xsd:enumeration value="Detailed" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTraceLevelGroups">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TraceLevelGroup0" />
      <xsd:enumeration value="TraceLevelGroup1" />
      <xsd:enumeration value="TraceLevelGroup2" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTransport">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TCP" />
      <xsd:enumeration value="UDP" />
      <xsd:enumeration value="TLS" />
      <xsd:enumeration value="TCP+UDP" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTrunk">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Ground Start" />
      <xsd:enumeration value="Loop Start" />
      <xsd:enumeration value="DID" />
      <xsd:enumeration value="POTS" />
      <xsd:enumeration value="EANDM" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTrunkDirection">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Inbound" />
      <xsd:enumeration value="Outbound" />
      <xsd:enumeration value="Bothways" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTrunkLevel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AAL(A)" />
      <xsd:enumeration value="AAL(D)" />
      <xsd:enumeration value="A/TT" />
      <xsd:enumeration value="DAL" />
      <xsd:enumeration value="ICS" />
      <xsd:enumeration value="ISD/TT" />
      <xsd:enumeration value="IST" />
      <xsd:enumeration value="ONS" />
      <xsd:enumeration value="OPS" />
      <xsd:enumeration value="S/ATT" />
      <xsd:enumeration value="S/DTT" />
      <xsd:enumeration value="A/TO" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTrunkPad">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Minus32db" />
      <xsd:enumeration value="Minus31db" />
      <xsd:enumeration value="Minus30db" />
      <xsd:enumeration value="Minus29db" />
      <xsd:enumeration value="Minus28db" />
      <xsd:enumeration value="Minus27db" />
      <xsd:enumeration value="Minus26db" />
      <xsd:enumeration value="Minus25db" />
      <xsd:enumeration value="Minus24db" />
      <xsd:enumeration value="Minus23db" />
      <xsd:enumeration value="Minus22db" />
      <xsd:enumeration value="Minus21db" />
      <xsd:enumeration value="Minus20db" />
      <xsd:enumeration value="Minus19db" />
      <xsd:enumeration value="Minus18db" />
      <xsd:enumeration value="Minus17db" />
      <xsd:enumeration value="Minus16db" />
      <xsd:enumeration value="Minus15db" />
      <xsd:enumeration value="Minus14db" />
      <xsd:enumeration value="Minus13db" />
      <xsd:enumeration value="Minus12db" />
      <xsd:enumeration value="Minus11db" />
      <xsd:enumeration value="Minus10db" />
      <xsd:enumeration value="Minus9db" />
      <xsd:enumeration value="Minus8db" />
      <xsd:enumeration value="Minus7db" />
      <xsd:enumeration value="Minus6db" />
      <xsd:enumeration value="Minus5db" />
      <xsd:enumeration value="Minus4db" />
      <xsd:enumeration value="Minus3db" />
      <xsd:enumeration value="Minus2db" />
      <xsd:enumeration value="Minus1db" />
      <xsd:enumeration value="NoDbPadding" />
      <xsd:enumeration value="Plus1db" />
      <xsd:enumeration value="Plus2db" />
      <xsd:enumeration value="Plus3db" />
      <xsd:enumeration value="Plus4db" />
      <xsd:enumeration value="Plus5db" />
      <xsd:enumeration value="Plus6db" />
      <xsd:enumeration value="Plus7db" />
      <xsd:enumeration value="Plus8db" />
      <xsd:enumeration value="Plus9db" />
      <xsd:enumeration value="Plus10db" />
      <xsd:enumeration value="Plus11db" />
      <xsd:enumeration value="Plus12db" />
      <xsd:enumeration value="Plus13db" />
      <xsd:enumeration value="Plus14db" />
      <xsd:enumeration value="Plus15db" />
      <xsd:enumeration value="Plus16db" />
      <xsd:enumeration value="Plus17db" />
      <xsd:enumeration value="Plus18db" />
      <xsd:enumeration value="Plus19db" />
      <xsd:enumeration value="Plus20db" />
      <xsd:enumeration value="Plus21db" />
      <xsd:enumeration value="Plus22db" />
      <xsd:enumeration value="Plus23db" />
      <xsd:enumeration value="Plus24db" />
      <xsd:enumeration value="Plus25db" />
      <xsd:enumeration value="Plus26db" />
      <xsd:enumeration value="Plus27db" />
      <xsd:enumeration value="Plus28db" />
      <xsd:enumeration value="Plus29db" />
      <xsd:enumeration value="Plus30db" />
      <xsd:enumeration value="Plus31db" />
      <xsd:enumeration value="Plus32db" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTrunkSelectionOrder">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Bottom Up" />
      <xsd:enumeration value="Top Down" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XTunneledProtocol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="QSIG" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XUserAssociation">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Cti Control In" />
      <xsd:enumeration value="Cti Control Out" />
      <xsd:enumeration value="Digest In" />
      <xsd:enumeration value="Digest Out" />
      <xsd:enumeration value="Profile Available" />
      <xsd:enumeration value="Mobility Primary Device" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XUserLocale">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="English United States" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XUserProfile">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Real User" />
      <xsd:enumeration value="Template User" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XWinCharSet">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="iso-8859-1" />
      <xsd:enumeration value="iso-8859-2" />
      <xsd:enumeration value="UTF-8 Unicode" />
      <xsd:enumeration value="UTF-7 Unicode" />
      <xsd:enumeration value="windows-1251" />
      <xsd:enumeration value="Shift_JIS" />
      <xsd:enumeration value="windows-1253" />
      <xsd:enumeration value="GB2312" />
      <xsd:enumeration value="BIG5" />
      <xsd:enumeration value="KSC5061" />
      <xsd:enumeration value="UTF-8" />
      <xsd:enumeration value="windows-1254" />
      <xsd:enumeration value="windows-1255" />
      <xsd:enumeration value="windows-1256" />
      <xsd:enumeration value="iso-8859-6" />
      <xsd:enumeration value="iso-8859-8-l" />
      <xsd:enumeration value="windows-874" />
      <xsd:enumeration value="windows-1258" />
      <xsd:enumeration value="windows-1257" />
      <xsd:enumeration value="iso-8859-4" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XYellowAlarm">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Bit2" />
      <xsd:enumeration value="F-Bit" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZeroSuppression">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="B8ZS" />
      <xsd:enumeration value="AMI" />
      <xsd:enumeration value="HDB3" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZzconfBridge">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Local" />
      <xsd:enumeration value="CallManger" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZzdndcontrol">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="User" />
      <xsd:enumeration value="Admin" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZzdtmfDbLevel">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="6 dB below nominal" />
      <xsd:enumeration value="3 dB below nominal" />
      <xsd:enumeration value="Nominal" />
      <xsd:enumeration value="3 dB above nominal" />
      <xsd:enumeration value="6 dB above nominal" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZzkpml">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Signal only" />
      <xsd:enumeration value="Dtmf only" />
      <xsd:enumeration value="Both" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZznetworkMediaType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Auto" />
      <xsd:enumeration value="Full 100" />
      <xsd:enumeration value="Half 100" />
      <xsd:enumeration value="Full 10" />
      <xsd:enumeration value="Half 10" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZzntpmode">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Unicast" />
      <xsd:enumeration value="Multicast" />
      <xsd:enumeration value="Anycast" />
      <xsd:enumeration value="Directed Broadcast" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZzpreff">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Off" />
      <xsd:enumeration value="On" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XZzuserInfo">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None" />
      <xsd:enumeration value="Phone" />
      <xsd:enumeration value="IP" />
    </xsd:restriction>
  </xsd:simpleType>
  <!-- AxlMessage.xsd -->
  <!-- These types are not used by anything, so they are commented out
	<xsd:element name="axl" type="axlapi:Envelope">
		<xsd:annotation>
			<xsd:documentation>The abstract AXL envelope.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="Envelope" abstract="true" block="restriction">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="asynchronous" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If defined, the client wishes the response returned asynchrously.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="asynchResponsePort" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If defined and asynchronous is true, then return the response to this port (otherwise, use the system default).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="securityInfo" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Carries the security information of the envelope.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="userid" type="xsd:string"/>
						<xsd:element name="password" type="xsd:string"/>
						<xsd:element name="publicKey" type="xsd:string" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="Response" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="axlapi:Envelope">
				<xsd:choice>
					<xsd:element name="response" type="axlapi:APIResponse">
						<xsd:annotation>
							<xsd:documentation>Completely abstracted, specific response payloads must be defined.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="error" type="axlapi:Error"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Request" abstract="false">
		<xsd:complexContent>
			<xsd:extension base="axlapi:Envelope">
				<xsd:all>
					<xsd:element name="request" type="axlapi:APIRequest">
						<xsd:annotation>
							<xsd:documentation>Completely abstracted, the request payload must be defined.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:all>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	-->
  <xsd:complexType name="APIRequest" abstract="true">
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="APIResponse" abstract="true">
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="Error">
    <xsd:sequence>
      <xsd:element name="code" type="xsd:long">
      </xsd:element>
      <xsd:element name="message" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="request" type="xsd:string" minOccurs="0">
      </xsd:element>
      <xsd:element name="url" type="xsd:anyURI" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!-- axlsoap.xsd -->
  <xsd:complexType name="AddCommonPhoneConfigReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newCommonPhoneConfig" type="axlapi:XCommonPhoneConfig" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCommonPhoneConfig" type="axlapi:AddCommonPhoneConfigReq" />
  <xsd:element name="addCommonPhoneConfigResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="CommonPhoneConfigReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String100" />
            <xsd:element name="uuid" type="axlapi:XUUID" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCommonPhoneConfig" type="axlapi:CommonPhoneConfigReq" />
  <xsd:complexType name="GetCommonPhoneConfigRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="CommonPhoneConfig" type="axlapi:XCommonPhoneConfig" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCommonPhoneConfigResponse" type="axlapi:GetCommonPhoneConfigRes" />
  <xsd:complexType name="UpdateCommonPhoneConfigReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" />
            <xsd:element name="name" type="axlapi:String100" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String128" nillable="false" minOccurs="0" />
          <xsd:element name="unlockPwd" type="axlapi:String50" nillable="false" minOccurs="0" />
          <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0" />
          <xsd:element name="dndAlertingType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
          <xsd:element name="backgroundImage" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="phonePersonalization" type="axlapi:XPhonePersonalization" nillable="false" minOccurs="0" />
          <xsd:element name="phoneServiceDisplay" type="axlapi:XPhoneServiceDisplay" nillable="false" minOccurs="0" />
          <xsd:element name="sshUserId" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="sshPwd" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCommonPhoneConfig" type="axlapi:UpdateCommonPhoneConfigReq" />
  <xsd:element name="updateCommonPhoneConfigResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeCommonPhoneConfig" type="axlapi:CommonPhoneConfigReq" />
  <xsd:element name="removeCommonPhoneConfigResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddSIPRoutePatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newSIPRoutePattern" type="axlapi:XNPSIPRoutePattern" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addSIPRoutePattern" type="axlapi:AddSIPRoutePatternReq" />
  <xsd:element name="addSIPRoutePatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="SIPRoutePatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" />
            <xsd:sequence>
              <xsd:element name="pattern" type="xsd:string" />
              <xsd:choice>
                <xsd:element name="routePartitionId" type="axlapi:XUUID" />
                <xsd:element name="routePartitionName" type="axlapi:String50" />
              </xsd:choice>
            </xsd:sequence>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSIPRoutePattern" type="axlapi:SIPRoutePatternReq" />
  <xsd:complexType name="GetSIPRoutePatternRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XNPSIPRoutePattern" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSIPRoutePatternResponse" type="axlapi:GetSIPRoutePatternRes" />
  <xsd:complexType name="UpdateSIPRoutePatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID" minOccurs="0">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="destination" nillable="false" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="sipTrunk" type="axlapi:XSIPTrunk" />
                <xsd:element name="sipTrunkName" type="axlapi:String128" />
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="dnOrPatternIPv6" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateSIPRoutePattern" type="axlapi:UpdateSIPRoutePatternReq" />
  <xsd:element name="updateSIPRoutePatternResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeSIPRoutePattern" type="axlapi:SIPRoutePatternReq" />
  <xsd:element name="removeSIPRoutePatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddDHCPServerReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newDHCPServer" type="axlapi:XDHCPServer" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addDHCPServer" type="axlapi:AddDHCPServerReq" />
  <xsd:element name="addDHCPServerResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="DHCPServerReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDHCPServer" type="axlapi:DHCPServerReq" />
  <xsd:complexType name="GetDHCPServerRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="DHCPServer" type="axlapi:XDHCPServer" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDHCPServerResponse" type="axlapi:GetDHCPServerRes" />
  <xsd:complexType name="UpdateDHCPServerReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="processNode" type="axlapi:XProcessNode">
            </xsd:element>
            <xsd:element name="processNodeName" type="xsd:string" />
          </xsd:choice>
          <xsd:element name="primaryDNSipAddress" type="xsd:string" minOccurs="0" />
          <xsd:element name="secondaryDNSipAddress" type="xsd:string" minOccurs="0" />
          <xsd:element name="primaryTFTPServeripAddress" type="xsd:string" minOccurs="0" />
          <xsd:element name="secondaryTFTPServeripAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="bootstrapServeripAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="domainName" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="tftpServerName" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" minOccurs="0">
          </xsd:element>
          <xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="renewalTime" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateDHCPServer" type="axlapi:UpdateDHCPServerReq" />
  <xsd:element name="updateDHCPServerResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeDHCPServer" type="axlapi:DHCPServerReq" />
  <xsd:element name="removeDHCPServerResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="addAARGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="AARGroup" type="axlapi:XAARGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addAARGroup" type="axlapi:addAARGroupReq" />
  <xsd:element name="addAARGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getAARGroup" type="axlapi:NameAndGUIDRequest">
  </xsd:element>
  <xsd:complexType name="getAARGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="AARGroup" type="axlapi:XAARGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getAARGroupResponse" type="axlapi:getAARGroupRes" />
  <xsd:complexType name="updateAARGroupReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="name" type="axlapi:String32" nillable="false" />
        <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
      </xsd:choice>
      <xsd:element name="newName" type="axlapi:String32" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="updateAARGroup" type="axlapi:updateAARGroupReq" />
  <xsd:element name="updateAARGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="updateAARGroupMatrixReq">
    <xsd:sequence>
      <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
      </xsd:element>
      <xsd:element name="prefixDigit" type="axlapi:String32" minOccurs="0">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="axlapi:XUUID" use="optional" />
  </xsd:complexType>
  <xsd:element name="updateAARGroupMatrix" type="axlapi:updateAARGroupMatrixReq" />
  <xsd:element name="updateAARGroupMatrixResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeAARGroup" type="axlapi:NameAndGUIDRequest">
  </xsd:element>
  <xsd:element name="removeAARGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddPhoneReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newPhone" type="axlapi:XIPPhone" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addPhone" type="axlapi:AddPhoneReq" />
  <xsd:element name="addPhoneResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemovePhoneReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="phoneId" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="phoneName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removePhone" type="axlapi:RemovePhoneReq" />
  <xsd:element name="removePhoneResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdatePhoneReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="devicePoolName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="commonDeviceConfigName" type="axlapi:UniqueString50" nillable="true">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonPhoneConfig" type="axlapi:XCommonPhoneConfig" nillable="false">
            </xsd:element>
            <xsd:element name="commonPhoneConfigName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="locationName" type="xsd:Name">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mediaResourceListId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="mediaResourceListName" type="xsd:Name">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="automatedAlternateRoutingCSSId" type="axlapi:XUUID" />
            <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhoodId" type="axlapi:XUUID" />
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="loadInformation" type="axlapi:XLoadInformation" minOccurs="0">
          </xsd:element>
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0">
          </xsd:element>
          <xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="associatedPC" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
                <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded" />
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="phoneTemplateId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="phoneTemplateName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="speeddials" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="speeddial" type="axlapi:XSpeeddial" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="busyLampFields" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="busyLampFields" type="axlapi:XBusyLampField" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="primaryPhoneId" type="axlapi:XDevice">
            </xsd:element>
            <xsd:element name="primaryPhoneName" type="axlapi:String128" nillable="false" />
          </xsd:choice>
          <xsd:element name="ringSettingIdleBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="ringSettingBusyBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="blfDirectedCallParks" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="blfDirectedCallPark" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:complexContent>
                      <xsd:extension base="axlapi:XBLFDirectedCallPark">
                        <xsd:attribute name="index" type="xsd:positiveInteger" />
                      </xsd:extension>
                    </xsd:complexContent>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="addOnModules" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="addOnModule" type="axlapi:XAddOnModule" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="userLocale" type="xsd:string" nillable="true" minOccurs="0" />
          <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
          <xsd:element name="networkLocale" type="xsd:string" nillable="true" minOccurs="0" />
          <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
            </xsd:element>
            <xsd:element name="geoLocationName" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="securityProfileId" type="axlapi:XUUID" />
            <xsd:element name="securityProfileName" type="axlapi:UniqueString50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="sipProfileId" type="axlapi:XUUID" />
            <xsd:element name="sipProfileName" type="axlapi:UniqueString50" />
          </xsd:choice>
          <xsd:element name="idleTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="authenticationURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="directoryURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="idleURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="informationURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="messagesURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="proxyServerURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="servicesURL" type="xsd:anyURI" minOccurs="0">
          </xsd:element>
          <xsd:element name="services" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="service" type="axlapi:XSubscribedService" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="softkeyTemplateId" type="axlapi:XUUID" />
            <xsd:element name="softkeyTemplateName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:sequence minOccurs="0">
            <xsd:choice>
              <xsd:element name="defaultProfileId" type="axlapi:XUUID" nillable="false" minOccurs="0">
              </xsd:element>
              <xsd:element name="defaultProfileName" type="axlapi:String50" nillable="false" minOccurs="0">
              </xsd:element>
            </xsd:choice>
            <xsd:element name="enableExtensionMobility" type="xsd:boolean">
            </xsd:element>
          </xsd:sequence>
          <xsd:element name="singleButtonBarge" type="axlapi:XBarge" nillable="false" minOccurs="0" />
          <xsd:element name="joinAcrossLines" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="builtInBridgeStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="callInfoPrivacyStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="hlogStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="ownerUserId" type="axlapi:String255" nillable="true" minOccurs="0" />
          <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="packetCaptureMode" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
          <xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="subscribeCallingSearchSpaceId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="rerouteCallingSearchSpaceId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="rerouteCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="presenceGroupId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="presenceGroupName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="requireDTMFReception" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="RFC2833Disabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="phoneLoadName" type="axlapi:String32" minOccurs="0" />
          <xsd:element name="certificateOperation" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XCertificateOperation in AXLEnums.xsd-->
          <xsd:sequence minOccurs="0">
            <xsd:element name="authenticationMode" type="axlapi:XAuthenticationMode" minOccurs="0">
            </xsd:element>
            <xsd:element name="keySize" type="axlapi:XKeySize" minOccurs="0">
            </xsd:element>
          </xsd:sequence>
          <xsd:element name="authenticationString" type="axlapi:String128" minOccurs="0">
          </xsd:element>
          <xsd:element name="certificateStatus" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XCertificateStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="upgradeFinishTime" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="deviceMobilityMode" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="remoteDevice" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="dndRingSetting" type="xsd:string" nillable="true" minOccurs="0">
            <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="isActive" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="mobilityUserId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="mobilityUserIdName" type="axlapi:String50" nillable="true">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="phoneSuite" type="axlapi:XPhonePersonalization" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="phoneServiceDisplay" type="axlapi:XPhoneServiceDisplay" minOccurs="0" />
          <xsd:element name="isProtected" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="mobileSmartClientProfileId" type="axlapi:XUUID" />
            <xsd:element name="mobileSmartClientProfileName" type="axlapi:String128" />
          </xsd:choice>
          <xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mtpPreferredCodec" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XSIPCodec in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="dialRules" type="axlapi:XSIPDialRules" nillable="false">
            </xsd:element>
            <xsd:element name="dialRulesName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:element name="sshUser" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="sshPwd" type="axlapi:String255" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="digestUser" type="axlapi:String255" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="outboundCallRollover" type="axlapi:XOutboundCallRollover" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updatePhone" type="axlapi:UpdatePhoneReq" />
  <xsd:element name="updatePhoneResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetPhoneReq" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="phoneId" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="phoneName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getPhone" type="axlapi:GetPhoneReq" />
  <xsd:complexType name="GetPhoneRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="device" type="axlapi:XIPPhone" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getPhoneResponse" type="axlapi:GetPhoneRes" />
  <xsd:complexType name="AddCommonDeviceConfigReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="commonDeviceConfig" type="axlapi:XCommonDeviceConfig" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddCallerFilterListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newCallerFilterList" type="axlapi:XCallerFilterList" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCallerFilterList" type="axlapi:AddCallerFilterListReq" />
  <xsd:element name="addCallerFilterListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getCallerFilterList" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetCallerFilterListRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="callerFilterList" type="axlapi:XCallerFilterList" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCallerFilterListResponse" type="axlapi:GetCallerFilterListRes" />
  <xsd:complexType name="UpdateCallerFilterListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String50" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String128" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="isAllowedType" type="xsd:boolean" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="endUserId" type="axlapi:XUUID" />
            <xsd:element name="endUserIdName" type="axlapi:UniqueString50" />
          </xsd:choice>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="member" type="axlapi:XCallerFilterListMember" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCallerFilterList" type="axlapi:UpdateCallerFilterListReq" />
  <xsd:element name="updateCallerFilterListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeCallerFilterList" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeCallerFilterListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="addCommonDeviceConfig" type="axlapi:AddCommonDeviceConfigReq" />
  <xsd:element name="addCommonDeviceConfigResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetCommonDeviceConfigRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="commonDeviceConfig" type="axlapi:XCommonDeviceConfig" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCommonDeviceConfig" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="getCommonDeviceConfigResponse" type="axlapi:GetCommonDeviceConfigRes" />
  <xsd:element name="removeCommonDeviceConfig" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeCommonDeviceConfigResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCommonDeviceConfigReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:UniqueString50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="sofkeyTemplate" />
            <xsd:element name="softkeyTemplateName" />
          </xsd:choice>
          <xsd:element name="userLocale" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
          <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0" />
          <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
          <xsd:element name="IPAddressingMode" type="axlapi:XIPAddressingMode" minOccurs="0" />
          <xsd:element name="IPAddressingModePreferenceControl" type="axlapi:XIPAddressingModePrefControl" minOccurs="0" />
          <xsd:element name="allowAutoConfigurationForPhones" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCommonDeviceConfig" type="axlapi:UpdateCommonDeviceConfigReq" />
  <xsd:element name="updateCommonDeviceConfigResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddDeviceMobilityReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="deviceMobility" type="axlapi:XDeviceMobility" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addDeviceMobility" type="axlapi:AddDeviceMobilityReq" />
  <xsd:element name="addDeviceMobilityResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetDeviceMobilityRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="deviceMobility" type="axlapi:XDeviceMobility" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDeviceMobility" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="getDeviceMobilityResponse" type="axlapi:GetDeviceMobilityRes" />
  <xsd:element name="removeDeviceMobility" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeDeviceMobilityResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateDeviceMobilityReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="xsd:string" minOccurs="0" />
          <xsd:element name="subNet" type="xsd:string" minOccurs="0" />
          <xsd:element name="subNetMaskSz" type="xsd:nonNegativeInteger" minOccurs="0" />
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="members" type="axlapi:XDevicePoolDeviceMobility" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateDeviceMobility" type="axlapi:UpdateDeviceMobilityReq" />
  <xsd:element name="updateDeviceMobilityResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddDeviceMobilityGroupReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="deviceMobilityGroup" type="axlapi:XDeviceMobilityGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addDeviceMobilityGroup" type="axlapi:AddDeviceMobilityGroupReq" />
  <xsd:element name="addDeviceMobilityGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetDeviceMobilityGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="deviceMobilityGroup" type="axlapi:XDeviceMobilityGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDeviceMobilityGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="getDeviceMobilityGroupResponse" type="axlapi:GetDeviceMobilityGroupRes" />
  <xsd:element name="removeDeviceMobilityGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeDeviceMobilityGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateDeviceMobilityGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String50" nillable="true" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateDeviceMobilityGroup" type="axlapi:UpdateDeviceMobilityGroupReq" />
  <xsd:element name="updateDeviceMobilityGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddPhysicalLocationReq">
    <xsd:sequence>
      <xsd:element name="physicalLocation" type="axlapi:XPhysicalLocation" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addPhysicalLocation" type="axlapi:AddPhysicalLocationReq" />
  <xsd:element name="addPhysicalLocationResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetPhysicalLocationRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="physicalLocation" type="axlapi:XPhysicalLocation" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getPhysicalLocation" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="getPhysicalLocationResponse" type="axlapi:GetPhysicalLocationRes" />
  <xsd:element name="removePhysicalLocation" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removePhysicalLocationResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdatePhysicalLocationReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updatePhysicalLocation" type="axlapi:UpdatePhysicalLocationReq" />
  <xsd:element name="updatePhysicalLocationResponse" type="axlapi:StandardResponse" />
  <xsd:element name="addApplicationToSoftkeyTemplate" type="axlapi:AddApplicationToSoftkeyTemplateReq" />
  <xsd:complexType name="AddApplicationToSoftkeyTemplateReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newApplication" type="axlapi:XApplicationToSoftKeyTemplate" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addApplicationToSoftkeyTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="removeApplicationToSoftkeyTemplateReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="softKeyTemplateId" type="axlapi:XUUID" nillable="false" />
        <xsd:element name="softKeyTemplateName" type="axlapi:String100" nillable="false">
        </xsd:element>
      </xsd:choice>
      <xsd:element name="applicationName" type="axlapi:String100" nillable="false">
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="removeApplicationToSoftkeyTemplate" type="axlapi:removeApplicationToSoftkeyTemplateReq" />
  <xsd:element name="removeApplicationToSoftkeyTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddSoftKeyTemplateReq">
    <xsd:sequence>
      <xsd:element name="softKeyTemplate" type="axlapi:XSoftkeyTemplate" />
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="addSoftKeyTemplate" type="axlapi:AddSoftKeyTemplateReq" />
  <xsd:element name="addSoftKeyTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getSoftKeyTemplate" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetSoftKeyTemplateRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="softKeyTemplate" type="axlapi:XSoftkeyTemplate" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSoftKeyTemplateResponse" type="axlapi:GetSoftKeyTemplateRes" />
  <xsd:complexType name="UpdateSoftKeyTemplateReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String100" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String100" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="isDefault" type="xsd:boolean" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="phoneServiceDisplay" type="axlapi:XPhoneServiceDisplay" minOccurs="0" />
          <xsd:element name="requirePKIAuthForHTTPS" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateSoftKeyTemplate" type="axlapi:UpdateSoftKeyTemplateReq" />
  <xsd:element name="updateSoftKeyTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeSoftKeyTemplate" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeSoftKeyTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateSoftKeySetReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="softKeyTemplateId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="softKeyTemplateName" type="axlapi:String100" nillable="false" />
          </xsd:choice>
          <xsd:element name="callStates" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="callState" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence minOccurs="0">
                      <xsd:element name="callStateName" type="axlapi:XCallState" nillable="false" />
                      <xsd:element name="softKeys" minOccurs="0">
                        <xsd:complexType>
                          <xsd:sequence minOccurs="0">
                            <xsd:element name="softKey" minOccurs="0" maxOccurs="unbounded">
                              <xsd:complexType>
                                <xsd:sequence>
                                  <xsd:element name="positionId" type="xsd:nonNegativeInteger" nillable="false">
                                  </xsd:element>
                                  <xsd:element name="softKeyName" type="axlapi:XSoftkey" nillable="false" />
                                </xsd:sequence>
                              </xsd:complexType>
                            </xsd:element>
                          </xsd:sequence>
                        </xsd:complexType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateSoftKeySet" type="axlapi:UpdateSoftKeySetReq" />
  <xsd:element name="updateSoftKeySetResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetSoftKeySetRes">
    <xsd:sequence>
      <xsd:element name="return">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="softKeySet">
              <xsd:complexType>
                <xsd:complexContent>
                  <xsd:extension base="axlapi:XSoftKeySet" />
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="getSoftKeySet" type="axlapi:NameAndGUIDRequest">
  </xsd:element>
  <xsd:element name="getSoftKeySetResponse" type="axlapi:GetSoftKeySetRes" />
  <xsd:complexType name="AddTranscoderReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="transcoder" type="axlapi:XTranscoder" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addTranscoder" type="axlapi:AddTranscoderReq" />
  <xsd:element name="addTranscoderResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateTranscoderReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:UniqueString255" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:UniqueString255" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String128" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="devicePoolName" type="axlapi:UniqueString50" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="commonDeviceConfigName" type="axlapi:UniqueString50" nillable="true">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="loadInformation" type="axlapi:XLoadInformation" nillable="true" minOccurs="0" />
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="isTrustedRelayPoint" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <!--<xsd:element name="subUnit" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is used only by     Cisco Media Termination Point (WS-SVC-CMM)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateTranscoder" type="axlapi:UpdateTranscoderReq" />
  <xsd:element name="updateTranscoderResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getTranscoder" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetTranscoderRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="device" type="axlapi:XTranscoder" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTranscoderResponse" type="axlapi:GetTranscoderRes" />
  <xsd:element name="removeTranscoder" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeTranscoderResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddMeetMeReq">
    <xsd:sequence>
      <xsd:element name="meetMe" type="axlapi:XNPMeetMe" />
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="addMeetMe" type="axlapi:AddMeetMeReq" />
  <xsd:element name="addMeetMeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateMeetMeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0" />
          <xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="minimumSecurityLevel" type="axlapi:XDeviceSecurityMode" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateMeetMe" type="axlapi:UpdateMeetMeReq" />
  <xsd:element name="updateMeetMeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetMeetMeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMeetMe" type="axlapi:GetMeetMeReq" />
  <xsd:complexType name="GetMeetMeRes">
    <xsd:sequence>
      <xsd:element name="return">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="meetMe" type="axlapi:XNPMeetMe" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="getMeetMeResponse" type="axlapi:GetMeetMeRes" />
  <xsd:complexType name="RemoveMeetMeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeMeetMe" type="axlapi:RemoveMeetMeReq" />
  <xsd:element name="removeMeetMeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddMOHServerReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="mohServer" type="axlapi:XMOHServer" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMOHServer" type="axlapi:AddMOHServerReq" />
  <xsd:element name="addMOHServerResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateMOHServerReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="name" type="axlapi:String100" nillable="false" />
        <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
      </xsd:choice>
      <xsd:element name="newName" type="axlapi:UniqueName128" nillable="false" minOccurs="0" />
      <xsd:element name="description" type="axlapi:String100" nillable="true" minOccurs="0" />
      <xsd:sequence minOccurs="0">
        <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false">
        </xsd:element>
        <xsd:element name="devicePoolName" type="axlapi:String100" nillable="false">
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence minOccurs="0">
        <xsd:element name="locationId" type="axlapi:XUUID" nillable="true">
        </xsd:element>
        <xsd:element name="locationName" type="axlapi:String100" nillable="true">
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="maxUnicastConnections" type="xsd:unsignedLong" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="maxMulticastConnections" type="xsd:unsignedLong" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="fixedAudioSourceDevice" type="xsd:unsignedLong" nillable="true" minOccurs="0" />
      <xsd:element name="runFlag" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
      <xsd:sequence>
        <xsd:element name="isMultiCastEnabled" type="xsd:boolean" nillable="false" minOccurs="0" />
        <xsd:element name="baseMulticastIPaddress" type="xsd:string" nillable="false" minOccurs="0">
        </xsd:element>
        <xsd:element name="baseMulticastPort" type="xsd:unsignedLong" nillable="false" minOccurs="0">
        </xsd:element>
        <xsd:element name="multicastIncrementOnIP" type="xsd:boolean" nillable="false" minOccurs="0" />
        <xsd:element name="audioSources" minOccurs="0">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="audioSource" minOccurs="0" maxOccurs="unbounded">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="sourceId" type="xsd:unsignedLong" nillable="false" />
                    <xsd:element name="maxHops" type="xsd:unsignedLong" default="2" nillable="false" minOccurs="0" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="updateMOHServer" type="axlapi:UpdateMOHServerReq" />
  <xsd:element name="updateMOHServerResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getMOHServer" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetMOHServerRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mohServer" type="axlapi:XMOHServer" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMOHServerResponse" type="axlapi:GetMOHServerRes" />
  <xsd:element name="removeMOHServer" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeMOHServerResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddConferenceBridgeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newCFB" type="axlapi:XConferenceBridge" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addConferenceBridge" type="axlapi:AddConferenceBridgeReq" />
  <xsd:element name="addConferenceBridgeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveConferenceBridgeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="name" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeConferenceBridge" type="axlapi:RemoveConferenceBridgeReq" />
  <xsd:element name="removeConferenceBridgeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateConferenceBridgeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="devicePoolName" type="xsd:string" nillable="false" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="locationName" type="xsd:Name" nillable="false" />
          </xsd:choice>
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="loadInformation" type="axlapi:XLoadInformation" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="securityProfileId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="securityProfileName" type="axlapi:UniqueString50" nillable="false" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateConferenceBridge" type="axlapi:UpdateConferenceBridgeReq" />
  <xsd:element name="updateConferenceBridgeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetConferenceBridgeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="name" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getConferenceBridge" type="axlapi:GetConferenceBridgeReq" />
  <xsd:complexType name="GetConferenceBridgeRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="device" type="axlapi:XConferenceBridge" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getConferenceBridgeResponse" type="axlapi:GetConferenceBridgeRes" />
  <xsd:complexType name="AddAttendantConsoleUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="pilotUser" type="axlapi:XPilotUser" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addAttendantConsoleUser" type="axlapi:AddAttendantConsoleUserReq" />
  <xsd:element name="addAttendantConsoleUserResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveAttendantConsoleUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID">
          </xsd:element>
          <xsd:element name="userId" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeAttendantConsoleUser" type="axlapi:RemoveAttendantConsoleUserReq" />
  <xsd:element name="removeAttendantConsoleUserResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateAttendantConsoleUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="userId" type="xsd:string" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newUserId" minOccurs="0">
          </xsd:element>
          <xsd:element name="password" type="xsd:string" nillable="true" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateAttendantConsoleUser" type="axlapi:UpdateAttendantConsoleUserReq" />
  <xsd:element name="updateAttendantConsoleUserResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetAttendantConsoleUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="userId" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getAttendantConsoleUser" type="axlapi:GetAttendantConsoleUserReq" />
  <xsd:complexType name="GetAttendantConsoleUserRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pilotUser" type="axlapi:XPilotUser" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getAttendantConsoleUserResponse" type="axlapi:GetAttendantConsoleUserRes" />
  <xsd:complexType name="AddAttendantConsoleHuntGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newHuntGroup" type="axlapi:XPilotHuntGroup" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addAttendantConsoleHuntGroup" type="axlapi:AddAttendantConsoleHuntGroupReq" />
  <xsd:element name="addAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateAttendantConsoleHuntGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="pilotPointId" type="axlapi:XUUID" />
            <xsd:element name="pilotPointName" />
          </xsd:choice>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XPilotHuntGroupMember" maxOccurs="unbounded">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateAttendantConsoleHuntGroup" type="axlapi:UpdateAttendantConsoleHuntGroupReq" />
  <xsd:element name="updateAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveAttendantConsoleHuntGroupReq">
    <xsd:choice>
      <xsd:element name="pilotPointId">
      </xsd:element>
      <xsd:element name="pilotPointName">
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element name="removeAttendantConsoleHuntGroup" type="axlapi:RemoveAttendantConsoleHuntGroupReq" />
  <xsd:element name="removeAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getAttendantConsoleHuntGroup" type="axlapi:GetAttendantConsoleHuntGroupReq" />
  <xsd:complexType name="GetAttendantConsoleHuntGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="attendantConsoleHuntGroup" type="axlapi:XPilotHuntGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getAttendantConsoleHuntGroupResponse" type="axlapi:GetAttendantConsoleHuntGroupRes" />
  <xsd:complexType name="GetAttendantConsoleHuntGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="pilotPointId" type="axlapi:XUUID">
          </xsd:element>
          <xsd:element name="pilotPointName" type="xsd:string">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DeviceLoginReq" abstract="false">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="deviceId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="deviceName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="loginDuration" type="xsd:nonNegativeInteger" nillable="false">
          </xsd:element>
          <xsd:choice>
            <xsd:element name="profileId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="profileName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="userId" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doDeviceLogin" type="axlapi:DeviceLoginReq" />
  <xsd:complexType name="DeviceLoginResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:StandardResponse" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doDeviceLoginResponse" type="axlapi:DeviceLoginResponse" />
  <xsd:complexType name="DeviceLogoutReq" abstract="false">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="deviceId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="deviceName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doDeviceLogout" type="axlapi:DeviceLogoutReq" />
  <xsd:complexType name="DeviceLogoutRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:StandardResponse" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doDeviceLogoutResponse" type="axlapi:DeviceLogoutRes" />
  <xsd:complexType name="DeviceResetReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="deviceId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="deviceName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:choice>
            <xsd:element name="isHardReset" type="xsd:boolean" nillable="false">
            </xsd:element>
            <xsd:element name="deviceResetType" type="axlapi:XReset" nillable="false">
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="isMGCP" type="xsd:boolean" use="optional" default="false" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doDeviceReset" type="axlapi:DeviceResetReq">
  </xsd:element>
  <xsd:complexType name="DeviceResetRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:StandardResponse" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doDeviceResetResponse" type="axlapi:DeviceResetRes" />
  <xsd:complexType name="AuthenticateUserReq" abstract="false">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string" />
          <xsd:choice>
            <xsd:element name="password" type="xsd:string" />
            <xsd:element name="pin">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="\d\d\d\d+" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doAuthenticateUser" type="axlapi:AuthenticateUserReq" />
  <xsd:complexType name="AuthenticateUserResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="userAuthenticated" type="xsd:boolean">
                </xsd:element>
                <xsd:element name="code" type="xsd:integer">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="doAuthenticateUserResponse" type="axlapi:AuthenticateUserResponse" />
  <xsd:complexType name="AddLineReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newLine" type="axlapi:XNPDirectoryNumber" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addLine" type="axlapi:AddLineReq" />
  <xsd:element name="addLineResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveLineReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeLine" type="axlapi:RemoveLineReq" />
  <xsd:element name="removeLineResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateLineReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhoodId" type="axlapi:XUUID" />
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="aarDestinationMask" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="aarKeepCallHistory" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="aarVoiceMailEnabled" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="callForwardAll" type="axlapi:XCallForwardInfo" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardBusy" type="axlapi:XCallForwardInfo" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardBusyInt" type="axlapi:XCallForwardInfo" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardNoAnswer" type="axlapi:XCallForwardInfo" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardNoAnswerInt" type="axlapi:XCallForwardInfo" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardNoCoverage" type="axlapi:XCallForwardInfo" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardNoCoverageInt" type="axlapi:XCallForwardInfo" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardOnFailure" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardAlternateParty" type="axlapi:XCallForwardInfo" minOccurs="0" />
          <xsd:element name="callForwardNotRegistered" type="axlapi:XCallForwardInfo" minOccurs="0">
          </xsd:element>
          <xsd:element name="callForwardNotRegisteredInt" type="axlapi:XCallForwardInfo" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callPickupGroup" type="axlapi:XNPCallPickupGroup">
            </xsd:element>
            <xsd:element name="callPickupGroupName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="autoAnswer" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XAutoAnswer in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" minOccurs="0">
          </xsd:element>
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" minOccurs="0">
          </xsd:element>
          <xsd:element name="alertingName" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="asciiAlertingName" type="axlapi:String32" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="presenceGroupId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="presenceGroupName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="shareLineAppearanceCSSId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="shareLineAppearanceCSSName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="voiceMailProfileId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="voiceMailProfileName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="patternPrecedence" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPatternPrecedence in AXLEnums.xsd-->
          <xsd:element name="releaseCause" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XReleaseCauseValue in AXLEnums.xsd-->
          <xsd:element name="hrDuration" type="xsd:long" nillable="false" minOccurs="0" />
          <xsd:element name="hrInterval" type="xsd:long" nillable="false" minOccurs="0" />
          <xsd:element name="cfaCSSPolicy" type="axlapi:XCFACSSActivationPolicy" default="Use System Default" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="defaultActivatedDeviceId" type="axlapi:XUUID" />
            <xsd:element name="defaultActivatedDeviceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="ParkMonForwardNoRetrieveDN" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="ParkMonForwardNoRetrieveIntDN" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="ParkMonForwardNoRetrieveIntVMEnabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="ParkMonForwardNoRetrieveVMEnabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="ParkMonForwardNoRetrieveCSS" type="axlapi:XCallingSearchSpace" nillable="true" minOccurs="0">
            </xsd:element>
            <xsd:element name="ParkMonForwardNoRetrieveCSSName" type="axlapi:String50" nillable="true" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="ParkMonForwardNoRetrieveIntCSS" type="axlapi:XCallingSearchSpace" nillable="true" minOccurs="0">
            </xsd:element>
            <xsd:element name="ParkMonForwardNoRetrieveIntCSSName" type="axlapi:String50" nillable="true" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="ParkMonReversionTimer" type="xsd:long" nillable="true" minOccurs="0" />
          <xsd:element name="partyEntranceTone" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="missedCallLogging" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateLine" type="axlapi:UpdateLineReq" />
  <xsd:element name="updateLineResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetLineReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getLine" type="axlapi:GetLineReq" />
  <xsd:complexType name="GetLineRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="directoryNumber" type="axlapi:XNPDirectoryNumber" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getLineResponse" type="axlapi:GetLineRes" />
  <xsd:complexType name="AddUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newUser" type="axlapi:XUser">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addUser" type="axlapi:AddUserReq" />
  <xsd:element name="addUserResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeUser" type="axlapi:RemoveUserReq" />
  <xsd:element name="removeUserResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
          </xsd:element>
          <xsd:element name="firstname" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="middlename" type="xsd:string" minOccurs="0" />
          <xsd:element name="lastname" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="password" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="pin" minOccurs="0">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:pattern value="^\d+$" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
          <xsd:element name="telephoneNumber" type="axlapi:XDirectoryNumber" minOccurs="0">
          </xsd:element>
          <xsd:element name="mailid" type="xsd:string" minOccurs="0" />
          <xsd:element name="extension" type="axlapi:XDirectoryNumber" minOccurs="0">
          </xsd:element>
          <xsd:element name="department" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="manager" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="userLocale" type="xsd:string" minOccurs="0">
            <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="associatedDevices" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="device" type="axlapi:String50" minOccurs="0" maxOccurs="unbounded">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="primaryExtension" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XDirectoryNumber" nillable="false">
                </xsd:element>
                <xsd:element name="routePartitionName" type="axlapi:String50" minOccurs="0">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ipccExtension" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XDirectoryNumber" nillable="false">
                </xsd:element>
                <xsd:element name="routePartitionName" type="axlapi:String50" minOccurs="0">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="associatedPC" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="authenticationProxyRights" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="enableCTI" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="enableCTISuperProvider" type="xsd:boolean" minOccurs="0">
          </xsd:element>
          <xsd:element name="allowCallParkRetrieval" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="callingNumberModAllowed" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="phoneProfiles" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="profile" type="axlapi:XPhoneProfile" nillable="false" maxOccurs="unbounded">
                  </xsd:element>
                  <xsd:element name="profileName" type="xsd:string" nillable="false" maxOccurs="unbounded">
                  </xsd:element>
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="enableMobility" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="enableMobileVoiceAccess" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="maxDeskPickupWaitTime" type="xsd:unsignedLong" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="remoteDestinationLimit" type="xsd:unsignedShort" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="passwordCredentials" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:choice minOccurs="0">
                  <xsd:element name="pwdCredPolicy" type="axlapi:XUUID">
                  </xsd:element>
                  <xsd:element name="pwdCredPolicyName" type="axlapi:String50" />
                </xsd:choice>
                <xsd:element name="pwdCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="pwdCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0" />
                <xsd:element name="pwdCredResetHackCount" type="xsd:boolean" minOccurs="0" />
                <xsd:element name="pwdCredSetLockOut" type="xsd:boolean" minOccurs="0" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="pinCredentials" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:choice minOccurs="0">
                  <xsd:element name="pinCredPolicy" type="axlapi:XUUID">
                  </xsd:element>
                  <xsd:element name="pinCredPolicyName" type="axlapi:String50" />
                </xsd:choice>
                <xsd:element name="pinCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="pinCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="pinCredDoesNotExpire" type="xsd:boolean" minOccurs="0" />
                <xsd:element name="pinCredResetHackCount" type="xsd:boolean" minOccurs="0" />
                <xsd:element name="pinCredSetLockOut" type="xsd:boolean" minOccurs="0" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="primaryDevice" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="defaultProfile" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateUser" type="axlapi:UpdateUserReq" />
  <xsd:element name="updateUserResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getUser" type="axlapi:GetUserReq" />
  <xsd:complexType name="GetUserRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="user" type="axlapi:XUser" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getUserResponse" type="axlapi:GetUserRes" />
  <!-- Application User API starts -->
  <xsd:complexType name="AddAppUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newApplicationUser" type="axlapi:XApplicationUser">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addAppUser" type="axlapi:AddAppUserReq" />
  <xsd:element name="addAppUserResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateAppUserReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
          </xsd:element>
          <xsd:element name="password" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="passwordCredentials" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:choice minOccurs="0">
                  <xsd:element name="pwdCredPolicy">
                    <xsd:complexType>
                      <xsd:complexContent>
                        <xsd:extension base="axlapi:XCredentialPolicy">
                          <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
                        </xsd:extension>
                      </xsd:complexContent>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="pwdCredPolicyName" type="axlapi:String50" />
                </xsd:choice>
                <xsd:element name="pwdCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="pwdCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0" />
                <xsd:element name="pwdCredResetHackCount" type="xsd:boolean" minOccurs="0" />
                <xsd:element name="pwdCredSetLockOut" type="xsd:boolean" minOccurs="0" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="presenceGroup" type="axlapi:XPresenceGroup" nillable="false" minOccurs="0">
            </xsd:element>
            <xsd:element name="presenceGroupName" type="axlapi:String50" nillable="false" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="acceptPresenceSubscription" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="allowReplaceHeader" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="associatedDevices" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="device" type="axlapi:String50" minOccurs="0" maxOccurs="unbounded">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="associatedGroups" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="userGroup" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence minOccurs="0">
                      <xsd:element name="name" type="axlapi:String100" nillable="false" minOccurs="0">
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateAppUser" type="axlapi:UpdateAppUserReq" />
  <xsd:element name="updateAppUserResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getAppUser" type="axlapi:GetUserReq" />
  <xsd:complexType name="GetAppUserRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="applicationUser" type="axlapi:XApplicationUser" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getAppUserResponse" type="axlapi:GetAppUserRes" />
  <xsd:element name="removeAppUser" type="axlapi:RemoveUserReq" />
  <xsd:element name="removeAppUserResponse" type="axlapi:StandardResponse" />
  <!-- Application User API ends -->
  <xsd:complexType name="StandardResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddDeviceProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newProfile" type="axlapi:XPhoneProfile">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addDeviceProfile" type="axlapi:AddDeviceProfileReq" />
  <xsd:element name="addDeviceProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveDeviceProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="profileId" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="profileName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeDeviceProfile" type="axlapi:RemoveDeviceProfileReq" />
  <xsd:element name="removeDeviceProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateDeviceProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
          <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="subscribeCallingSearchSpaceId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="presenceGroupID" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="PresenceGroupName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
                <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded" />
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="phoneTemplateId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="phoneTemplateName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="speeddials" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="speeddial" type="axlapi:XSpeeddial" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="busyLampFields" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="busyLampField" type="axlapi:XBusyLampField" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ringSettingIdleBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="ringSettingBusyBLFAudibleAlert" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="addOnModules" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="addOnModule" type="axlapi:XAddOnModule" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="userLocale" type="xsd:string" nillable="true" minOccurs="0" />
          <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
          <xsd:element name="services" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="service" type="axlapi:XSubscribedService" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="softkeyTemplateId" type="axlapi:XUUID" />
            <xsd:element name="softkeyTemplateName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="loginUserId" type="axlapi:String255" nillable="false" minOccurs="0" />
          <xsd:element name="singleButtonBarge" type="axlapi:XBarge" nillable="false" minOccurs="0" />
          <xsd:element name="joinAcrossLines" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="callInfoPrivacyStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="dndRingSetting" type="xsd:string" nillable="true" minOccurs="0">
            <!--This field is of the type axl:XRingSetting in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="alwaysUsePrimeLine" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="alwaysUsePrimeLineforVoiceMessage" type="xsd:string" default="Default" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateDeviceProfile" type="axlapi:UpdateDeviceProfileReq" />
  <xsd:element name="updateDeviceProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetDeviceProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="profileId" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="profileName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDeviceProfile" type="axlapi:GetDeviceProfileReq" />
  <xsd:complexType name="GetDeviceProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="profile" type="axlapi:XPhoneProfile" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDeviceProfileResponse" type="axlapi:GetDeviceProfileRes" />
  <xsd:complexType name="AddTimePeriodReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="timePeriod" type="axlapi:XTimePeriod" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addTimePeriod" type="axlapi:AddTimePeriodReq" />
  <xsd:element name="addTimePeriodResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getTimePeriod" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetTimePeriodRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="timePeriod" type="axlapi:XTimePeriod" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTimePeriodResponse" type="axlapi:GetTimePeriodRes" />
  <xsd:element name="removeTimePeriod" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeTimePeriodResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateTimePeriodReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="startTime" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XTimeOfDay in AXLEnums.xsd-->
          <xsd:element name="endTime" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XTimeOfDay in AXLEnums.xsd-->
          <xsd:element name="startDay" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XDayOfWeek in AXLEnums.xsd-->
          <xsd:element name="endDay" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XDayOfWeek in AXLEnums.xsd-->
          <xsd:element name="monthOfYear" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XMonthOfYear in AXLEnums.xsd-->
          <xsd:element name="dayOfMonth" type="xsd:nonNegativeInteger" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="dayOfMonthEnd" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="monthOfYearEnd" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XMonthOfYear in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateTimePeriod" type="axlapi:UpdateTimePeriodReq" />
  <xsd:element name="updateTimePeriodResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddTimeScheduleReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="timeSchedule" type="axlapi:XTimeSchedule" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addTimeSchedule" type="axlapi:AddTimeScheduleReq" />
  <xsd:element name="addTimeScheduleResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getTimeSchedule" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetTimeScheduleRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="timeSchedule" type="axlapi:XTimeSchedule" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTimeScheduleResponse" type="axlapi:GetTimeScheduleRes" />
  <xsd:element name="removeTimeSchedule" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeTimeScheduleResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateTimeScheduleReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XTimeScheduleTimePeriod" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="timeScheduleCategory" type="axlapi:XTimeScheduleCategory" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateTimeSchedule" type="axlapi:UpdateTimeScheduleReq" />
  <xsd:element name="updateTimeScheduleResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddTODAccessReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="TODAccess" type="axlapi:XTODAccess" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addTODAccess" type="axlapi:AddTODAccessReq" />
  <xsd:element name="addTODAccessResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getTODAccess" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetTODAccessRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="TODAccess" type="axlapi:XTODAccess" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTODAccessResponse" type="axlapi:GetTODAccessRes" />
  <xsd:complexType name="UpdateTODAccessReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String128" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XTODAccessMember" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateTODAccess" type="axlapi:UpdateTODAccessReq" />
  <xsd:element name="updateTODAccessResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeTODAccess" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeTODAccessResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRoutePartitionReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newRoutePartition" type="axlapi:XRoutePartition" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRoutePartition" type="axlapi:AddRoutePartitionReq" />
  <xsd:element name="addRoutePartitionResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRoutePartitionReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="newTimeScheduleId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="newTimeScheduleName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="useOriginatingDeviceTimeZone" type="xsd:boolean" minOccurs="0">
          </xsd:element>
          <xsd:element name="timeZone" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XTimeZone in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRoutePartition" type="axlapi:UpdateRoutePartitionReq" />
  <xsd:element name="updateRoutePartitionResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveRoutePartitionReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="partitionId" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="partitionName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeRoutePartition" type="axlapi:RemoveRoutePartitionReq" />
  <xsd:element name="removeRoutePartitionResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetRoutePartitionReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="partitionId" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="partitionName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRoutePartition" type="axlapi:GetRoutePartitionReq" />
  <xsd:complexType name="GetRoutePartitionRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="routePartition" type="axlapi:XRoutePartition" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRoutePartitionResponse" type="axlapi:GetRoutePartitionRes" />
  <xsd:element name="getCSS" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetCSSRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCSSResponse" type="axlapi:GetCSSRes" />
  <xsd:element name="removeCSS" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeCSSResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCSSReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newCSS" type="axlapi:XCallingSearchSpace" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCSS" type="axlapi:AddCSSReq" />
  <xsd:element name="addCSSResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCSSReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XCallingSearchSpaceMember" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCSS" type="axlapi:UpdateCSSReq" />
  <xsd:element name="updateCSSResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateNumPlanPattern" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GetNumPlanPattern" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <!--Choice Tag Skipped for .NET -->
          <xsd:element name="uuid" type="axlapi:XUUID" />
          <xsd:sequence>
            <xsd:element name="pattern" type="xsd:string" />
            <xsd:choice>
              <xsd:element name="routePartitionId" type="axlapi:XUUID" />
              <xsd:element name="routePartitionName" type="axlapi:String50" />
            </xsd:choice>
          </xsd:sequence>
          <!--Choice Tag Skipped for .NET -->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GetCallPickupGroupBase" abstract="true">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="name" type="axlapi:String50" />
            <xsd:sequence>
              <xsd:element name="pattern" type="xsd:string" />
              <xsd:choice>
                <xsd:element name="routePartitionId" type="axlapi:XUUID" />
                <xsd:element name="routePartitionName" type="axlapi:String50" />
              </xsd:choice>
              <xsd:choice>
                <xsd:element name="routeFilterId" type="axlapi:XUUID" />
                <xsd:element name="routeFilterName" type="axlapi:String50" />
              </xsd:choice>
            </xsd:sequence>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GetTransPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTransPattern" type="axlapi:GetTransPatternReq" />
  <xsd:complexType name="GetTransPatternRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XNPTranslationPattern" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTransPatternResponse" type="axlapi:GetTransPatternRes" />
  <xsd:complexType name="RemoveTransPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeTransPattern" type="axlapi:RemoveTransPatternReq" />
  <xsd:element name="removeTransPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddTransPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newPattern" type="axlapi:XNPTranslationPattern">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addTransPattern" type="axlapi:AddTransPatternReq" />
  <xsd:element name="addTransPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateTransPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="callingPartyPresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlanId" type="axlapi:XUUID" />
            <xsd:element name="dialPlanName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstructionId" type="axlapi:XUUID" />
            <xsd:element name="digitDiscardInstructionName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="messageWaiting" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XLampBlinkRate in AXLEnums.xsd-->
          <xsd:element name="networkLocation" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
          <xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRouteFilterId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="newRouteFilterName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="patternPrecedence" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPatternPrecedence in AXLEnums.xsd-->
          <xsd:element name="releaseCause" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XReleaseCauseValue in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="resourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" minOccurs="0">
            </xsd:element>
            <xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateTransPattern" type="axlapi:UpdateTransPatternReq" />
  <xsd:element name="updateTransPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newPattern" type="axlapi:XNPTransformationPattern">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addTransformationPattern" type="axlapi:AddTransformationPatternReq" />
  <xsd:element name="addTransformationPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTransformationPattern" type="axlapi:GetTransformationPatternReq" />
  <xsd:complexType name="GetTransformationPatternRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XNPTransformationPattern" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getTransformationPatternResponse" type="axlapi:GetTransformationPatternRes" />
  <xsd:complexType name="UpdateTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XRoutePartition">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="callingPartyTransformationMask" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlanId" type="axlapi:XDialPlan" />
            <xsd:element name="dialPlanName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstructionId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="digitDiscardInstructionName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRouteFilterId" type="axlapi:XRouteFilter">
            </xsd:element>
            <xsd:element name="newRouteFilterName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateTransformationPattern" type="axlapi:UpdateTransformationPatternReq" />
  <xsd:element name="updateTransformationPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeTransformationPattern" type="axlapi:RemoveTransformationPatternReq" />
  <xsd:element name="removeTransformationPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCalledPartyTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newPattern" type="axlapi:XNPCalledPartyTransformationPattern">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCalledPartyTransformationPattern" type="axlapi:AddCalledPartyTransformationPatternReq" />
  <xsd:element name="addCalledPartyTransformationPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetCalledPartyTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCalledPartyTransformationPattern" type="axlapi:GetCalledPartyTransformationPatternReq" />
  <xsd:complexType name="GetCalledPartyTransformationPatternRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XNPCalledPartyTransformationPattern" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCalledPartyTransformationPatternResponse" type="axlapi:GetCalledPartyTransformationPatternRes" />
  <xsd:complexType name="UpdateCalledPartyTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="calledPartyTransformationMask" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlanId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="dialPlanName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstructionId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="digitDiscardInstructionName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="prefixDigitsOut" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRouteFilterId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="newRouteFilterName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="calledPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCalledPartyTransformationPattern" type="axlapi:UpdateCalledPartyTransformationPatternReq" />
  <xsd:element name="updateCalledPartyTransformationPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveCalledPartyTransformationPatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeCalledPartyTransformationPattern" type="axlapi:RemoveCalledPartyTransformationPatternReq" />
  <xsd:element name="removeCalledPartyTransformationPatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetRoutePatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRoutePattern" type="axlapi:GetRoutePatternReq" />
  <xsd:complexType name="GetRoutePatternRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XNPRoutePattern" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRoutePatternResponse" type="axlapi:GetRoutePatternRes" />
  <xsd:complexType name="RemoveRoutePatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeRoutePattern" type="axlapi:RemoveRoutePatternReq" />
  <xsd:element name="removeRoutePatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRoutePatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newPattern" type="axlapi:XNPRoutePattern" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRoutePattern" type="axlapi:AddRoutePatternReq" />
  <xsd:element name="addRoutePatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRoutePatternReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID" minOccurs="0">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlanId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="dialPlanName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstructionName" type="axlapi:String50" minOccurs="0" />
            <xsd:element name="digitDiscardInstructionId" type="axlapi:XUUID" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="messageWaiting" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XLampBlinkRate in AXLEnums.xsd-->
          <xsd:element name="networkLocation" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
          <xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRouteFilterId" type="axlapi:XUUID" minOccurs="0">
            </xsd:element>
            <xsd:element name="newRouteFilterName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="patternPrecedence" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPatternPrecedence in AXLEnums.xsd-->
          <xsd:element name="releaseCause" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XReleaseCauseValue in AXLEnums.xsd-->
          <xsd:element name="allowDeviceOverride" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="provideOutsideDialtone" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="callingPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="destination" nillable="false" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:sequence>
                  <xsd:choice>
                    <xsd:element name="gateway" type="axlapi:XDevice" />
                    <xsd:element name="gatewayName" type="xsd:string" />
                  </xsd:choice>
                </xsd:sequence>
                <xsd:sequence>
                  <xsd:choice>
                    <xsd:element name="routeList" type="axlapi:XRouteList" />
                    <xsd:element name="routeListName" type="xsd:string" />
                  </xsd:choice>
                </xsd:sequence>
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="authorizationCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="authorizationLevelRequired" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="clientCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="withTag" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="withValueClause" type="axlapi:String255" minOccurs="0">
          </xsd:element>
          <xsd:element name="isdnNSFInfoElement" nillable="true" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="cic" nillable="true" minOccurs="0">
                </xsd:element>
                <xsd:element name="networkServiceProtocol" nillable="false">
                </xsd:element>
                <xsd:element name="networkService" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="paramValue" minOccurs="0">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="resourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" minOccurs="0">
            </xsd:element>
            <xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRoutePattern" type="axlapi:UpdateRoutePatternReq" />
  <xsd:element name="updateRoutePatternResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetHuntPilotReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getHuntPilot" type="axlapi:GetHuntPilotReq" />
  <xsd:complexType name="GetHuntPilotRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pattern" type="axlapi:XNPHuntPilot" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getHuntPilotResponse" type="axlapi:GetHuntPilotRes" />
  <xsd:complexType name="RemoveHuntPilotReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeHuntPilot" type="axlapi:RemoveHuntPilotReq" />
  <xsd:element name="removeHuntPilotResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddHuntPilotReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newPattern" type="axlapi:XNPHuntPilot" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addHuntPilot" type="axlapi:AddHuntPilotReq" />
  <xsd:element name="addHuntPilotResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateHuntPilotReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID" minOccurs="0">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="useCallingPartyPhoneMask" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="callingPartyPrefixDigits" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlanId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="dialPlanName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="digitDiscardInstructionName" type="axlapi:String50" minOccurs="0" />
            <xsd:element name="digitDiscardInstructionId" type="axlapi:XUUID" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="messageWaiting" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XLampBlinkRate in AXLEnums.xsd-->
          <xsd:element name="networkLocation" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
          <xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRouteFilterId" type="axlapi:XUUID" minOccurs="0">
            </xsd:element>
            <xsd:element name="newRouteFilterName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedNamePresentationBit" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="patternPrecedence" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPatternPrecedence in AXLEnums.xsd-->
          <xsd:element name="releaseCause" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XReleaseCauseValue in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="calledPartyNumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="destination" nillable="false" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="huntList" type="axlapi:XHuntList" />
                  <xsd:element name="huntListName" type="xsd:string" />
                </xsd:choice>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ForwardHuntBusy" type="axlapi:XHuntForwardInfo" minOccurs="0" />
          <xsd:element name="ForwardHuntNoAnswer" type="axlapi:XHuntForwardInfo" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="callPickupGroup" type="axlapi:XNPCallPickupGroup">
            </xsd:element>
            <xsd:element name="callPickupGroupName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="ParkMonForwardNoRetrieveDN" type="axlapi:String50" nillable="true" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="ParkMonForwardNoRetrieveCSS" type="axlapi:XCallingSearchSpace" nillable="true" minOccurs="0" />
            <xsd:element name="ParkMonForwardNoRetrieveCSSName" type="axlapi:String50" nillable="true" minOccurs="0" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateHuntPilot" type="axlapi:UpdateHuntPilotReq" />
  <xsd:element name="updateHuntPilotResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddLineGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="lineGroup" type="axlapi:XLineGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addLineGroup" type="axlapi:AddLineGroupReq" />
  <xsd:element name="addLineGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateLineGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="distributionAlgorithm" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XDistributeAlgorithm in AXLEnums.xsd-->
          <xsd:element name="rnaReversionTimeOut" type="xsd:nonNegativeInteger" default="10" nillable="false" />
          <xsd:element name="huntAlgorithmNoAnswer" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XHuntAlgorithm in AXLEnums.xsd-->
          <xsd:element name="huntAlgorithmBusy" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XHuntAlgorithm in AXLEnums.xsd-->
          <xsd:element name="huntAlgorithmNotAvailable" type="xsd:string" nillable="false" />
          <!--This field is of the type axl:XHuntAlgorithm in AXLEnums.xsd-->
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XLineGroupMember" maxOccurs="unbounded">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateLineGroup" type="axlapi:UpdateLineGroupReq" />
  <xsd:element name="updateLineGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getLineGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetLineGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="lineGroup" type="axlapi:XLineGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getLineGroupResponse" type="axlapi:GetLineGroupRes" />
  <xsd:element name="removeLineGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeLineGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRouteGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="routeGroup" type="axlapi:XRouteGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRouteGroup" type="axlapi:AddRouteGroupReq" />
  <xsd:element name="addRouteGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRouteGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XRouteGroupMember" maxOccurs="unbounded">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRouteGroup" type="axlapi:UpdateRouteGroupReq" />
  <xsd:element name="updateRouteGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getRouteGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetRouteGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="routeGroup" type="axlapi:XRouteGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRouteGroupResponse" type="axlapi:GetRouteGroupRes" />
  <xsd:element name="removeRouteGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeRouteGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRouteListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="routeList" type="axlapi:XRouteList" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRouteList" type="axlapi:AddRouteListReq" />
  <xsd:element name="addRouteListResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRouteListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String50" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callManagerGroupName" type="axlapi:String50" nillable="false" />
            <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XRouteListMember" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRouteList" type="axlapi:UpdateRouteListReq" />
  <xsd:element name="updateRouteListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getRouteList" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetRouteListRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="routeList" type="axlapi:XRouteList" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRouteListResponse" type="axlapi:GetRouteListRes" />
  <xsd:element name="removeRouteList" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeRouteListResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddHuntListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="huntList" type="axlapi:XHuntList" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addHuntList" type="axlapi:AddHuntListReq" />
  <xsd:element name="addHuntListResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateHuntListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String50" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callManagerGroupName" type="axlapi:String50" nillable="false" />
            <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="member" type="axlapi:XHuntListMember" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateHuntList" type="axlapi:UpdateHuntListReq" />
  <xsd:element name="updateHuntListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getHuntList" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetHuntListRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="huntList" type="axlapi:XHuntList" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getHuntListResponse" type="axlapi:GetHuntListRes" />
  <xsd:element name="removeHuntList" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeHuntListResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCTIRoutePointReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="routePoint" type="axlapi:XCTIRoutePoint" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCTIRoutePoint" type="axlapi:AddCTIRoutePointReq" />
  <xsd:element name="addCTIRoutePointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCTIRoutePointReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:Name128" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:Name128" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String128" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="devicePoolName" type="axlapi:Name128">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="commonDeviceConfigName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="locationName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mediaResourceList" type="axlapi:XMediaResourceList">
            </xsd:element>
            <xsd:element name="mediaResourceListName" />
          </xsd:choice>
          <xsd:element name="networkHoldMOHAudioSourceId" minOccurs="0" />
          <xsd:element name="userHoldMOHAudioSourceId" minOccurs="0" />
          <xsd:element name="userLocale" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
                <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded" />
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
            </xsd:element>
            <xsd:element name="geoLocationName" type="axlapi:String100" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCTIRoutePoint" type="axlapi:UpdateCTIRoutePointReq" />
  <xsd:element name="updateCTIRoutePointResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getCTIRoutePoint" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetCTIRoutePointRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="routePoint" type="axlapi:XCTIRoutePoint" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCTIRoutePointResponse" type="axlapi:GetCTIRoutePointRes" />
  <xsd:element name="removeCTIRoutePoint" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeCTIRoutePointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddDHCPSubnetReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newDHCPSubnet" type="axlapi:XDHCPSubnet" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addDHCPSubnet" type="axlapi:AddDHCPSubnetReq" />
  <xsd:element name="addDHCPSubnetResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="DHCPSubnetReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDHCPSubnet" type="axlapi:DHCPSubnetReq" />
  <xsd:complexType name="GetDHCPSubnetRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="DHCPSubnet" type="axlapi:XDHCPSubnet" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDHCPSubnetResponse" type="axlapi:GetDHCPSubnetRes" />
  <xsd:complexType name="UpdateDHCPSubnetReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="dhcpServer" type="axlapi:XDHCPServer">
            </xsd:element>
            <xsd:element name="dhcpServerName" type="xsd:string" />
          </xsd:choice>
          <xsd:element name="subnetIPAddress" type="xsd:string" minOccurs="0" />
          <xsd:element name="primaryStartIPAddress" type="xsd:string" minOccurs="0" />
          <xsd:element name="primaryEndIPAddress" type="xsd:string" minOccurs="0" />
          <xsd:element name="secondaryStartIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="secondaryEndIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="primaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="secondaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="subnetMask" type="xsd:string" minOccurs="0" />
          <xsd:element name="domainName" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="primaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="secondaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="tftpServerName" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="primaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="secondaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="bootstrapServerIPAddress" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="renewalTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateDHCPSubnet" type="axlapi:UpdateDHCPSubnetReq" />
  <xsd:element name="updateDHCPSubnetResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeDHCPSubnet" type="axlapi:DHCPSubnetReq" />
  <xsd:element name="removeDHCPSubnetResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddDialPlanReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="dialPlan" type="axlapi:XDialPlan" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--<xsd:element name="addDialPlan" type="axlapi:AddDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="UpdateDialPlanReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--<xsd:element name="updateDialPlan" type="axlapi:UpdateDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanResponse" type="axlapi:StandardResponse"/>-->
  <xsd:element name="getDialPlan" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetDialPlanRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="dialPlan" type="axlapi:XDialPlan" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDialPlanResponse" type="axlapi:GetDialPlanRes" />
  <!--<xsd:element name="removeDialPlan" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="AddDialPlanTagReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="dialPlanTag" type="axlapi:XDialPlanTag" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--<xsd:element name="addDialPlanTag" type="axlapi:AddDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="UpdateDialPlanTagReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:Name50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlan" type="axlapi:XDialPlan" nillable="false">
            </xsd:element>
            <xsd:element name="dialPlanName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="operator" type="axlapi:XOperator" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="suppressFromRouteFilter" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--<xsd:element name="updateDialPlanTag" type="axlapi:UpdateDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="getDialPlanTagReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:sequence>
              <xsd:element name="name" type="xsd:string" />
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="dialPlanUuid" type="axlapi:XUUID" />
                  <xsd:element name="dialPlanName" type="xsd:string" />
                </xsd:choice>
              </xsd:sequence>
            </xsd:sequence>
            <xsd:element name="uuid" type="axlapi:XUUID" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDialPlanTag" type="axlapi:getDialPlanTagReq" />
  <xsd:complexType name="GetDialPlanTagRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="dialPlanTag" type="axlapi:XDialPlanTag" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDialPlanTagResponse" type="axlapi:GetDialPlanTagRes" />
  <!--<xsd:element name="removeDialPlanTag" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="AddCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="callPark" type="axlapi:XNPCallPark" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCallPark" type="axlapi:AddCallParkReq" />
  <xsd:element name="addCallParkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="callManagerId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="callManagerName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCallPark" type="axlapi:UpdateCallParkReq" />
  <xsd:element name="updateCallParkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCallPark" type="axlapi:GetCallParkReq" />
  <xsd:complexType name="GetCallParkRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="callPark" type="axlapi:XNPCallPark" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCallParkResponse" type="axlapi:GetCallParkRes" />
  <xsd:complexType name="RemoveCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeCallPark" type="axlapi:RemoveCallParkReq" />
  <xsd:element name="removeCallParkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddDirectedCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="directedCallPark" type="axlapi:XNPDirectedCallPark" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addDirectedCallPark" type="axlapi:AddDirectedCallParkReq" />
  <xsd:element name="addDirectedCallParkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateDirectedCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern">
        <xsd:sequence>
          <xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:sequence minOccurs="0">
            <xsd:element name="retrievalPrefix" type="xsd:string" minOccurs="0">
            </xsd:element>
            <xsd:element name="reversionPattern" type="xsd:string" minOccurs="0">
            </xsd:element>
          </xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:element name="revertCSS">
              <xsd:complexType>
                <xsd:complexContent>
                  <xsd:extension base="axlapi:XCallingSearchSpace" />
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="revertCSSName" type="axlapi:String50" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateDirectedCallPark" type="axlapi:UpdateDirectedCallParkReq" />
  <xsd:element name="updateDirectedCallParkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetDirectedCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDirectedCallPark" type="axlapi:GetDirectedCallParkReq" />
  <xsd:complexType name="GetDirectedCallParkRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="directedCallPark" type="axlapi:XNPDirectedCallPark" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDirectedCallParkResponse" type="axlapi:GetDirectedCallParkRes" />
  <xsd:complexType name="RemoveDirectedCallParkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetNumPlanPattern" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeDirectedCallPark" type="axlapi:RemoveDirectedCallParkReq" />
  <xsd:element name="removeDirectedCallParkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCallPickupGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="callPickup" type="axlapi:XNPCallPickupGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCallPickupGroup" type="axlapi:AddCallPickupGroupReq" />
  <xsd:element name="addCallPickupGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCallPickupGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetCallPickupGroupBase">
        <xsd:sequence>
          <xsd:element name="newPattern" type="axlapi:XDirectoryNumber" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="newRoutePartitionId" type="axlapi:XUUID" />
            <xsd:element name="newRoutePartitionName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:XDirectoryNumber" minOccurs="0" />
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="member" type="axlapi:XPickupGroupMember" minOccurs="0" maxOccurs="unbounded">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="pickupNotification" type="axlapi:XPickupNotification" default="No Alert" nillable="false" minOccurs="0" />
          <xsd:element name="pickupNotificationTimer" type="xsd:nonNegativeInteger" default="6" nillable="false" minOccurs="0" />
          <xsd:element name="callInfoForPickupNotification" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="callingPartyInfo" type="xsd:boolean" default="false" nillable="false" />
                <xsd:element name="calledPartyInfo" type="xsd:boolean" default="false" nillable="false" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCallPickupGroup" type="axlapi:UpdateCallPickupGroupReq" />
  <xsd:element name="updateCallPickupGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetCallPickupGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetCallPickupGroupBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCallPickupGroup" type="axlapi:GetCallPickupGroupReq" />
  <xsd:complexType name="GetCallPickupGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="callPickup" type="axlapi:XNPCallPickupGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCallPickupGroupResponse" type="axlapi:GetCallPickupGroupRes" />
  <xsd:complexType name="RemoveCallPickupGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetCallPickupGroupBase" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeCallPickupGroup" type="axlapi:RemoveCallPickupGroupReq" />
  <xsd:element name="removeCallPickupGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddDDIReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="ddi" type="axlapi:XDigitDiscardInstruction" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--<xsd:element name="addDDI" type="axlapi:AddDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDDIResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="UpdateDDIReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:Name50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlanId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="dialPlanName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="member" type="axlapi:XDigitDiscardInstructionMember" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--<xsd:element name="updateDDI" type="axlapi:UpdateDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDDIResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="getDDIReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:sequence>
              <xsd:element name="name" type="xsd:string" />
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element name="dialPlanUuid" type="axlapi:XUUID" />
                  <xsd:element name="dialPlanName" type="xsd:string" />
                </xsd:choice>
              </xsd:sequence>
            </xsd:sequence>
            <xsd:element name="uuid" type="axlapi:XUUID" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDDI" type="axlapi:getDDIReq" />
  <xsd:complexType name="GetDDIRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="ddi" type="axlapi:XDigitDiscardInstruction" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDDIResponse" type="axlapi:GetDDIRes" />
  <!--<xsd:element name="removeDDI" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDDIResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="CreateAutogeneratedProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="phoneName" type="xsd:string" nillable="false">
          </xsd:element>
          <xsd:element name="phoneId" type="axlapi:XUUID">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--<xsd:element name="createAutogeneratedProfile" type="axlapi:CreateAutogeneratedProfileReq">
			<xsd:annotation>
				<xsd:documentation>This API call is experimental and not supported in normal operation.				</xsd:documentation>
			</xsd:annotation>
	</xsd:element>
	<xsd:element name="createAutogeneratedProfileResponse" type="axlapi:StandardResponse"/>-->
  <xsd:complexType name="ListBySearchString">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="searchString" type="xsd:string">
          </xsd:element>
          <xsd:element name="skip" type="xsd:unsignedLong" minOccurs="0">
          </xsd:element>
          <xsd:element name="first" type="xsd:unsignedLong" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ListPhoneByNameReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListBySearchString" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listPhoneByName" type="axlapi:ListPhoneByNameReq" />
  <xsd:complexType name="ListPhoneResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="phone" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String50" nillable="false" />
                      <xsd:element name="product" type="xsd:string" nillable="false" />
                      <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
                      <xsd:element name="model" type="xsd:string" nillable="false" />
                      <!--This field is of the type axl:XModel in AXLEnums.xsd-->
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ListPhoneByNameRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListPhoneResponse" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listPhoneByNameResponse" type="axlapi:ListPhoneByNameRes" />
  <xsd:complexType name="ListPhoneByDescriptionReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListBySearchString" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listPhoneByDescription" type="axlapi:ListPhoneByDescriptionReq" />
  <xsd:complexType name="ListPhoneByDescriptionRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListPhoneResponse" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listPhoneByDescriptionResponse" type="axlapi:ListPhoneByDescriptionRes" />
  <xsd:complexType name="ListUserByNameReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="firstname" type="xsd:string">
          </xsd:element>
          <xsd:element name="lastname" type="xsd:string">
          </xsd:element>
          <xsd:element name="searchLimit" type="xsd:int">
          </xsd:element>
          <xsd:element name="skip" type="xsd:unsignedLong" minOccurs="0">
          </xsd:element>
          <xsd:element name="first" type="xsd:unsignedLong" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listUserByName" type="axlapi:ListUserByNameReq" />
  <xsd:complexType name="ListUserByNameRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="user" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="firstname" type="xsd:string" />
                      <xsd:element name="lastname" type="xsd:string" />
                    </xsd:sequence>
                    <xsd:attribute name="userid" type="xsd:string" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listUserByNameResponse" type="axlapi:ListUserByNameRes" />
  <xsd:complexType name="ListRoutePlanByTypeReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="usage" type="xsd:string" nillable="false">
            <!--This field is of the type axl:XPatternUsage in AXLEnums.xsd-->
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listRoutePlanByType" type="axlapi:ListRoutePlanByTypeReq" />
  <xsd:complexType name="ListRoutePlanByTypeRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="routePlan" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="directoryNumber" type="axlapi:XDirectoryNumber" />
                      <xsd:element name="routePartitionName" type="axlapi:String50" />
                      <xsd:element name="usage" type="xsd:string" />
                      <!--This field is of the type axl:XPatternUsage in AXLEnums.xsd-->
                      <xsd:element name="routeFilterName" type="axlapi:String50" />
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listRoutePlanByTypeResponse" type="axlapi:ListRoutePlanByTypeRes" />
  <xsd:complexType name="GetNumDevicesReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="class" type="xsd:string" nillable="false">
            <!--This field is of the type axl:XClass in AXLEnums.xsd-->
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getNumDevices" type="axlapi:GetNumDevicesReq" />
  <xsd:complexType name="GetNumDevicesRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:nonNegativeInteger" />
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getNumDevicesResponse" type="axlapi:GetNumDevicesRes" />
  <xsd:complexType name="ListServiceParametersReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="nodeName" type="xsd:string" nillable="false">
          </xsd:element>
          <xsd:element name="serviceType" type="xsd:string" nillable="false">
            <!--This field is of the type axl:XService in AXLEnums.xsd-->
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listServiceParameters" type="axlapi:ListServiceParametersReq" />
  <xsd:complexType name="ListServiceParametersRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="xsd:string" nillable="false">
                      </xsd:element>
                      <xsd:element name="value" type="xsd:string" nillable="false">
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listServiceParametersResponse" type="axlapi:ListServiceParametersRes" />
  <xsd:complexType name="ListCSSByNameReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListBySearchString" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listCSSByName" type="axlapi:ListCSSByNameReq" />
  <xsd:complexType name="ListCSSResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ListCSSByNameRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListCSSResponse" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listCSSByNameResponse" type="axlapi:ListCSSByNameRes" />
  <xsd:complexType name="NameAndGUIDRequest">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String100" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GUIDRequest">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddDevicePoolReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="devicePool" type="axlapi:XDevicePool" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addDevicePool" type="axlapi:AddDevicePoolReq" />
  <xsd:element name="addDevicePoolResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateDevicePoolReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String50">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="autoSearchSpaceId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="autoSearchSpaceName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="dateTimeSettingId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="dateTimeSettingName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="callManagerGroupId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="callManagerGroupName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mediaResourceListId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="mediaResourceListName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="regionId" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="regionName" type="axlapi:String50" nillable="false" />
          </xsd:choice>
          <xsd:element name="networkLocale" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="srstInfoId" type="axlapi:XUUID" />
            <xsd:element name="srstName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="connectionMonitorDuration" type="xsd:int" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="automatedAlternateRoutingCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhoodId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="locationName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mobilityCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="mobilityCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="physicalLocationId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="physicalLocationName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="deviceMobilityGroupId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="deviceMobilityGroupName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="revertPriority" type="axlapi:XRevertPriority" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="singleButtonBarge" type="axlapi:XBarge" nillable="false" minOccurs="0" />
          <xsd:element name="joinAcrossLines" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cdpnTransformationCSSId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="localRouteGroupId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="localRouteGroupName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="nationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="internationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="subscriberPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
            </xsd:element>
            <xsd:element name="geoLocationName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter">
            </xsd:element>
            <xsd:element name="geoLocationFilterName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationNationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationNationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationInternationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationInternationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationSubscriberCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationSubscriberCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="nationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="internationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="subscriberStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateDevicePool" type="axlapi:UpdateDevicePoolReq" />
  <xsd:element name="updateDevicePoolResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getDevicePool" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetDevicePoolRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="devicePool" type="axlapi:XDevicePool" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getDevicePoolResponse" type="axlapi:GetDevicePoolRes" />
  <xsd:element name="removeDevicePool" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeDevicePoolResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCallManagerGroupReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCallManagerGroup" type="axlapi:AddCallManagerGroupReq" />
  <xsd:element name="addCallManagerGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCallManagerGroupReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="tftpDefault" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="member" type="axlapi:XCallManagerMember" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCallManagerGroup" type="axlapi:UpdateCallManagerGroupReq" />
  <xsd:element name="updateCallManagerGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getCallManagerGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetCallManagerGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCallManagerGroupResponse" type="axlapi:GetCallManagerGroupRes" />
  <xsd:element name="removeCallManagerGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeCallManagerGroupResponse" type="axlapi:StandardResponse" />
  <!-- VG224 Gateway -->
  <xsd:complexType name="AddVG224Req" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newVG224" type="axlapi:XVG224" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addVG224" type="axlapi:AddVG224Req" />
  <xsd:element name="addVG224Response" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetVG224Req" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="domainName" type="axlapi:String64" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getVG224" type="axlapi:GetVG224Req" />
  <xsd:complexType name="GetVG224Res">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="vg224" type="axlapi:XVG224" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getVG224Response" type="axlapi:GetVG224Res" />
  <xsd:complexType name="RemoveVG224Req">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="domainName" type="axlapi:String64" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeVG224" type="axlapi:RemoveVG224Req" />
  <xsd:element name="removeVG224Response" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateVG224Req">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="domainName" type="axlapi:String64">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newDomainName" type="axlapi:String64" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String100" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup" minOccurs="0">
            </xsd:element>
            <xsd:element name="callManagerGroupName" type="axlapi:String50" minOccurs="0">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="units" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="unit" minOccurs="0">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="product" type="xsd:string" />
                      <!--This field is of the type axl:XMGCPSlotModule in AXLEnums.xsd-->
                      <xsd:element name="subunits" minOccurs="0">
                        <xsd:complexType>
                          <xsd:sequence minOccurs="0">
                            <xsd:element name="subunit" minOccurs="0">
                              <xsd:complexType>
                                <xsd:sequence>
                                  <xsd:element name="product" type="xsd:string" />
                                  <!--This field is of the type axl:XMGCPVic in AXLEnums.xsd-->
                                  <xsd:element name="endpoints" minOccurs="0">
                                    <xsd:complexType>
                                      <xsd:sequence minOccurs="0">
                                        <xsd:element name="endpoint" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:complexType>
                                            <xsd:complexContent>
                                              <xsd:extension base="axlapi:APIRequest">
                                                <xsd:sequence>
                                                  <xsd:choice>
                                                    <xsd:element name="name" type="axlapi:UniqueString128">
                                                    </xsd:element>
                                                    <xsd:element name="uuid" type="axlapi:XUUID">
                                                    </xsd:element>
                                                  </xsd:choice>
                                                  <xsd:element name="description" type="axlapi:String128" minOccurs="0">
                                                  </xsd:element>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID">
                                                    </xsd:element>
                                                    <xsd:element name="callingSearchSpaceName" type="axlapi:String50">
                                                    </xsd:element>
                                                  </xsd:choice>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="devicePoolId" type="axlapi:XUUID">
                                                    </xsd:element>
                                                    <xsd:element name="devicePoolName" type="axlapi:UniqueString50">
                                                    </xsd:element>
                                                  </xsd:choice>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID" nillable="true">
                                                    </xsd:element>
                                                    <xsd:element name="commonDeviceConfigName" type="axlapi:UniqueString50" nillable="true">
                                                    </xsd:element>
                                                  </xsd:choice>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="commonPhoneConfigId" type="axlapi:XUUID" nillable="false">
                                                    </xsd:element>
                                                    <xsd:element name="commonPhoneConfigName" type="axlapi:String50" nillable="false" />
                                                  </xsd:choice>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="locationId" type="axlapi:XUUID">
                                                    </xsd:element>
                                                    <xsd:element name="locationName" type="xsd:Name">
                                                    </xsd:element>
                                                  </xsd:choice>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="automatedAlternateRoutingCSSId" type="axlapi:XUUID" />
                                                    <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" />
                                                  </xsd:choice>
                                                  <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
                                                  </xsd:element>
                                                  <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
                                                    <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
                                                  </xsd:element>
                                                  <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
                                                    <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
                                                  </xsd:element>
                                                  <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
                                                  <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="securityProfileId" type="axlapi:XUUID">
                                                    </xsd:element>
                                                    <xsd:element name="securityProfileName" type="axlapi:UniqueString50" />
                                                  </xsd:choice>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
                                                    <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
                                                  </xsd:choice>
                                                  <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
                                                    </xsd:element>
                                                    <xsd:element name="geoLocationName" type="axlapi:String100" />
                                                  </xsd:choice>
                                                  <xsd:choice minOccurs="0">
                                                    <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter">
                                                    </xsd:element>
                                                    <xsd:element name="geoLocationFilterName" type="axlapi:String100" />
                                                  </xsd:choice>
                                                  <xsd:element name="lines" minOccurs="0">
                                                    <xsd:complexType>
                                                      <xsd:choice>
                                                        <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
                                                        <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded" />
                                                      </xsd:choice>
                                                    </xsd:complexType>
                                                  </xsd:element>
                                                  <xsd:sequence minOccurs="0">
                                                    <xsd:element name="packetCaptureMode" type="xsd:string" default="None" minOccurs="0" />
                                                    <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
                                                    <xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0" />
                                                    <xsd:element name="transmitUTF8" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                    <xsd:element name="ports">
                                                      <xsd:complexType>
                                                        <xsd:sequence minOccurs="0">
                                                          <xsd:element name="port" maxOccurs="unbounded">
                                                            <xsd:complexType>
                                                              <xsd:sequence minOccurs="0">
                                                                <xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
                                                                <xsd:element name="trunkDirection" type="xsd:string" />
                                                                <!--This field is of the type axl:XTrunkDirection in AXLEnums.xsd-->
                                                                <xsd:sequence minOccurs="0">
                                                                  <xsd:element name="attendantDN" type="axlapi:XDirectoryNumber" />
                                                                </xsd:sequence>
                                                                <xsd:sequence minOccurs="0">
                                                                  <xsd:element name="prefixDN" type="axlapi:XDirectoryNumber" minOccurs="0" />
                                                                  <xsd:element name="numDigits" type="xsd:nonNegativeInteger" nillable="false" />
                                                                  <xsd:element name="expectedDigits" type="xsd:nonNegativeInteger" />
                                                                  <xsd:element name="smdiPortNumber" type="xsd:nonNegativeInteger">
                                                                  </xsd:element>
                                                                </xsd:sequence>
                                                              </xsd:sequence>
                                                              <xsd:attribute name="uuid" type="axlapi:XUUID" />
                                                              <xsd:attribute name="portNumber" type="xsd:positiveInteger" use="required" />
                                                            </xsd:complexType>
                                                          </xsd:element>
                                                        </xsd:sequence>
                                                      </xsd:complexType>
                                                    </xsd:element>
                                                  </xsd:sequence>
                                                  <xsd:element name="userLocale" type="xsd:string" nillable="true" minOccurs="0" />
                                                  <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
                                                  <xsd:element name="networkLocale" type="xsd:string" nillable="true" minOccurs="0" />
                                                  <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
                                                  <xsd:sequence minOccurs="0">
                                                    <xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                    <xsd:choice minOccurs="0">
                                                      <xsd:element name="subscribeCallingSearchSpace" type="axlapi:XCallingSearchSpace" nillable="true">
                                                      </xsd:element>
                                                      <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
                                                    </xsd:choice>
                                                    <xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                    <xsd:element name="remoteDevice" type="xsd:boolean" nillable="false" minOccurs="0" />
                                                    <xsd:choice minOccurs="0">
                                                      <xsd:element name="phoneTemplate" type="axlapi:XPhoneTemplate">
                                                      </xsd:element>
                                                      <xsd:element name="phoneTemplateName" type="axlapi:String50" nillable="false" />
                                                    </xsd:choice>
                                                    <xsd:choice>
                                                      <xsd:element name="presenceGroup" type="axlapi:XPresenceGroup" nillable="false">
                                                      </xsd:element>
                                                      <xsd:element name="presenceGroupName" type="axlapi:String50" nillable="false" />
                                                    </xsd:choice>
                                                    <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" nillable="false" minOccurs="0">
                                                    </xsd:element>
                                                    <xsd:element name="deviceMobilityMode" type="xsd:string" default="Default" nillable="false" minOccurs="0">
                                                      <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
                                                    </xsd:element>
                                                    <xsd:element name="hlogStatus" type="xsd:string" nillable="false" minOccurs="0" />
                                                    <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
                                                    <xsd:element name="ownerUserId" type="axlapi:String255" nillable="true" minOccurs="0" />
                                                  </xsd:sequence>
                                                </xsd:sequence>
                                                <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
                                              </xsd:extension>
                                            </xsd:complexContent>
                                          </xsd:complexType>
                                          <!--VG224 EndPoint Schema Ends-->
                                        </xsd:element>
                                      </xsd:sequence>
                                      <xsd:attribute name="max" type="xsd:positiveInteger" />
                                    </xsd:complexType>
                                    <!--VG224 EndPoints Schema Ends-->
                                  </xsd:element>
                                </xsd:sequence>
                              </xsd:complexType>
                              <!--VG224 SubUnit Schema Ends-->
                            </xsd:element>
                          </xsd:sequence>
                        </xsd:complexType>
                        <!--VG224 SubUnits Schema Ends-->
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                  <!--VG224 Unit Schema Ends-->
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
            <!--VG224 Units Schema Ends-->
          </xsd:element>
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateVG224" type="axlapi:UpdateVG224Req" />
  <xsd:element name="updateVG224Response" type="axlapi:StandardResponse" />
  <!-- vg224 gateway ends -->
  <xsd:complexType name="AddVoiceMailPilotReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="voiceMailPilot" type="axlapi:XVoiceMailPilot" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addVoiceMailPilot" type="axlapi:AddVoiceMailPilotReq" />
  <xsd:element name="addVoiceMailPilotResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateVoiceMailPilotReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:sequence>
              <xsd:element name="dirn" type="axlapi:XDirectoryNumber" nillable="true" />
              <xsd:choice>
                <xsd:element name="CSS" type="axlapi:XCallingSearchSpace" nillable="true">
                </xsd:element>
                <xsd:element name="CSSName" type="axlapi:UniqueName50" nillable="true" />
              </xsd:choice>
            </xsd:sequence>
          </xsd:choice>
          <xsd:sequence minOccurs="0">
            <xsd:element name="newdirn" type="axlapi:XDirectoryNumber" nillable="true" minOccurs="0" />
            <xsd:choice minOccurs="0">
              <xsd:element name="newCSS" type="axlapi:XUUID" nillable="true" minOccurs="0" />
              <xsd:element name="newCSSName" type="axlapi:UniqueName50" nillable="true" minOccurs="0" />
            </xsd:choice>
          </xsd:sequence>
          <xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateVoiceMailPilot" type="axlapi:UpdateVoiceMailPilotReq" />
  <xsd:element name="updateVoiceMailPilotResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetVoiceMailPilotReq" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:sequence>
            <xsd:element name="dirn" type="axlapi:XDirectoryNumber" nillable="true" />
            <xsd:choice>
              <xsd:element name="CSS" type="axlapi:XUUID" nillable="true" />
              <xsd:element name="CSSName" type="axlapi:UniqueName50" nillable="true" />
            </xsd:choice>
          </xsd:sequence>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getVoiceMailPilot" type="axlapi:GetVoiceMailPilotReq" />
  <xsd:complexType name="GetVoiceMailPilotRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="voiceMailPilot" type="axlapi:XVoiceMailPilot" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getVoiceMailPilotResponse" type="axlapi:GetVoiceMailPilotRes" />
  <xsd:complexType name="RemoveVoiceMailPilotReq" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:sequence>
            <xsd:element name="dirn" type="axlapi:XDirectoryNumber" nillable="true" />
            <xsd:choice>
              <xsd:element name="CSS" type="axlapi:XUUID" nillable="true" />
              <xsd:element name="CSSName" type="axlapi:UniqueName50" nillable="true" />
            </xsd:choice>
          </xsd:sequence>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeVoiceMailPilot" type="axlapi:RemoveVoiceMailPilotReq" />
  <xsd:complexType name="AddVoiceMailProfileReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="voiceMailProfile" type="axlapi:XVoiceMailProfile" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addVoiceMailProfile" type="axlapi:AddVoiceMailProfileReq" />
  <xsd:element name="addVoiceMailProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateVoiceMailProfileReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="voiceMailboxMask" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="voiceMailPilot" type="axlapi:XUUID" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateVoiceMailProfile" type="axlapi:UpdateVoiceMailProfileReq" />
  <xsd:element name="updateVoiceMailProfileResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getVoiceMailProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetVoiceMailProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="voiceMailProfile" type="axlapi:XVoiceMailProfile" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getVoiceMailProfileResponse" type="axlapi:GetVoiceMailProfileRes" />
  <xsd:element name="removeVoiceMailProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeVoiceMailProfileResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeVoiceMailPilotResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddVoiceMailPortReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="voiceMailPort" type="axlapi:XVoiceMailPort" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addVoiceMailPort" type="axlapi:AddVoiceMailPortReq" />
  <xsd:element name="addVoiceMailPortResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateVoiceMailPortReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="devicePoolName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="commonDeviceConfigName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="locationName" type="xsd:Name">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mediaResourceListId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="mediaResourceListName" type="xsd:Name">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="automatedAlternateRoutingCSSId" type="axlapi:XUUID" />
            <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhoodId" type="axlapi:XUUID" />
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="loadInformation" type="axlapi:XLoadInformation" minOccurs="0">
          </xsd:element>
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0">
          </xsd:element>
          <xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="securityProfileId" type="axlapi:XUUID" />
            <xsd:element name="securityProfileName" type="axlapi:UniqueString50" />
          </xsd:choice>
          <xsd:element name="line" type="axlapi:XLine" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
            </xsd:element>
            <xsd:element name="geoLocationName" type="axlapi:String100" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateVoiceMailPort" type="axlapi:UpdateVoiceMailPortReq" />
  <xsd:element name="updateVoiceMailPortResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getVoiceMailPort" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetVoiceMailPortRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="voiceMailPort" type="axlapi:XVoiceMailPort" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getVoiceMailPortResponse" type="axlapi:GetVoiceMailPortRes" />
  <xsd:element name="removeVoiceMailPort" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeVoiceMailPortResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddGatewayEndpointReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="gateway" type="axlapi:XGateway" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addGatewayEndpoint" type="axlapi:AddGatewayEndpointReq" />
  <xsd:element name="addGatewayEndpointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateGatewayEndpointReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:element name="protocolSide" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XProtocolSide in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="devicePoolName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="commonDeviceConfigName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="networkLocation" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="locationName" type="xsd:Name">
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mediaResourceListId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="mediaResourceListName" type="xsd:Name">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="automatedAlternateRoutingCSSId" type="axlapi:XUUID" />
            <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhoodId" type="axlapi:XUUID" />
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="loadInformation" type="axlapi:XLoadInformation" minOccurs="0">
          </xsd:element>
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0">
          </xsd:element>
          <xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="country" type="xsd:string" nillable="true" minOccurs="0">
            <!--This field is of the type axl:XCountry in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="packetCaptureMode" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
          <xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="analog">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="ports" type="axlapi:XAnalogPortList" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="trunkSelectionOrder" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XTrunkSelectionOrder in AXLEnums.xsd-->
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="pri">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="ASN1ROSEOIDEncoding" type="axlapi:String50" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="QSIGVariant" type="axlapi:String50" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="calledPlan" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="calledPri" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="callerIDDN" type="axlapi:XDirectoryNumber" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="callingPartySelection" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="callingPlan" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="callingPri" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="clockReference" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XClockReference in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="csuParam" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XCSUParam in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="direction" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="encode" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XEncode in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="fdlChannel" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XFDLChannel in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="interfaceId" minOccurs="0">
                    <xsd:complexType>
                      <xsd:simpleContent>
                        <xsd:extension base="xsd:nonNegativeInteger">
                          <xsd:attribute name="present" type="xsd:boolean" use="required" />
                        </xsd:extension>
                      </xsd:simpleContent>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="mcdnEnable" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="passingPrecedenceLevelThroughUUIE" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="prefix" type="xsd:string" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="callingLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0">
                    <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="connectedLinePresentationBit" type="xsd:string" nillable="false" minOccurs="0">
                    <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="connectedPBX" type="xsd:string" nillable="false" minOccurs="0">
                    <!--This field is of the type axl:XConnectedPBX in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="priProtocol" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XPriProtocol in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="securityAccessLevel" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="sendCallingNameInFacilityIE" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="sendEXLeadingCharInDispIE" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="span" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="trunkPadRx" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="trunkPadTx" type="xsd:string" nillable="false" minOccurs="0">
                    <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="trunkLevel" type="xsd:string" nillable="false" minOccurs="0">
                    <!--This field is of the type axl:XTrunkLevel in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="yellowAlarm" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XYellowAlarm in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="zeroSuppression" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XZeroSuppression in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="sMDIBasePort" type="xsd:positiveInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="protocolProfile91NameOnly" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="GClearEnable" type="xsd:boolean" default="false" minOccurs="0" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="bri">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="briProtocol" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XBriProtocol in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="calledPlan" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="calledPri" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="callerIDDN" type="axlapi:XDirectoryNumber" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="callingPartySelection" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="callingPlan" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="callingPri" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="clockReference" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XClockReference in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="csuParam" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XCSUParam in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="direction" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="encode" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XEncode in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="fdlChannel" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XFDLChannel in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="framing" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XFraming in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="prefix" type="xsd:string" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="presentationBit" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="stableIn4" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="trunkPadRx" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="trunkPadTx" type="xsd:string" nillable="false" minOccurs="0">
                    <!--This field is of the type axl:XTrunkPad in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="trunkLevel" type="xsd:string" nillable="false" minOccurs="0">
                    <!--This field is of the type axl:XTrunkLevel in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="yellowAlarm" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XYellowAlarm in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="zeroSuppression" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XZeroSuppression in AXLEnums.xsd-->
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="t1">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="trunkSelectionOrder" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XTrunkSelectionOrder in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="clockReference" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XClockReference in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="csuParam" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XCSUParam in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="digitSending" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XDigitSending in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="encode" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XEncode in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="fdlChannel" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XFDLChannel in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="ports" type="axlapi:XT1PortList" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="yellowAlarm" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XYellowAlarm in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="zeroSuppression" type="xsd:string" minOccurs="0">
                    <!--This field is of the type axl:XZeroSuppression in AXLEnums.xsd-->
                  </xsd:element>
                  <xsd:element name="sMDIBasePort" type="xsd:positiveInteger" nillable="false" minOccurs="0">
                  </xsd:element>
                  <xsd:element name="handleDTMFPrecedenceSignals" type="xsd:boolean" minOccurs="0" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cdpnTransformationCSS" type="axlapi:XCallingSearchSpace" nillable="true">
            </xsd:element>
            <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="enableProtectedFacilityIE" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
            </xsd:element>
            <xsd:element name="geoLocationName" type="axlapi:String100" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter" />
            <xsd:element name="geoLocationFilterName" type="axlapi:String100" />
          </xsd:choice>
          <xsd:element name="sendGeoLocation" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="v150" type="xsd:boolean" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationNationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationNationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationInternationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationInternationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationSubscriberCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationSubscriberCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="nationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="internationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="subscriberStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformNationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformInternationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformUnknownCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformSubscriberCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateGatewayEndpoint" type="axlapi:UpdateGatewayEndpointReq" />
  <xsd:element name="updateGatewayEndpointResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getGatewayEndpoint" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetGatewayEndpointRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="device" type="axlapi:XGateway" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGatewayEndpointResponse" type="axlapi:GetGatewayEndpointRes" />
  <xsd:element name="removeGatewayEndpoint" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeGatewayEndpointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRouteFilterReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="routeFilter" type="axlapi:XRouteFilter" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRouteFilter" type="axlapi:AddRouteFilterReq" />
  <xsd:element name="addRouteFilterResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRouteFilterReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="dialPlanId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="dialPlanName" type="xsd:Name">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XRouteFilterMember" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRouteFilter" type="axlapi:UpdateRouteFilterReq" />
  <xsd:element name="updateRouteFilterResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getRouteFilter" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetRouteFilterRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="routeFilter" type="axlapi:XRouteFilter" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRouteFilterResponse" type="axlapi:GetRouteFilterRes" />
  <xsd:element name="removeRouteFilter" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeRouteFilterResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetServiceParameterReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
            <xsd:sequence>
              <xsd:element name="name" type="axlapi:String50">
              </xsd:element>
              <xsd:choice>
                <xsd:element name="processNodeId" type="axlapi:XUUID" />
                <xsd:element name="processNodeName" type="axlapi:String50" />
              </xsd:choice>
              <xsd:element name="service" type="xsd:string">
                <!--This field is of the type axl:XService in AXLEnums.xsd-->
              </xsd:element>
            </xsd:sequence>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getServiceParameter" type="axlapi:GetServiceParameterReq" />
  <xsd:complexType name="GetServiceParameterRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="serviceParameter" type="axlapi:XProcessConfig" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getServiceParameterResponse" type="axlapi:GetServiceParameterRes" />
  <xsd:complexType name="UpdateServiceParameterReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetServiceParameterReq">
        <xsd:sequence>
          <xsd:element name="newValue" type="axlapi:String1024" nillable="true">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateServiceParameter" type="axlapi:UpdateServiceParameterReq" />
  <xsd:element name="updateServiceParameterResponse" type="axlapi:StandardResponse">
  </xsd:element>
  <xsd:complexType name="AddLocationReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="location" type="axlapi:XLocation" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addLocation" type="axlapi:AddLocationReq" />
  <xsd:element name="addLocationResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateLocationReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="kbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="videoKbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="relatedLocations" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="relatedLocation" type="axlapi:XLocationRelationship" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateLocation" type="axlapi:UpdateLocationReq" />
  <xsd:element name="updateLocationResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getLocation" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetLocationRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="location" type="axlapi:XLocation" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getLocationResponse" type="axlapi:GetLocationRes" />
  <xsd:element name="removeLocation" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeLocationResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCMCInfoReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="cmcInfo" type="axlapi:XCMCInfo" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCMCInfo" type="axlapi:AddCMCInfoReq" />
  <xsd:element name="addCMCInfoResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCMCInfoReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="code" type="axlapi:String16">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newCode" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String16" nillable="true" minOccurs="0" />
          <xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCMCInfo" type="axlapi:UpdateCMCInfoReq" />
  <xsd:element name="updateCMCInfoResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="CMCInfoReq" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="code" type="axlapi:String16" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCMCInfo" type="axlapi:CMCInfoReq" />
  <xsd:complexType name="GetCMCInfoRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="cmcInfo" type="axlapi:XCMCInfo" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCMCInfoResponse" type="axlapi:GetCMCInfoRes" />
  <xsd:element name="removeCMCInfo" type="axlapi:CMCInfoReq" />
  <xsd:element name="removeCMCInfoResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddFACInfoReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="facInfo" type="axlapi:XFACInfo" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addFACInfo" type="axlapi:AddFACInfoReq" />
  <xsd:element name="addFACInfoResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateFACInfoReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="code" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateFACInfo" type="axlapi:UpdateFACInfoReq" />
  <xsd:element name="updateFACInfoResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getFACInfo" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetFACInfoRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="facInfo" type="axlapi:XFACInfo" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getFACInfoResponse" type="axlapi:GetFACInfoRes" />
  <xsd:element name="removeFACInfo" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeFACInfoResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRegionReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="region">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="axlapi:XRegion">
                  <xsd:sequence minOccurs="0">
                    <xsd:element name="defaultCodec" type="xsd:string" default="G.711" nillable="false" minOccurs="0" />
                    <!--This field is of the type axl:XBandwidth in AXLEnums.xsd-->
                  </xsd:sequence>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRegion" type="axlapi:AddRegionReq" />
  <xsd:element name="addRegionResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRegionReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String50">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="relatedRegions" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="relatedRegion" type="axlapi:XRegionRelationship" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRegion" type="axlapi:UpdateRegionReq" />
  <xsd:element name="updateRegionResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeRegion" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeRegionResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getRegion" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetRegionRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="region" type="axlapi:XRegion" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRegionResponse" type="axlapi:GetRegionRes" />
  <xsd:complexType name="UpdateRegionMatrixReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="uuid" type="axlapi:XUUID">
          </xsd:element>
          <xsd:element name="bandwidth" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XBandwidth in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="videoBandwidth" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="lossyNetwork" type="axlapi:XLossyNetwork" nillable="true" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRegionMatrix" type="axlapi:UpdateRegionMatrixReq" />
  <xsd:element name="updateRegionMatrixResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddMGCPReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newMGCP" type="axlapi:XMGCP" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMGCP" type="axlapi:AddMGCPReq" />
  <xsd:element name="addMGCPResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddMGCPUnitReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="domainName" type="axlapi:String64">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="unit" type="axlapi:XMGCPUnit" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMGCPUnit" type="axlapi:AddMGCPUnitReq" />
  <xsd:element name="addMGCPUnitResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddMGCPSubunitReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="domainName" type="axlapi:String64">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="unit">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="subunit" type="axlapi:XMGCPSubunit" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMGCPSubunit" type="axlapi:AddMGCPSubunitReq" />
  <xsd:element name="addMGCPSubunitResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddMGCPEndpointReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="domainName" type="axlapi:String64">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="unit">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="subunit">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="endpoint">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="axlapi:XMGCPEndpoint">
                  <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMGCPEndpoint" type="axlapi:AddMGCPEndpointReq" />
  <xsd:element name="addMGCPEndpointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetMGCPReq" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="domainName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMGCP" type="axlapi:GetMGCPReq" />
  <xsd:complexType name="GetMGCPRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mgcp" type="axlapi:XMGCP" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMGCPResponse" type="axlapi:GetMGCPRes" />
  <xsd:complexType name="RemoveMGCPReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="domainName" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeMGCP" type="axlapi:RemoveMGCPReq" />
  <xsd:element name="removeMGCPResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveMGCPUnitReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="domainName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="unit" nillable="false">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeMGCPUnit" type="axlapi:RemoveMGCPUnitReq" />
  <xsd:element name="removeMGCPUnitResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveMGCPSubunitReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="domainName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="unit" nillable="false">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="subunit" nillable="false">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeMGCPSubunit" type="axlapi:RemoveMGCPSubunitReq" />
  <xsd:element name="removeMGCPSubunitResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveMGCPEndpointReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
            <xsd:element name="domainName" type="xsd:string" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="unit" nillable="false">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="subunit" nillable="false">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="endpoint" nillable="false">
            <xsd:complexType>
              <xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeMGCPEndpoint" type="axlapi:RemoveMGCPEndpointReq" />
  <xsd:element name="removeMGCPEndpointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateMGCPReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="domainName" type="axlapi:String64">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newDomainName" type="axlapi:String64" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String100" minOccurs="0">
          </xsd:element>
          <xsd:element name="product" type="xsd:string" minOccurs="0">
            <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="model" type="xsd:string" minOccurs="0">
            <!--This field is of the type axl:XModel in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callManagerGroup" type="axlapi:XCallManagerGroup" minOccurs="0">
            </xsd:element>
            <xsd:element name="callManagerGroupName" type="axlapi:String50" minOccurs="0">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="scratch" type="axlapi:Name50" minOccurs="0" />
          <xsd:element name="vendorConfig" type="axlapi:XVendorConfig" minOccurs="0" />
          <xsd:element name="versionStamp" type="axlapi:String128" minOccurs="0" />
          <xsd:element name="loadInformation" type="axlapi:XLoadInformation" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateMGCP" type="axlapi:UpdateMGCPReq" />
  <xsd:element name="updateMGCPResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCallManagerReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="callManager" type="axlapi:XCallManager" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addCallManager" type="axlapi:AddCallManagerReq" />
  <xsd:element name="addCallManagerResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCallManagerReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="autoRegistration" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="startDN" type="axlapi:XDirectoryNumber" minOccurs="0">
                </xsd:element>
                <xsd:element name="endDN" type="axlapi:XDirectoryNumber" minOccurs="0">
                </xsd:element>
                <xsd:element name="nextDN" type="axlapi:XDirectoryNumber" minOccurs="0">
                </xsd:element>
                <xsd:choice minOccurs="0">
                  <xsd:element name="routePartitionId" type="axlapi:XUUID" />
                  <xsd:element name="routePartitionName" type="axlapi:String50" />
                </xsd:choice>
                <xsd:element name="e164Mask" type="axlapi:String50" minOccurs="0">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ports" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="ethernetPhonePort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
                </xsd:element>
                <xsd:element name="mgcpPorts" minOccurs="0">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="listen" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
                      </xsd:element>
                      <xsd:element name="keepAlive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCallManager" type="axlapi:UpdateCallManagerReq" />
  <xsd:element name="updateCallManagerResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getCallManager" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetCallManagerRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="callManager" type="axlapi:XCallManager" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCallManagerResponse" type="axlapi:GetCallManagerRes" />
  <xsd:element name="removeCallManager" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeCallManagerResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getMobileSmartClientProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetMobileSmartClientProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mobileSmartClientProfile" type="axlapi:XMobileSmartClientProfile" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMobileSmartClientProfileResponse" type="axlapi:GetMobileSmartClientProfileRes" />
  <xsd:complexType name="AddProcessNodeReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="processNode" type="axlapi:XProcessNode" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addProcessNode" type="axlapi:AddProcessNodeReq" />
  <xsd:element name="addProcessNodeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateProcessNodeReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:Name255" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0">
          </xsd:element>
          <xsd:element name="mac" type="axlapi:XMacAddress" minOccurs="0">
          </xsd:element>
          <xsd:element name="IPv6Name" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateProcessNode" type="axlapi:UpdateProcessNodeReq" />
  <xsd:element name="updateProcessNodeResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getProcessNode" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetProcessNodeRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="processNode" type="axlapi:XProcessNode" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getProcessNodeResponse" type="axlapi:GetProcessNodeRes" />
  <xsd:element name="removeProcessNode" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeProcessNodeResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="ListAllProcessNodesReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listAllProcessNodes" type="axlapi:ListAllProcessNodesReq" />
  <xsd:complexType name="ListAllProcessNodesRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="processNode" type="axlapi:XProcessNode" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listAllProcessNodesResponse" type="axlapi:ListAllProcessNodesRes" />
  <xsd:complexType name="ListProcessNodesByServiceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="service" type="xsd:string" />
          <!--This field is of the type axl:XService in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listProcessNodesByService" type="axlapi:ListProcessNodesByServiceReq" />
  <xsd:complexType name="ListProcessNodesByServiceRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="processNode" type="axlapi:XProcessNode" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listProcessNodesByServiceResponse" type="axlapi:ListProcessNodesByServiceRes" />
  <xsd:complexType name="GetProcessNodeServiceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
            <xsd:sequence>
              <xsd:choice>
                <xsd:element name="processNodeId" type="axlapi:XUUID" />
                <xsd:element name="processNodeName" type="axlapi:String50" />
              </xsd:choice>
              <xsd:element name="service" type="xsd:string">
                <!--This field is of the type axl:XService in AXLEnums.xsd-->
              </xsd:element>
            </xsd:sequence>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getProcessNodeService" type="axlapi:GetProcessNodeServiceReq" />
  <xsd:complexType name="GetProcessNodeServiceRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="processNodeService" type="axlapi:XProcessNodeService" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getProcessNodeServiceResponse" type="axlapi:GetProcessNodeServiceRes" />
  <xsd:complexType name="UpdateProcessNodeServiceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetProcessNodeServiceReq">
        <xsd:sequence>
          <xsd:element name="fileName" type="axlapi:String255" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="traceLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="userCategories" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="enable" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="numFiles" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="numLines" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="numMinutes" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="includeNonDeviceTraces" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="useXML" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="serverName" type="axlapi:String255" nillable="true" minOccurs="0" />
          <xsd:element name="deviceNameMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="deviceTypeMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="fileTraceFlag" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="outputDebugStringFlag" type="xsd:boolean" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateProcessNodeService" type="axlapi:UpdateProcessNodeServiceReq" />
  <xsd:element name="updateProcessNodeServiceResponse" type="axlapi:StandardResponse" />
  <xsd:element name="listRoutePartitionByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListRoutePartitionRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="routePartition" type="axlapi:XRoutePartition" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listRoutePartitionByNameResponse" type="axlapi:ListRoutePartitionRes">
  </xsd:element>
  <xsd:element name="listDevicePoolByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListDevicePoolRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="devicePool" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String50" />
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listDevicePoolByNameResponse" type="axlapi:ListDevicePoolRes">
  </xsd:element>
  <xsd:element name="listPhoneTemplateByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListPhoneTemplateRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="phoneTemplate" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String50" />
                      <xsd:element name="model" type="xsd:string" />
                      <!--This field is of the type axl:XModel in AXLEnums.xsd-->
                      <xsd:element name="protocol" type="xsd:string" />
                      <!--This field is of the type axl:XDeviceProtocol in AXLEnums.xsd-->
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listPhoneTemplateByNameResponse" type="axlapi:ListPhoneTemplateRes">
  </xsd:element>
  <xsd:complexType name="ListDeviceByNameAndClassReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListBySearchString">
        <xsd:sequence>
          <xsd:element name="class" type="xsd:string" />
          <!--This field is of the type axl:XClass in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listDeviceByNameAndClass" type="axlapi:ListDeviceByNameAndClassReq" />
  <xsd:complexType name="ListDeviceRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String50" />
                      <xsd:element name="product" type="xsd:string" />
                      <!--This field is of the type axl:XProduct in AXLEnums.xsd-->
                      <xsd:element name="model" type="xsd:string" />
                      <!--This field is of the type axl:XModel in AXLEnums.xsd-->
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listDeviceByNameAndClassResponse" type="axlapi:ListDeviceRes">
  </xsd:element>
  <xsd:complexType name="ListDeviceByServiceNameReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:ListBySearchString">
        <xsd:sequence>
          <xsd:element name="serviceName" type="xsd:string" />
          <!--This field is of the type axl:XClass in AXLEnums.xsd-->
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listDeviceByServiceName" type="axlapi:ListDeviceByNameAndClassReq" />
  <xsd:complexType name="ListDeviceByServiceNameRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String50" />
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listDeviceByServiceNameResponse" type="axlapi:ListDeviceByServiceNameRes">
  </xsd:element>
  <xsd:element name="listMOHAudioSourceByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListMOHAudioSourceRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mohAudioSource" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="sourceId" type="axlapi:XMOHAudioSourceId" />
                      <xsd:element name="name" type="axlapi:String50" />
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listMOHAudioSourceByNameResponse" type="axlapi:ListMOHAudioSourceRes">
  </xsd:element>
  <xsd:complexType name="GetMOHAudioSourceByIDAndSourceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          <xsd:element name="sourceId" type="axlapi:XMOHAudioSourceId" nillable="false" />
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="UpdateMOHAudioSourceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:GetMOHAudioSourceByIDAndSourceReq">
        <xsd:sequence>
          <xsd:element name="name" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="sourceFile" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="multicast" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="repeat" type="xsd:boolean" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateMOHAudioSource" type="axlapi:UpdateMOHAudioSourceReq">
  </xsd:element>
  <xsd:element name="updateMOHAudioSourceResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getMOHAudioSource" type="axlapi:GetMOHAudioSourceByIDAndSourceReq">
  </xsd:element>
  <xsd:complexType name="GetMOHAudioSourceRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mohAudioSource" type="axlapi:XMOHAudioSource" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMOHAudioSourceResponse" type="axlapi:GetMOHAudioSourceRes" />
  <xsd:element name="removeMOHAudioSource" type="axlapi:GetMOHAudioSourceByIDAndSourceReq">
  </xsd:element>
  <xsd:element name="removeMOHAudioSourceResponse" type="axlapi:StandardResponse" />
  <xsd:element name="listMediaResourceListByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListMediaResourceListRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mediaResourceList" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String50" />
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listMediaResourceListByNameResponse" type="axlapi:ListMediaResourceListRes">
  </xsd:element>
  <xsd:complexType name="AddMediaResourceListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="mediaResourceList" type="axlapi:XMediaResourceList" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMediaResourceList" type="axlapi:AddMediaResourceListReq" />
  <xsd:element name="addMediaResourceListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getMediaResourceList" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetMediaResourceListRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mediaResourceList" type="axlapi:XMediaResourceList" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMediaResourceListResponse" type="axlapi:GetMediaResourceListRes" />
  <xsd:element name="removeMediaResourceList" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeMediaResourceListResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateMediaResourceListReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0" />
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XMediaResourceListMember" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateMediaResourceList" type="axlapi:UpdateMediaResourceListReq" />
  <xsd:element name="updateMediaResourceListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="listMediaResourceGroupByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListMediaResourceGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mediaResourceGroup" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String50" />
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listMediaResourceGroupByNameResponse" type="axlapi:ListMediaResourceGroupRes">
  </xsd:element>
  <xsd:complexType name="AddMediaResourceGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="mediaResourceGroup" type="axlapi:XMediaResourceGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMediaResourceGroup" type="axlapi:AddMediaResourceGroupReq" />
  <xsd:element name="addMediaResourceGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getMediaResourceGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetMediaResourceGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mediaResourceGroup" type="axlapi:XMediaResourceGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMediaResourceGroupResponse" type="axlapi:GetMediaResourceGroupRes" />
  <xsd:element name="removeMediaResourceGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeMediaResourceGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateMediaResourceGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="multicast" type="xsd:boolean" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="member" type="axlapi:XMediaResourceGroupMember" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateMediaResourceGroup" type="axlapi:UpdateMediaResourceGroupReq" />
  <xsd:element name="updateMediaResourceGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddUserGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userGroup" type="axlapi:XUserGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addUserGroup" type="axlapi:AddUserGroupReq" />
  <xsd:element name="addUserGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getUserGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetUserGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="userGroup" type="axlapi:XUserGroup" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getUserGroupResponse" type="axlapi:GetUserGroupRes" />
  <xsd:element name="removeUserGroup" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeUserGroupResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateUserGroupReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String128" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="members" nillable="true" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="member" type="axlapi:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:sequence minOccurs="0">
              <xsd:element name="addMembers" minOccurs="0">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="member" type="axlapi:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="removeMembers" minOccurs="0">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="member" type="axlapi:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateUserGroup" type="axlapi:UpdateUserGroupReq" />
  <xsd:element name="updateUserGroupResponse" type="axlapi:StandardResponse" />
  <xsd:element name="listLocationByName" type="axlapi:ListBySearchString" />
  <xsd:complexType name="ListLocationRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="location" type="axlapi:XLocation" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listLocationByNameResponse" type="axlapi:ListLocationRes" />
  <xsd:element name="listAARGroupByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListAARGroupRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="aarGroup" type="axlapi:XAARNeighborhood" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listAARGroupByNameResponse" type="axlapi:ListAARGroupRes">
  </xsd:element>
  <xsd:element name="listVoiceMailProfileByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListVoiceMailProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="voiceMailProfile" type="axlapi:XVoiceMailProfile" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listVoiceMailProfileByNameResponse" type="axlapi:ListVoiceMailProfileRes">
  </xsd:element>
  <xsd:element name="listGatekeeperByName" type="axlapi:ListBySearchString">
  </xsd:element>
  <xsd:complexType name="ListGatekeeperRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="gatekeeper" minOccurs="0" maxOccurs="unbounded">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="name" type="axlapi:String128" />
                    </xsd:sequence>
                    <xsd:attribute name="uuid" type="axlapi:XUUID" use="required" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="listGatekeeperByNameResponse" type="axlapi:ListGatekeeperRes">
  </xsd:element>
  <xsd:complexType name="AddGatekeeperReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="gatekeeper" type="axlapi:XGatekeeper" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addGatekeeper" type="axlapi:AddGatekeeperReq" />
  <xsd:element name="addGatekeeperResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getGatekeeper" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetGatekeeperRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="gatekeeper" type="axlapi:XGatekeeper" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGatekeeperResponse" type="axlapi:GetGatekeeperRes" />
  <xsd:element name="removeGatekeeper" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeGatekeeperResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateGatekeeperReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="rrqTimeToLive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="retryTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="enableDevice" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateGatekeeper" type="axlapi:UpdateGatekeeperReq" />
  <xsd:element name="updateGatekeeperResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddH323PhoneReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="phone" type="axlapi:XH323Phone" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addH323Phone" type="axlapi:AddH323PhoneReq" />
  <xsd:element name="addH323PhoneResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddH323GatewayReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="gateway" type="axlapi:XH323Gateway" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addH323Gateway" type="axlapi:AddH323GatewayReq" />
  <xsd:element name="addH323GatewayResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddH323TrunkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="trunk" type="axlapi:XH323Trunk" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addH323Trunk" type="axlapi:AddH323TrunkReq" />
  <xsd:element name="addH323TrunkResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getH323Phone" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetH323PhoneRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="phone" type="axlapi:XH323Phone" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getH323PhoneResponse" type="axlapi:GetH323PhoneRes" />
  <xsd:element name="getH323Gateway" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetH323GatewayRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="gateway" type="axlapi:XH323Gateway" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getH323GatewayResponse" type="axlapi:GetH323GatewayRes" />
  <xsd:element name="getH323Trunk" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetH323TrunkRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="trunk" type="axlapi:XH323Trunk" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getH323TrunkResponse" type="axlapi:GetH323TrunkRes" />
  <xsd:element name="removeH323Phone" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeH323PhoneResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeH323Gateway" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeH323GatewayResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeH323Trunk" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeH323TrunkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateH323DeviceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence minOccurs="0">
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String128" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false" minOccurs="0" />
            <xsd:element name="devicePoolName" type="axlapi:String50" nillable="false" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="commonDeviceConfigName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="networkLocation" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="locationName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mediaResourceListId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="mediaResourceListName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="automatedAlternateRoutingCSSId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhoodId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="packetCaptureMode" type="xsd:string" nillable="true" minOccurs="0" />
          <!--This field is of the type axl:XPacketCaptureMode in AXLEnums.xsd-->
          <xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="srtpAllowed" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
            </xsd:element>
            <xsd:element name="geoLocationName" type="axlapi:String100" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter">
            </xsd:element>
            <xsd:element name="geoLocationFilterName" type="axlapi:String100" />
          </xsd:choice>
          <xsd:element name="sendGeoLocation" type="xsd:boolean" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="cdpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="waitForFarEndH245TerminalSet" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="mtpPreferredCodec" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XSIPCodec in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="callerIdDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="callingPartySelection" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
          <xsd:element name="callingLineIdPresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="displayIEDelivery" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="redirectOutboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="redirectInboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="enableInboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="enableOutboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="codecForOutboundFaststart" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XMediaPayload in AXLEnums.xsd-->
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="UpdateH323PhoneReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateH323DeviceReq">
        <xsd:sequence minOccurs="0">
          <xsd:element name="hlogStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="subscribeCallingSearchSpaceId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="ownerUserId" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="signalingPort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="gatekeeperInfo" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0">
                  <xsd:element name="gatekeeperId" type="axlapi:XUUID" nillable="false" minOccurs="0" />
                  <xsd:element name="gatekeeperName" type="axlapi:String50" nillable="false" minOccurs="0" />
                </xsd:choice>
                <xsd:element name="e164" type="axlapi:String50" nillable="false" minOccurs="0" />
                <xsd:element name="technologyPrefix" type="axlapi:String50" minOccurs="0" />
                <xsd:element name="zone" type="axlapi:String50" minOccurs="0" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="line" type="axlapi:XLine" nillable="false" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateH323Phone" type="axlapi:UpdateH323PhoneReq" />
  <xsd:element name="updateH323PhoneResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateH323GatewayReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateH323DeviceReq">
        <xsd:sequence minOccurs="0">
          <xsd:element name="AllowH235PassThrough" type="xsd:boolean" default="false" minOccurs="0" />
          <xsd:element name="tunneledProtocol" type="xsd:string" minOccurs="0" />
          <!--This field is of the type axl:XTunneledProtocol in AXLEnums.xsd-->
          <xsd:element name="ASN1ROSEOIDEncoding" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="QSIGVariant" type="axlapi:String50" default="0" minOccurs="0">
          </xsd:element>
          <xsd:element name="nationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="internationalPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="subscriberPrefix" type="axlapi:String16" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="significantDigits" nillable="false" minOccurs="0">
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:nonNegativeInteger" />
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="prefixDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="calledPartyIENumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="callingPartyIENumberType" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPriOfNumber in AXLEnums.xsd-->
          <xsd:element name="calledNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="callingNumberingPlan" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNumberingPlan in AXLEnums.xsd-->
          <xsd:element name="licensedCapacity" type="xsd:nonNegativeInteger" default="0" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationNationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationNationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationInternationalCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationInternationalCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationSubscriberCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationSubscriberCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="nationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="internationalStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="subscriberStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformNationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformInternationalCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformUnknownCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformSubscriberCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateH323Gateway" type="axlapi:UpdateH323GatewayReq" />
  <xsd:element name="updateH323GatewayResponse" type="axlapi:StandardResponse" nillable="false" />
  <xsd:complexType name="UpdateH323TrunkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:UpdateH323GatewayReq">
        <xsd:sequence minOccurs="0">
          <xsd:element name="pathReplacementSupport" type="xsd:boolean" default="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="gatekeeperInfo" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence minOccurs="0">
                  <xsd:choice minOccurs="0">
                    <xsd:element name="gatekeeperId" type="axlapi:XUUID" nillable="false" minOccurs="0" />
                    <xsd:element name="gatekeeperName" type="axlapi:String50" nillable="false" minOccurs="0" />
                  </xsd:choice>
                  <xsd:element name="terminal" type="xsd:string" nillable="false" minOccurs="0" />
                  <!--This field is of the type axl:XTerminal in AXLEnums.xsd-->
                  <xsd:element name="technologyPrefix" type="axlapi:String50" minOccurs="0" />
                  <xsd:element name="zone" type="axlapi:String50" minOccurs="0" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="remoteServerInfo" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence minOccurs="0">
                  <xsd:element name="server1" type="axlapi:String255" nillable="false" minOccurs="0" />
                  <xsd:element name="server2" type="axlapi:String255" minOccurs="0" />
                  <xsd:element name="server3" type="axlapi:String255" minOccurs="0" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:choice>
          <xsd:sequence minOccurs="0">
            <xsd:element name="ictPassingPrecedenceLevelThroughUUIE" type="xsd:boolean" nillable="false" minOccurs="0" />
            <xsd:element name="ictSecurityAccessLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
            </xsd:element>
          </xsd:sequence>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateH323Trunk" type="axlapi:UpdateH323TrunkReq" nillable="false" />
  <xsd:element name="updateH323TrunkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="ExecuteSQLQueryReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="sql" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddSIPTrunkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="trunk" type="axlapi:XSIPTrunk" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addSIPTrunk" type="axlapi:AddSIPTrunkReq" />
  <xsd:element name="addSIPTrunkResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getSIPTrunk" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetSIPTrunkBase">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="trunk" type="axlapi:XSIPTrunk" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSIPTrunkResponse" type="axlapi:GetSIPTrunkBase" />
  <xsd:element name="removeSIPTrunk" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeSIPTrunkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateSIPTrunkReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence minOccurs="0">
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String128" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID" nillable="false" minOccurs="0" />
            <xsd:element name="devicePoolName" type="axlapi:String50" nillable="false" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="commonDeviceConfigId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="commonDeviceConfigName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="networkLocation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XNetworkLocation in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="locationId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="locationName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mediaResourceListId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="mediaResourceListName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="automatedAlternateRoutingCSSId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="automatedAlternateRoutingCSSName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="aarNeighborhoodId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="aarNeighborhoodName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="mlppIndicationStatus" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="preemption" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XPreemption in AXLEnums.xsd-->
          </xsd:element>
          <xsd:element name="useTrustedRelayPoint" type="xsd:string" default="Default" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="subscribeCallingSearchSpaceId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="subscribeCallingSearchSpaceName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="rerouteCallingSearchSpaceId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="rerouteCallingSearchSpaceName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="referCallingSearchSpaceId" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="referCallingSearchSpaceName" type="axlapi:String50" minOccurs="0" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationUnknownCSS" type="axlapi:XCallingSearchSpace" nillable="true" />
            <xsd:element name="cgpnTransformationUnknownCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="cdpnTransformationCSSId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="cdpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="unknownPrefix" type="axlapi:String16" nillable="false" minOccurs="0" />
          <xsd:element name="destinationaddress" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="destAddrIsSRV" type="xsd:boolean" minOccurs="0">
          </xsd:element>
          <xsd:element name="destinationport" type="xsd:integer" default="0" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="securityProfileId" type="axlapi:XUUID" />
            <xsd:element name="securityProfileName" type="axlapi:UniqueString50" />
          </xsd:choice>
          <xsd:element name="tkSipCodec" type="xsd:string" nillable="false" minOccurs="0">
            <!--This field is of the type axl:XSIPCodec in AXLEnums.xsd-->
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="sipProfileId" type="axlapi:XUUID" />
            <xsd:element name="sipProfileName" type="axlapi:UniqueString50" />
          </xsd:choice>
          <xsd:element name="sigDigits" minOccurs="0">
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:nonNegativeInteger">
                  <xsd:attribute name="enable" type="xsd:boolean" use="optional" />
                </xsd:extension>
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="connectedNamePresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="connectedPartyIdPresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingPartySelection" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XCallingPartySelection in AXLEnums.xsd-->
          <xsd:element name="callingname" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="callingLineIdPresentation" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XPresentationBit in AXLEnums.xsd-->
          <xsd:element name="prefixDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="callerName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="callerIdDN" type="axlapi:String50" minOccurs="0" />
          <xsd:element name="acceptInboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="acceptOutboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="srtpAllowed" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="srtpFallbackAllowed" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="isPaiEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="sipPrivacy" type="axlapi:XSipPrivacy" default="Default" nillable="false" minOccurs="0" />
          <xsd:element name="isRpidEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="sipAssertedType" type="axlapi:XSipAssertedType" default="Default" nillable="false" minOccurs="0" />
          <xsd:element name="licensedCapacity" type="xsd:nonNegativeInteger" default="0" minOccurs="0" />
          <xsd:element name="destinationAddressIPv6" type="xsd:string" minOccurs="0" />
          <xsd:element name="DTMFSignalingMethod" type="axlapi:XDTMFSignaling" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="geoLocation" type="axlapi:XGeoLocation">
            </xsd:element>
            <xsd:element name="geoLocationName" type="axlapi:String100" />
          </xsd:choice>
          <xsd:element name="sendGeoLocation" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="unknownStripDigits" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0" />
          <xsd:element name="useDevicePoolCgpnTransformUnknownCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateSIPTrunk" type="axlapi:UpdateSIPTrunkReq" nillable="false" />
  <xsd:element name="updateSIPTrunkResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddSIPRealmReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newSIPRealm" type="axlapi:XSIPRealm">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addSIPRealm" type="axlapi:AddSIPRealmReq" />
  <xsd:element name="addSIPRealmResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveSIPRealmReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="realm" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeSIPRealm" type="axlapi:RemoveSIPRealmReq" />
  <xsd:element name="removeSIPRealmResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateSIPRealmReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="xsd:string" nillable="false" />
            <xsd:element name="realm" type="xsd:string" nillable="false" />
          </xsd:choice>
          <xsd:element name="newRealm" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="userid" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="digestCredentials" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateSIPRealm" type="axlapi:UpdateSIPRealmReq" />
  <xsd:element name="updateSIPRealmResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetSIPRealmReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="realm" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSIPRealm" type="axlapi:GetSIPRealmReq" />
  <xsd:complexType name="GetSIPRealmRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="sipRealm" type="axlapi:XSIPRealm" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSIPRealmResponse" type="axlapi:GetSIPRealmRes" />
  <xsd:complexType name="StandardSIPRealmResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddSIPProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="sipProfile" type="axlapi:XSIPProfile" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addSIPProfile" type="axlapi:AddSIPProfileReq" />
  <xsd:element name="addSIPProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateSIPProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:UniqueString255" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:UniqueString255" nillable="false" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String100" nillable="true" minOccurs="0" />
          <xsd:element name="defaultTelephonyEventPayloadType" type="xsd:long" default="101" nillable="false" minOccurs="0" />
          <xsd:element name="redirectByApplication" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="ringing180" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="timerInvite" type="xsd:long" default="180" nillable="false" minOccurs="0" />
          <xsd:element name="timerRegisterDelta" type="xsd:long" default="5" nillable="false" minOccurs="0" />
          <xsd:element name="timerRegister" type="xsd:long" default="3600" nillable="false" minOccurs="0" />
          <xsd:element name="timerT1" type="xsd:long" default="500" nillable="false" minOccurs="0" />
          <xsd:element name="timerT2" type="xsd:long" default="4000" nillable="false" minOccurs="0" />
          <xsd:element name="retryInvite" type="xsd:long" default="6" nillable="false" minOccurs="0" />
          <xsd:element name="retryNotInvite" type="xsd:long" default="10" nillable="false" minOccurs="0" />
          <xsd:element name="startMediaPort" type="xsd:long" default="16384" nillable="false" minOccurs="0" />
          <xsd:element name="stopMediaPort" type="xsd:long" default="32766" nillable="false" minOccurs="0" />
          <xsd:element name="callpickupURI" type="axlapi:Name128" default="x-cisco-serviceuri-pickup" nillable="false" minOccurs="0" />
          <xsd:element name="callpickupListURI" type="axlapi:String128" default="x-cisco-serviceuri-opickup" nillable="false" minOccurs="0" />
          <xsd:element name="callpickupGroupURI" type="axlapi:String128" default="x-cisco-serviceuri-gpickup" nillable="false" minOccurs="0" />
          <xsd:element name="meetmeServiceURI" type="axlapi:String128" default="x-cisco-serviceuri-meetme" nillable="false" minOccurs="0" />
          <xsd:element name="userInfo" type="axlapi:XZzuserInfo" default="None" nillable="false" minOccurs="0" />
          <xsd:element name="dtmfDbLevel" type="axlapi:XZzdtmfDbLevel" default="Nominal" nillable="false" minOccurs="0" />
          <xsd:element name="callHoldRingback" type="axlapi:XZzpreff" default="Off" nillable="false" minOccurs="0" />
          <xsd:element name="anonymousCallBlock" type="axlapi:XZzpreff" default="Off" nillable="false" minOccurs="0" />
          <xsd:element name="callerIdBlock" type="axlapi:XZzpreff" default="Off" nillable="false" minOccurs="0" />
          <xsd:element name="dndControl" type="axlapi:XZzdndcontrol" default="Admin" nillable="false" minOccurs="0" />
          <xsd:element name="telnetLevel" type="axlapi:XTelnetLevel" default="Disabled" nillable="false" minOccurs="0" />
          <xsd:element name="timerKeepAlive" type="xsd:long" default="120" nillable="false" minOccurs="0" />
          <xsd:element name="timerSubscribe" type="xsd:long" default="120" nillable="false" minOccurs="0" />
          <xsd:element name="timerSubscribeDelta" type="xsd:long" default="5" nillable="false" minOccurs="0" />
          <xsd:element name="maxRedirects" type="xsd:long" default="70" nillable="false" minOccurs="0" />
          <xsd:element name="timerOffhookToFirstDigit" type="xsd:long" default="15000" nillable="false" minOccurs="0" />
          <xsd:element name="callForwardURI" type="axlapi:String128" default="x-cisco-serviceuri-cfwdall" nillable="false" minOccurs="0" />
          <xsd:element name="abbreviatedDialURI" type="axlapi:String128" default="x-cisco-serviceuri-abbrdial" nillable="false" minOccurs="0" />
          <xsd:element name="confJoinEnable" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="rfc2543Hold" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="semiAttendedTransfer" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:element name="enableVAD" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="stutterMsgWaiting" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="callStats" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="t38Invite" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:element name="rerouteIncomingRequest" type="axlapi:XSIPReroute" default="Never" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="resourcePriorityNamespaceList" type="axlapi:XResourcePriorityNamespaceList" nillable="true">
            </xsd:element>
            <xsd:element name="resourcePriorityNamespaceListName" type="axlapi:Name50" default="Null" nillable="true" />
          </xsd:choice>
          <xsd:element name="enableAnatForEarlyOfferCalls" type="xsd:string" minOccurs="0" />
          <xsd:element name="gClear" type="axlapi:XGClear" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateSIPProfile" type="axlapi:UpdateSIPProfileReq" />
  <xsd:element name="updateSIPProfileResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getSIPProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetSIPProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="sipProfile" type="axlapi:XSIPProfile" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSIPProfileResponse" type="axlapi:GetSIPProfileRes" />
  <xsd:element name="removeSIPProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeSIPProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRecordingProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newRecordingProfile" type="axlapi:XRecordingProfile">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRecordingProfile" type="axlapi:AddRecordingProfileReq" />
  <xsd:element name="addRecordingProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="RemoveRecordingProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="name" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeRecordingProfile" type="axlapi:RemoveRecordingProfileReq" />
  <xsd:element name="removeRecordingProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRecordingProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="xsd:string" nillable="false" />
            <xsd:element name="name" type="xsd:string" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0" maxOccurs="0">
            <xsd:element name="recordingCSS" type="axlapi:XCallingSearchSpace" nillable="true">
            </xsd:element>
            <xsd:element name="recordingCSSName" type="axlapi:UniqueName50" nillable="true" />
          </xsd:choice>
          <xsd:element name="recorderDestination" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRecordingProfile" type="axlapi:UpdateRecordingProfileReq" />
  <xsd:element name="updateRecordingProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetRecordingProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:choice>
          <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
          </xsd:element>
          <xsd:element name="name" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRecordingProfile" type="axlapi:GetRecordingProfileReq" />
  <xsd:complexType name="GetRecordingProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="recordingProfile">
                  <xsd:complexType>
                    <xsd:complexContent>
                      <xsd:extension base="axlapi:XRecordingProfile">
                        <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
                      </xsd:extension>
                    </xsd:complexContent>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRecordingProfileResponse" type="axlapi:GetRecordingProfileRes" />
  <xsd:complexType name="AddPilotPointReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="pilotPoint" type="axlapi:XPilotPoint" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addPilotPoint" type="axlapi:AddPilotPointReq" />
  <xsd:element name="addPilotPointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdatePilotPointReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePool" type="axlapi:XDevicePool">
            </xsd:element>
            <xsd:element name="devicePoolName" type="axlapi:UniqueString50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="routePartition" type="axlapi:XRoutePartition">
            </xsd:element>
            <xsd:element name="routePartitionName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpace" type="axlapi:XCallingSearchSpace">
            </xsd:element>
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:element name="pilotNumber" type="xsd:string" minOccurs="0" />
          <xsd:element name="useFirstAvailable" type="xsd:boolean" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="location" type="axlapi:XLocation">
            </xsd:element>
            <xsd:element name="locationName" type="axlapi:String50" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updatePilotPoint" type="axlapi:UpdatePilotPointReq" />
  <xsd:element name="updatePilotPointResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getPilotPoint" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetPilotPointRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="pilotPoint">
                  <xsd:complexType>
                    <xsd:complexContent>
                      <xsd:extension base="axlapi:XPilotPoint">
                        <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
                      </xsd:extension>
                    </xsd:complexContent>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getPilotPointResponse" type="axlapi:GetPilotPointRes" />
  <xsd:element name="removePilotPoint" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removePilotPointResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateLicenseCapabilitiesReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string" />
          <xsd:element name="enableUPS" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="enableUPC" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateLicenseCapabilities" type="axlapi:UpdateLicenseCapabilitiesReq" />
  <xsd:element name="updateLicenseCapabilitiesResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetLicenseCapabilitiesReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getLicenseCapabilities" type="axlapi:GetLicenseCapabilitiesReq" />
  <xsd:complexType name="GetLicenseCapabilitiesRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="licenseCapabilities">
                  <xsd:complexType>
                    <xsd:complexContent>
                      <xsd:extension base="axlapi:XLicenseCapabilities">
                        <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
                      </xsd:extension>
                    </xsd:complexContent>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getLicenseCapabilitiesResponse" type="axlapi:GetLicenseCapabilitiesRes" />
  <!-- Existing UpdateAppUser which will be replaced by the new code
	<xsd:complexType name="UpdateAppUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing application user. Specify the user to be modified with their user id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The new password for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="passwordCredentials" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice minOccurs="0">
									<xsd:element name="pwdCredPolicy" type="axlapi:XUUID">
										<xsd:annotation>
											<xsd:documentation>Only uuid can be accepted.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="pwdCredPolicyName" type="axlapi:String50"/>
								</xsd:choice>
								<xsd:element name="pwdCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredResetHackCount" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredSetLockOut" type="xsd:boolean" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAppUser" type="axlapi:UpdateAppUserReq"/>
	<xsd:element name="updateAppUserResponse" type="axlapi:StandardResponse"/>
-->
  <xsd:complexType name="AddMobileVoiceAccessReq">
    <xsd:sequence>
      <xsd:element name="mobileVoiceAccess" type="axlapi:XMobileVoiceAccess" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addMobileVoiceAccess" type="axlapi:AddMobileVoiceAccessReq" />
  <xsd:element name="addMobileVoiceAccessResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateMobileVoiceAccessReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="uuid" type="axlapi:XUUID" />
        <xsd:element name="pattern" type="xsd:string" />
      </xsd:choice>
      <xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0" />
      <xsd:choice minOccurs="0">
        <xsd:element name="newRoutePartitionId" type="axlapi:XUUID" nillable="true">
        </xsd:element>
        <xsd:element name="newRoutePartitionName" type="axlapi:String50" nillable="true" />
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="updateMobileVoiceAccess" type="axlapi:UpdateMobileVoiceAccessReq" />
  <xsd:element name="updateMobileVoiceAccessResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetMobileVoiceAccessReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" />
            <xsd:element name="pattern" type="xsd:string" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMobileVoiceAccess" type="axlapi:GetMobileVoiceAccessReq" />
  <xsd:complexType name="GetMobileVoiceAccessRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mobileVoiceAccess" type="axlapi:XMobileVoiceAccess" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMobileVoiceAccessResponse" type="axlapi:GetMobileVoiceAccessRes" />
  <xsd:complexType name="RemoveMobileVoiceAccessReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="uuid" type="axlapi:XUUID" />
        <xsd:element name="pattern" type="xsd:string" />
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeMobileVoiceAccess" type="axlapi:RemoveMobileVoiceAccessReq" />
  <xsd:element name="removeMobileVoiceAccessResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddIVRUserLocaleReq">
    <xsd:sequence>
      <xsd:element name="ivrUserLocale" type="axlapi:XIVRUserLocale" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addIVRUserLocale" type="axlapi:AddIVRUserLocaleReq" />
  <xsd:element name="addIVRUserLocaleResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateIVRUserLocaleReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="uuid" type="axlapi:XUUID" />
        <xsd:element name="userLocale" type="axlapi:String50" />
      </xsd:choice>
      <xsd:element name="newUserLocale" type="xsd:string" minOccurs="0" />
      <!--This field is of the type axl:XUserLocale in AXLEnums.xsd-->
      <xsd:element name="newOrderIndex" type="xsd:integer" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="updateIVRUserLocale" type="axlapi:UpdateIVRUserLocaleReq" />
  <xsd:element name="updateIVRUserLocaleResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetIVRUserLocaleReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
            <xsd:element name="userLocale" type="axlapi:String50" nillable="false" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getIVRUserLocale" type="axlapi:GetIVRUserLocaleReq" />
  <xsd:complexType name="GetIVRUserLocaleRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="ivrUserLocale" type="axlapi:XIVRUserLocale" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getIVRUserLocaleResponse" type="axlapi:GetIVRUserLocaleRes" />
  <xsd:complexType name="RemoveIVRUserLocaleReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="uuid" type="axlapi:XUUID" />
        <xsd:element name="userLocale" type="axlapi:String50" />
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeIVRUserLocale" type="axlapi:RemoveIVRUserLocaleReq" />
  <xsd:element name="removeIVRUserLocaleResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddMobilityReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:XMobility" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addMobility" type="axlapi:AddMobilityReq" />
  <xsd:element name="addMobilityResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateMobilityReq">
    <xsd:sequence>
      <xsd:sequence>
        <xsd:choice>
          <xsd:element name="handoffUuid" type="axlapi:XUUID" minOccurs="0" />
          <xsd:element name="handoffNumber" type="xsd:string" minOccurs="0" />
        </xsd:choice>
        <xsd:choice>
          <xsd:element name="DTMFUuid" type="axlapi:XUUID" minOccurs="0" />
          <xsd:element name="DTMFNumber" type="xsd:string" minOccurs="0" />
        </xsd:choice>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="newHandoffNumber" type="xsd:string" minOccurs="0" />
        <xsd:choice minOccurs="0">
          <xsd:element name="newHandoffPartitionId" type="axlapi:XUUID" />
          <xsd:element name="newHandoffPartitionName" type="axlapi:String50" />
        </xsd:choice>
        <xsd:element name="newDTMFNumber" type="xsd:string" minOccurs="0" />
        <xsd:choice minOccurs="0">
          <xsd:element name="newDTMFPartitionId" type="axlapi:XUUID" />
          <xsd:element name="newDTMFPartitionName" type="axlapi:String50" />
        </xsd:choice>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="updateMobility" type="axlapi:UpdateMobilityReq" />
  <xsd:element name="updateMobilityResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetMobilityReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="handoffUuid" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="handoffNumber" type="xsd:string" minOccurs="0" />
          </xsd:choice>
          <xsd:choice>
            <xsd:element name="DTMFUuid" type="axlapi:XUUID" minOccurs="0" />
            <xsd:element name="DTMFNumber" type="xsd:string" minOccurs="0" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMobility" type="axlapi:GetMobilityReq" />
  <xsd:complexType name="GetMobilityRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="mobility" type="axlapi:XMobility" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getMobilityResponse" type="axlapi:GetMobilityRes" />
  <xsd:complexType name="GetCCMVersionReq">
    <xsd:sequence>
      <xsd:element name="processNodeName" type="axlapi:String255" minOccurs="0" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="getCCMVersion" type="axlapi:GetCCMVersionReq" />
  <xsd:complexType name="GetCCMVersionRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="componentVersion" type="axlapi:XCCMVersion" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCCMVersionResponse" type="axlapi:GetCCMVersionRes" />
  <xsd:complexType name="GetOSVersionReq" />
  <xsd:element name="getOSVersion" type="axlapi:GetOSVersionReq" />
  <xsd:complexType name="GetOSVersionRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="os" type="axlapi:XOSVersion" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getOSVersionResponse" type="axlapi:GetOSVersionRes" />
  <xsd:complexType name="RemoveMobilityReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="handoffUuid" type="axlapi:XUUID" />
        <xsd:element name="handoffNumber" type="xsd:string" />
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="DTMFUuid" type="axlapi:XUUID" />
        <xsd:element name="DTMFNumber" type="xsd:string" />
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeMobility" type="axlapi:RemoveMobilityReq" />
  <xsd:element name="removeMobilityResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddPhoneTemplateReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="phoneTemplate" type="axlapi:XPhoneTemplate" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addPhoneTemplate" type="axlapi:AddPhoneTemplateReq" />
  <xsd:element name="addPhoneTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdatePhoneTemplateReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String50" nillable="false" />
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0" />
          <xsd:element name="buttons" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="button" type="axlapi:XButton" minOccurs="0" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updatePhoneTemplate" type="axlapi:UpdatePhoneTemplateReq" />
  <xsd:element name="updatePhoneTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getPhoneTemplate" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetPhoneTemplateRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="phoneTemplate" type="axlapi:XPhoneTemplate" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getPhoneTemplateResponse" type="axlapi:GetPhoneTemplateRes" />
  <xsd:element name="removePhoneTemplate" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removePhoneTemplateResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddCredentialPolicyReq">
    <xsd:sequence>
      <xsd:element name="credentialPolicy" type="axlapi:XCredentialPolicy" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addCredentialPolicy" type="axlapi:AddCredentialPolicyReq" />
  <xsd:element name="addCredentialPolicyResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateCredentialPolicyReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="name" type="axlapi:String255" />
          <xsd:element name="newName" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="noLimitForFailedLogon" type="xsd:boolean" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="failedLogon" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="resetFailedLogonAttempts" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="administratorMustUnlock" type="xsd:boolean" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="lockoutDuration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="credChangeDuration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="neverExpires" type="xsd:boolean" nillable="true" minOccurs="0">
          </xsd:element>
          <xsd:element name="credExpiresAfter" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="minCredLength" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="prevCredStoredNum" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="inactiveDaysAllowed" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="expiryWarningDays" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="trivialCredCheck" type="xsd:boolean" nillable="false" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateCredentialPolicy" type="axlapi:UpdateCredentialPolicyReq" />
  <xsd:element name="updateCredentialPolicyResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getCredentialPolicy" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetCredentialPolicyRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="credentialPolicy">
                  <xsd:complexType>
                    <xsd:complexContent>
                      <xsd:extension base="axlapi:XCredentialPolicy">
                        <xsd:attribute name="uuid" type="axlapi:XUUID" use="optional" />
                      </xsd:extension>
                    </xsd:complexContent>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getCredentialPolicyResponse" type="axlapi:GetCredentialPolicyRes" />
  <xsd:complexType name="RemoveCredentialPolicyReq">
    <xsd:sequence>
      <xsd:element name="name" type="axlapi:String255" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="removeCredentialPolicy" type="axlapi:RemoveCredentialPolicyReq" />
  <xsd:element name="removeCredentialPolicyResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddSIPTrunkSecurityProfileReq">
    <xsd:sequence>
      <xsd:element name="SIPTrunkSecurityProfile" type="axlapi:XSIPTrunkSecurityProfile" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="addSIPTrunkSecurityProfile" type="axlapi:AddSIPTrunkSecurityProfileReq" />
  <xsd:element name="addSIPTrunkSecurityProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateSIPTrunkSecurityProfileReq">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="name" type="axlapi:String64" nillable="false" />
        <xsd:element name="uuid" type="axlapi:XUUID" nillable="false" />
      </xsd:choice>
      <xsd:element name="newName" type="axlapi:String64" minOccurs="0" />
      <xsd:element name="description" type="axlapi:String100" minOccurs="0" />
      <xsd:element name="securityMode" type="axlapi:XDeviceSecurityMode" nillable="true" minOccurs="0" />
      <xsd:element name="incomingTransport" type="xsd:string" nillable="false" minOccurs="0" />
      <!--This field is of the type axl:XTransport in AXLEnums.xsd-->
      <xsd:element name="outgoingTransport" type="xsd:string" nillable="true" minOccurs="0" />
      <!--This field is of the type axl:XTransport in AXLEnums.xsd-->
      <xsd:element name="digestAuthentication" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="noncePolicyTime" type="xsd:long" nillable="false" minOccurs="0">
      </xsd:element>
      <xsd:element name="x509SubjectName" type="axlapi:String4096" nillable="false" minOccurs="0" />
      <xsd:element name="incomingPort" type="xsd:long" nillable="false" minOccurs="0" />
      <xsd:element name="applLevelAuthentication" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="acceptPresenceSubscription" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="allowReplaceHeader" type="xsd:boolean" nillable="false" minOccurs="0" />
      <xsd:element name="transmitSecurityStatus" type="xsd:boolean" nillable="false" minOccurs="0" />
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional" />
  </xsd:complexType>
  <xsd:element name="updateSIPTrunkSecurityProfile" type="axlapi:UpdateSIPTrunkSecurityProfileReq" />
  <xsd:element name="updateSIPTrunkSecurityProfileResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getSIPTrunkSecurityProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetSIPTrunkSecurityProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="SIPTrunkSecurityProfile" type="axlapi:XSIPTrunkSecurityProfile" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getSIPTrunkSecurityProfileResponse" type="axlapi:GetSIPTrunkSecurityProfileRes" />
  <xsd:element name="removeSIPTrunkSecurityProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeSIPTrunkSecurityProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddRemoteDestinationReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newRemoteDestination" type="axlapi:XRemoteDestination">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRemoteDestination" type="axlapi:AddRemoteDestinationReq" />
  <xsd:element name="addRemoteDestinationResponse" type="axlapi:StandardResponse" />
  <!--<xsd:element name="removeRemoteDestination" type="axlapi:NameAndGUIDRequest"/>-->
  <xsd:complexType name="RemoveRemoteDestinationReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" />
            <xsd:element name="destination" type="xsd:string" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="removeRemoteDestination" type="axlapi:RemoveRemoteDestinationReq" />
  <xsd:element name="removeRemoteDestinationResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRemoteDestinationReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" />
            <xsd:element name="destination" type="xsd:string" />
          </xsd:choice>
          <xsd:element name="newName" type="xsd:string" nillable="true" minOccurs="0" />
          <xsd:element name="newDestination" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="answerTooSoonTimer" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="answerTooLateTimer" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="delayBeforeRingingCell" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0" />
          <xsd:element name="isMobilePhone" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="enableMobileConnect" type="xsd:boolean" nillable="false" minOccurs="0" />
          <xsd:element name="lineAssociations" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="lineAssociation" type="axlapi:XLineAssociation" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="timeZone" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XTimeZone in AXLEnums.xsd-->
          <xsd:choice minOccurs="0">
            <xsd:element name="todAccessId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="todAccessName" type="axlapi:String128" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="mobileSmartClientId" type="axlapi:XUUID" />
            <xsd:element name="mobileSmartClientName" type="axlapi:String128" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRemoteDestination" type="axlapi:UpdateRemoteDestinationReq" />
  <xsd:element name="updateRemoteDestinationResponse" type="axlapi:StandardResponse" />
  <!--<xsd:element name="getRemoteDestination" type="axlapi:NameAndGUIDRequest"/>-->
  <xsd:complexType name="GetRemoteDestinationReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="uuid" type="axlapi:XUUID" />
            <xsd:element name="destination" type="xsd:string" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRemoteDestination" type="axlapi:GetRemoteDestinationReq" />
  <xsd:complexType name="GetRemoteDestinationRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="remoteDestination" type="axlapi:XRemoteDestination" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRemoteDestinationResponse" type="axlapi:GetRemoteDestinationRes" />
  <xsd:complexType name="StandardRemoteDestinationResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddRemoteDestinationProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newRemoteDestinationProfile" type="axlapi:XRemoteDestinationProfile">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addRemoteDestinationProfile" type="axlapi:AddRemoteDestinationProfileReq" />
  <xsd:element name="addRemoteDestinationProfileResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeRemoteDestinationProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeRemoteDestinationProfileResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="UpdateRemoteDestinationProfileReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="xsd:string">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="description" type="xsd:string" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="callingSearchSpaceId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="callingSearchSpaceName" type="axlapi:String50" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="devicePoolId" type="axlapi:XUUID">
            </xsd:element>
            <xsd:element name="devicePoolName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="networkHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="userHoldMOHAudioSourceId" type="axlapi:XMOHAudioSourceId" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="lines" minOccurs="0">
            <xsd:complexType>
              <xsd:choice>
                <xsd:element name="line" type="axlapi:XLine" maxOccurs="unbounded" />
                <xsd:element name="lineIdentifier" type="axlapi:XNumplanIdentifier" maxOccurs="unbounded" />
              </xsd:choice>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="callInfoPrivacyStatus" type="xsd:string" nillable="false" minOccurs="0" />
          <!--This field is of the type axl:XStatus in AXLEnums.xsd-->
          <xsd:element name="userId" type="xsd:string" nillable="false" minOccurs="0" />
          <xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="rerouteCallingSearchSpaceId" type="axlapi:XUUID" nillable="true" />
            <xsd:element name="rerouteCallingSearchSpaceName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:choice minOccurs="0">
            <xsd:element name="cgpnTransformationCSSId" type="axlapi:XUUID" nillable="true">
            </xsd:element>
            <xsd:element name="cgpnTransformationCSSName" type="axlapi:String50" nillable="true" />
          </xsd:choice>
          <xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:element name="primaryPhoneId" type="axlapi:XDevice">
            </xsd:element>
            <xsd:element name="primaryPhoneName" type="axlapi:String128" nillable="false" />
          </xsd:choice>
          <xsd:element name="dndOption" type="axlapi:XDNDOption" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:choice minOccurs="0">
            <xsd:element name="mobileSmartClientProfileId" type="axlapi:XUUID" />
            <xsd:element name="mobileSmartClientProfileName" type="axlapi:String128" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateRemoteDestinationProfile" type="axlapi:UpdateRemoteDestinationProfileReq" />
  <xsd:element name="updateRemoteDestinationProfileResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getRemoteDestinationProfile" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetRemoteDestinationProfileRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="remoteDestinationProfile" type="axlapi:XRemoteDestinationProfile" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getRemoteDestinationProfileResponse" type="axlapi:GetRemoteDestinationProfileRes" />
  <xsd:complexType name="StandardRemoteDestinationProfileResponse">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddResourcePriorityNamespaceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newResourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addResourcePriorityNamespace" type="axlapi:AddResourcePriorityNamespaceReq" />
  <xsd:element name="addResourcePriorityNamespaceResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="ResourcePriorityNamespaceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="namespace" type="xsd:string" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getResourcePriorityNamespace" type="axlapi:ResourcePriorityNamespaceReq" />
  <xsd:complexType name="GetResourcePriorityNamespaceRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="resourcePriorityNamespace" type="axlapi:XResourcePriorityNamespace" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getResourcePriorityNamespaceResponse" type="axlapi:GetResourcePriorityNamespaceRes" />
  <xsd:complexType name="UpdateResourcePriorityNamespaceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="namespace" type="xsd:string" nillable="false">
            </xsd:element>
            <xsd:element name="uuid" type="axlapi:XUUID" nillable="false">
            </xsd:element>
          </xsd:choice>
          <xsd:element name="newNamespace" type="xsd:string" nillable="false" minOccurs="0">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateResourcePriorityNamespace" type="axlapi:UpdateResourcePriorityNamespaceReq" />
  <xsd:element name="updateResourcePriorityNamespaceResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeResourcePriorityNamespace" type="axlapi:ResourcePriorityNamespaceReq" />
  <xsd:element name="removeResourcePriorityNamespaceResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GetResourcePriorityDefaultNamespaceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getResourcePriorityDefaultNamespace" type="axlapi:GetResourcePriorityDefaultNamespaceReq" />
  <xsd:complexType name="GetResourcePriorityDefaultNamespaceRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="resourcePriorityDefaultNamespace" type="axlapi:XResourcePriorityDefaultNamespace" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getResourcePriorityDefaultNamespaceResponse" type="axlapi:GetResourcePriorityDefaultNamespaceRes" />
  <xsd:complexType name="UpdateResourcePriorityDefaultNamespaceReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice minOccurs="0">
            <xsd:element name="resourcePriorityDefaultNamespaceId" type="axlapi:XUUID" />
            <xsd:element name="resourcePriorityDefaultNamespaceName" type="xsd:string">
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateResourcePriorityDefaultNamespace" type="axlapi:UpdateResourcePriorityDefaultNamespaceReq" />
  <xsd:element name="updateResourcePriorityDefaultNamespaceResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddResourcePriorityNamespaceListReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="resourcePriorityNamespaceList" type="axlapi:XResourcePriorityNamespaceList" nillable="false" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addResourcePriorityNamespaceList" type="axlapi:AddResourcePriorityNamespaceListReq" />
  <xsd:element name="addResourcePriorityNamespaceListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="getResourcePriorityNamespaceList" type="axlapi:NameAndGUIDRequest" />
  <xsd:complexType name="GetResourcePriorityNamespaceListRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="resourcePriorityNamespaceList" type="axlapi:XResourcePriorityNamespaceList" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getResourcePriorityNamespaceListResponse" type="axlapi:GetResourcePriorityNamespaceListRes" />
  <xsd:complexType name="UpdateResourcePriorityNamespaceListReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:NameAndGUIDRequest">
        <xsd:sequence>
          <xsd:element name="newName" type="axlapi:String50" nillable="false" minOccurs="0">
          </xsd:element>
          <xsd:element name="members" minOccurs="0">
            <xsd:complexType>
              <xsd:sequence minOccurs="0">
                <xsd:element name="member" type="axlapi:XResourcePriorityNamespaceListMember" maxOccurs="unbounded" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateResourcePriorityNamespaceList" type="axlapi:UpdateResourcePriorityNamespaceListReq" />
  <xsd:element name="updateResourcePriorityNamespaceListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeResourcePriorityNamespaceList" type="axlapi:NameAndGUIDRequest" />
  <xsd:element name="removeResourcePriorityNamespaceListResponse" type="axlapi:StandardResponse" />
  <xsd:element name="executeSQLQuery" type="axlapi:ExecuteSQLQueryReq" nillable="false">
  </xsd:element>
  <xsd:complexType name="ExecuteSQLQueryRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="row" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="executeSQLQueryResponse" type="axlapi:ExecuteSQLQueryRes">
  </xsd:element>
  <xsd:complexType name="ExecuteSQLUpdateReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="sql" type="xsd:string" nillable="false">
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="executeSQLUpdate" type="axlapi:ExecuteSQLUpdateReq" nillable="false">
  </xsd:element>
  <xsd:complexType name="ExecuteSQLUpdateRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="rowsUpdated" type="xsd:integer">
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="executeSQLUpdateResponse" type="axlapi:ExecuteSQLUpdateRes">
  </xsd:element>
  <xsd:complexType name="AddGeoLocationReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newGeoLocation" type="axlapi:XGeoLocation" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addGeoLocation" type="axlapi:AddGeoLocationReq" />
  <xsd:element name="addGeoLocationResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GeoLocationReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String100" />
            <xsd:element name="uuid" type="axlapi:XUUID" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGeoLocation" type="axlapi:GeoLocationReq" />
  <xsd:complexType name="GetGeoLocationRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="geoLocation" type="axlapi:XGeoLocation" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGeoLocationResponse" type="axlapi:GetGeoLocationRes" />
  <xsd:complexType name="UpdateGeoLocationReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" />
            <xsd:element name="uuid" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="country" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="nationalSubDivision" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="district" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="communityName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="cityDivision" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="neighbourhood" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="street" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="leadingStreetDirection" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="trailingStreetSuffix" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="streetSuffix" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="houseNumber" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="houseNumberSuffix" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="landmark" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="location" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="floor" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="occupantName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="postalCode" type="axlapi:String100" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateGeoLocation" type="axlapi:UpdateGeoLocationReq" />
  <xsd:element name="updateGeoLocationResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeGeoLocation" type="axlapi:GeoLocationReq" />
  <xsd:element name="removeGeoLocationResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddGeoLocationPolicyReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newGeoLocationPolicy" type="axlapi:XGeoLocationPolicy" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addGeoLocationPolicy" type="axlapi:AddGeoLocationPolicyReq" />
  <xsd:element name="addGeoLocationPolicyResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GeoLocationPolicyReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String100" />
            <xsd:element name="uuid" type="axlapi:XUUID" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGeoLocationPolicy" type="axlapi:GeoLocationPolicyReq" />
  <xsd:complexType name="GetGeoLocationPolicyRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="geoLocationPolicy" type="axlapi:XGeoLocationPolicy" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGeoLocationPolicyResponse" type="axlapi:GetGeoLocationPolicyRes" />
  <xsd:complexType name="UpdateGeoLocationPolicyReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" />
            <xsd:element name="uuid" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="country" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="nationalSubDivision" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="district" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="communityName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="cityDivision" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="neighbourhood" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="street" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="leadingStreetDirection" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="trailingStreetSuffix" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="streetSuffix" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="houseNumber" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="houseNumberSuffix" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="landmark" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="location" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="floor" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="occupantName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="postalCode" type="axlapi:String100" minOccurs="0" />
          <xsd:choice minOccurs="0">
            <xsd:sequence>
              <xsd:element name="addPolicies" minOccurs="0">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="addPolicy" type="axlapi:XPolicyRelationship" maxOccurs="unbounded" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="removePolicies" minOccurs="0">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="removePolicy" maxOccurs="unbounded">
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:choice>
                            <xsd:element name="geoLocationPolicyA" type="axlapi:XGeoLocationPolicy" />
                            <xsd:element name="geoLocationPolicyAName" type="axlapi:String100" />
                          </xsd:choice>
                          <xsd:choice>
                            <xsd:element name="geoLocationPolicyB" type="axlapi:XGeoLocationPolicy" />
                            <xsd:element name="geoLocationPolicyBName" type="axlapi:String100" />
                          </xsd:choice>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="updatePolicies" minOccurs="0">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="updatePolicy" maxOccurs="unbounded">
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:choice>
                            <xsd:element name="geoLocationPolicyA" type="axlapi:XGeoLocationPolicy" />
                            <xsd:element name="geoLocationPolicyAName" type="axlapi:String100" />
                          </xsd:choice>
                          <xsd:choice>
                            <xsd:element name="geoLocationPolicyB" type="axlapi:XGeoLocationPolicy" />
                            <xsd:element name="geoLocationPolicyBName" type="axlapi:String100" />
                          </xsd:choice>
                          <xsd:element name="logicalPartitionPolicy" />
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:element name="relatedPolicies" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence minOccurs="0">
                  <xsd:element name="relatedPolicy" type="axlapi:XPolicyRelationship" maxOccurs="unbounded" />
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateGeoLocationPolicy" type="axlapi:UpdateGeoLocationPolicyReq" />
  <xsd:element name="updateGeoLocationPolicyResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeGeoLocationPolicy" type="axlapi:GeoLocationPolicyReq" />
  <xsd:element name="removeGeoLocationPolicyResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="AddGeoLocationFilterReq" abstract="false" final="#all">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:element name="newGeoLocationFilter" type="axlapi:XGeoLocationFilter" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="addGeoLocationFilter" type="axlapi:AddGeoLocationFilterReq" />
  <xsd:element name="addGeoLocationFilterResponse" type="axlapi:StandardResponse" />
  <xsd:complexType name="GeoLocationFilterReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" type="axlapi:String100" />
            <xsd:element name="uuid" type="axlapi:XUUID" />
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGeoLocationFilter" type="axlapi:GeoLocationFilterReq" />
  <xsd:complexType name="GetGeoLocationFilterRes">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIResponse">
        <xsd:sequence>
          <xsd:element name="return">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="geoLocationFilter" type="axlapi:XGeoLocationFilter" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="getGeoLocationFilterResponse" type="axlapi:GetGeoLocationFilterRes" />
  <xsd:complexType name="UpdateGeoLocationFilterReq">
    <xsd:complexContent>
      <xsd:extension base="axlapi:APIRequest">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="name" />
            <xsd:element name="uuid" />
          </xsd:choice>
          <xsd:element name="newName" type="axlapi:String100" minOccurs="0" />
          <xsd:element name="description" type="axlapi:String255" minOccurs="0" />
          <xsd:element name="useCountry" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useNationalSubDivision" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useDistrict" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useCommunityName" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useCityDivision" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useNeighbourhood" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useStreet" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useLeadingStreetDirection" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useTrailingStreetSuffix" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useStreetSuffix" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useHouseNumber" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useHouseNumberSuffix" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useLandmark" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useLocation" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useFloor" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="useOccupantName" type="xsd:boolean" minOccurs="0" />
          <xsd:element name="usePostalCode" type="xsd:boolean" minOccurs="0" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="updateGeoLocationFilter" type="axlapi:UpdateGeoLocationFilterReq" />
  <xsd:element name="updateGeoLocationFilterResponse" type="axlapi:StandardResponse" />
  <xsd:element name="removeGeoLocationFilter" type="axlapi:GeoLocationFilterReq" />
  <xsd:element name="removeGeoLocationFilterResponse" type="axlapi:StandardResponse" />
</xsd:schema>
