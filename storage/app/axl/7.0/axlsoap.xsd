<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by Saikat Datta (Cisco Systems, Inc.) -->
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Jerry Vander Voord (Cisco Systems) -->
<xsd:schema targetNamespace="http://www.cisco.com/AXL/API/7.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:axlapi="http://www.cisco.com/AXL/API/7.0" xmlns:axl="http://www.cisco.com/AXL/7.0" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="7.0">
	<xsd:include schemaLocation="axlmessage.xsd"/>
	<xsd:import namespace="http://www.cisco.com/AXL/7.0" schemaLocation="axl.xsd"/>
	<xsd:annotation>
		<xsd:documentation><![CDATA[

Version 1.00

$Revision: 9 $
$Author: Jporche $
$Date: 1/26/01 3:49p $

Copyright (c) 2001, 2007-2008 Cisco Systems, Inc.
	
**********************
* CISCO CONFIDENTIAL *
**********************


]]></xsd:documentation>
	</xsd:annotation>
	<xsd:complexType name="AddSIPRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new SIP Route Pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newSIPRoutePattern" type="axl:XNPSIPRoutePattern" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addSIPRoutePattern" type="axlapi:AddSIPRoutePatternReq"/>
	<xsd:element name="addSIPRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="SIPRoutePatternReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID"/>
						<xsd:sequence>
							<xsd:element name="pattern" type="xsd:string"/>
							<xsd:choice>
								<xsd:element name="routePartitionId" type="axl:XUUID"/>
								<xsd:element name="routePartitionName" type="axl:String50"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPRoutePattern" type="axlapi:SIPRoutePatternReq"/>
	<xsd:complexType name="GetSIPRoutePatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the SIP Route Pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPSIPRoutePattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPRoutePatternResponse" type="axlapi:GetSIPRoutePatternRes"/>
	<xsd:complexType name="UpdateSIPRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing sip route pattern in the database.  The route pattern can be specified by its GUID, or by a combination if its pattern, route partition GUID, and route filter GUID.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this route pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="destination" nillable="false" minOccurs="0">
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="sipTrunk" type="axl:XSIPTrunk"/>
								<xsd:element name="sipTrunkName" type="axl:String128"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSIPRoutePattern" type="axlapi:UpdateSIPRoutePatternReq"/>
	<xsd:element name="updateSIPRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeSIPRoutePattern" type="axlapi:SIPRoutePatternReq"/>
	<xsd:element name="removeSIPRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDHCPServerReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new DHCP Server to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newDHCPServer" type="axl:XDHCPServer" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDHCPServer" type="axlapi:AddDHCPServerReq"/>
	<xsd:element name="addDHCPServerResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="DHCPServerReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDHCPServer" type="axlapi:DHCPServerReq"/>
	<xsd:complexType name="GetDHCPServerRes">
		<xsd:annotation>
			<xsd:documentation>Contains the DHCP Server that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="DHCPServer" type="axl:XDHCPServer"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDHCPServerResponse" type="axlapi:GetDHCPServerRes"/>
	<xsd:complexType name="UpdateDHCPServerReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing DHCP Server in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the DHCP Server  to be modified.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Each DHCPServer is associated with a unique Host Server.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="processNode" type="axl:XProcessNode">
							<xsd:annotation>
								<xsd:documentation>only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="processNodeName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="primaryDNSipAddress" type="xsd:string" minOccurs="0"/>
					<xsd:element name="secondaryDNSipAddress" type="xsd:string" minOccurs="0"/>
					<xsd:element name="primaryTFTPServeripAddress" type="xsd:string" minOccurs="0"/>
					<xsd:element name="secondaryTFTPServeripAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="bootstrapServeripAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="domainName" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="tftpServerName" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="renewalTime" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDHCPServer" type="axlapi:UpdateDHCPServerReq"/>
	<xsd:element name="updateDHCPServerResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeDHCPServer" type="axlapi:DHCPServerReq"/>
	<xsd:element name="removeDHCPServerResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="addAARGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds one new AARGroup to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="AARGroup" type="axl:XAARGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAARGroup" type="axlapi:addAARGroupReq"/>
	<xsd:element name="addAARGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getAARGroup" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>Get the specified AARGroup from the database.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="getAARGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="AARGroup">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XAARGroup"/>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAARGroupResponse" type="axlapi:getAARGroupRes"/>
	<xsd:complexType name="updateAARGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates the specified entry in AARNeighborhood.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="name" type="axl:String32" nillable="false"/>
				<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
			</xsd:choice>
			<xsd:element name="newName" type="axl:String32" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="updateAARGroup" type="axlapi:updateAARGroupReq"/>
	<xsd:element name="updateAARGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="updateAARGroupMatrixReq">
		<xsd:annotation>
			<xsd:documentation>Updates a specific entry in the AARDialPrefixMatrix table.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="uuid" type="axl:XUUID" nillable="false">
				<xsd:annotation>
					<xsd:documentation>The pkid of the entry in the AARDialPrefixMatrix table that is to be modified.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="prefixDigit" type="axl:String32" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The new prefixDigit value for this particular AARGroup relationship.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:element name="updateAARGroupMatrix" type="axlapi:updateAARGroupMatrixReq"/>
	<xsd:element name="updateAARGroupMatrixResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeAARGroup" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>Removes the specified AARGroup from the database.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeAARGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddPhoneReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new phone to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPhone" type="axl:XIPPhone"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addPhone" type="axlapi:AddPhoneReq"/>
	<xsd:element name="addPhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemovePhoneReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified phone from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removePhone" type="axlapi:RemovePhoneReq"/>
	<xsd:element name="removePhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdatePhoneReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing IP phone in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the phone that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the phone that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of the phone.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="commonDeviceConfigId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Common Device Config for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonDeviceConfigName" type="axl:UniqueString50" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The name of the new Common Device Config for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Only applicable to Phone.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="commonPhoneConfig" type="axl:XCommonPhoneConfig" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonPhoneConfigName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable. This tag is not valid for H323Phone, H323Trunk, SIPTrunk and Analog Phone.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable. This tag is not valid for H323Phone, H323Trunk, SIPTrunk and Analog Phone.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor config for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this phone.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP. To set its value as 'none', pass '-1' in the request.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="associatedPC" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplateId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Phone Template for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the new Phone Template for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new speed-dials for this phone.  If this element is null, then all speed-dials are removed from this phone.  Note:  If the "speeddials" element is present, then all existing speed-dials are removed and replaced with the "speeddial" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Busy Lamp Fields for this profile.  If this element is null, then all  Busy Lamp Fields are removed from this profile.  Note:  If the " Busy Lamp Fields" element is present, then all existing  Busy Lamp Fields are removed and replaced with the " Busy Lamp Field" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampFields" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="primaryPhoneId" type="axl:XDevice">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="primaryPhoneName" type="axl:String128" nillable="false"/>
					</xsd:choice>
					<xsd:element name="ringSettingIdleBLFAudibleAlert" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="ringSettingBusyBLFAudibleAlert" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="blfDirectedCallParks" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Busy Lamp Fields DirectedCallPark for this profile.  If this element is null, then all  Busy Lamp Fields DirectedCallPark are removed from this profile.  Note:  If the "Busy Lamp Fields DirectedCallPark" element is present, then all existing  Busy Lamp Fields are removed and replaced with the " Busy Lamp Field DirectedCallPark" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="blfDirectedCallPark" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XBLFDirectedCallPark">
												<xsd:attribute name="index" type="xsd:positiveInteger"/>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="addOnModules" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Add-on Modules associated with this phone.  If this element is null, then all Add-on Modules are removed from this phone.  Note:  If the "addOnModules" element is present, then all existing Add-on Modules are removed and replaced with the "addOnModule" sub-elements.  All Add-on Modules specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Security Profile for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="sipProfileId" type="axl:XUUID"/>
						<xsd:element name="sipProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="idleTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Idle Timeout value for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authenticationURL" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Authentication URL for this phone. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="directoryURL" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Directory URL for this phone. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="idleURL" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Idle URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="informationURL" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Information URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="messagesURL" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Messages (voice-mail) URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="proxyServerURL" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Proxy Server URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="servicesURL" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new IP Services URL for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="services" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Softkey Template for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="softkeyTemplateId" type="axl:XUUID"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Extension Mobility block.  By default, extension mobility is disabled.  To enable, include a default profile and set enableExtensionMobility to true.  Only applicable to 7960 and 7940 phones. If enableExtensionMobility is false then these will not appear.</xsd:documentation>
						</xsd:annotation>
						<xsd:choice>
							<xsd:annotation>
								<xsd:documentation>The absence of this tag would mean the device would use the current device Settings</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="defaultProfileId" type="axl:XUUID" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The ID of the default profile for this device. Nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="defaultProfileName" type="axl:String50" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The name of the default profile for this device.  Nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:element name="enableExtensionMobility" type="xsd:boolean">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:element name="singleButtonBarge" type="axl:XBarge" nillable="false" minOccurs="0"/>
					<xsd:element name="joinAcrossLines" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="builtInBridgeStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="hlogStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="rerouteCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="rerouteCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroupId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="presenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="requireDTMFReception" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="RFC2833Disabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="phoneLoadName" type="axl:String32" minOccurs="0"/>
					<xsd:element name="certificateOperation" type="axl:XCertificateOperation" minOccurs="0"/>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>These tags can be updated only if securityProfile is not mentioned in the request.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="authenticationMode" type="axl:XAuthenticationMode" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>authenticationMode can be updated only if certificateOperation field is Install/Upgrade, Delete or Troubleshoot.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="keySize" type="axl:XKeySize" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>keySize can be updated only if certificateOperation field is Install/Upgrade, Delete or Troubleshoot.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:element name="authenticationString" type="axl:String128" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>authenticationString can be updated only if certificateOperation field is Install/Upgrade, Delete or Troubleshoot.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="certificateStatus" type="axl:XCertificateStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="upgradeFinishTime" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="deviceMobilityMode" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="remoteDevice" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="dndOption" type="axl:XDNDOption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndRingSetting" type="axl:XRingSetting" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isActive" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag determines if the newly added phone is active to determine consumption of license. If set to false the license units will not be consumed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for dual mode phones. Nullable</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="mobilityUserId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Mobility User for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mobilityUserIdName" type="axl:String50" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The userid of the new mobility user for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="phoneSuite" type="axl:XPhonePersonalization" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If a blank tag is passed, the existing value of this tag in the database is retained.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneServiceDisplay" type="axl:XPhoneServiceDisplay" minOccurs="0"/>
					<xsd:element name="isProtected" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support Secure Tone</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for CUMC devices.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="mobileSmartClientProfileId" type="axl:XUUID"/>
						<xsd:element name="mobileSmartClientProfileName" type="axl:String128"/>
					</xsd:choice>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mtpPreferredCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialRules" type="axl:XSIPDialRules" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialRulesName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="sshUser" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable only to those devices that support ssh feature.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sshPwd" type="axl:String255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable only to those devices that support ssh feature.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="digestUser" type="axl:String255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="outboundCallRollover" type="axl:XOutboundCallRollover" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable to only those phones that support Automatic Outbound Call Rollover.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePhone" type="axlapi:UpdatePhoneReq"/>
	<xsd:element name="updatePhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetPhoneReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified phone from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhone" type="axlapi:GetPhoneReq"/>
	<xsd:complexType name="GetPhoneRes">
		<xsd:annotation>
			<xsd:documentation>Returns the phone specified by the GetPhone request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XIPPhone"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhoneResponse" type="axlapi:GetPhoneRes"/>
	<xsd:complexType name="AddCommonDeviceConfigReq" abstract="false" final="#all">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="commonDeviceConfig" type="axl:XCommonDeviceConfig"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddCallerFilterListReq">
		<xsd:annotation>
			<xsd:documentation>Adds one new CallerFilterList to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newCallerFilterList" type="axl:XCallerFilterList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallerFilterList" type="axlapi:AddCallerFilterListReq"/>
	<xsd:element name="addCallerFilterListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCallerFilterList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCallerFilterListRes">
		<xsd:annotation>
			<xsd:documentation>Returns the callerFilterList specified by the GetCallerFilterList request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callerFilterList" type="axl:XCallerFilterList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallerFilterListResponse" type="axlapi:GetCallerFilterListRes"/>
	<xsd:complexType name="UpdateCallerFilterListReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing CallerFilterList in the database. Only name and description fields can be updated.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the caller filter list to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the caller filter list to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this caller filter list.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String128" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this caller filter list.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new end user for this callerFilterList.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="endUserId" type="axl:XUUID"/>
						<xsd:element name="endUserIdName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this caller filter list.   Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XCallerFilterListMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallerFilterList" type="axlapi:UpdateCallerFilterListReq"/>
	<xsd:element name="updateCallerFilterListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeCallerFilterList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCallerFilterListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="addCommonDeviceConfig" type="axlapi:AddCommonDeviceConfigReq"/>
	<xsd:element name="addCommonDeviceConfigResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetCommonDeviceConfigRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="commonDeviceConfig" type="axl:XCommonDeviceConfig"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCommonDeviceConfig" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="getCommonDeviceConfigResponse" type="axlapi:GetCommonDeviceConfigRes"/>
	<xsd:element name="removeCommonDeviceConfig" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCommonDeviceConfigResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCommonDeviceConfigReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:UniqueString50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="sofkeyTemplate" type="axl:XSoftkeyTemplate"/>
						<xsd:element name="softkeyTemplateName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0"/>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Default is not applicable for CommonDeviceConfig API</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCommonDeviceConfig" type="axlapi:UpdateCommonDeviceConfigReq"/>
	<xsd:element name="updateCommonDeviceConfigResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDeviceMobilityReq" abstract="false" final="#all">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="deviceMobility" type="axl:XDeviceMobility"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDeviceMobility" type="axlapi:AddDeviceMobilityReq"/>
	<xsd:element name="addDeviceMobilityResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetDeviceMobilityRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="deviceMobility" type="axl:XDeviceMobility"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceMobility" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="getDeviceMobilityResponse" type="axlapi:GetDeviceMobilityRes"/>
	<xsd:element name="removeDeviceMobility" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeDeviceMobilityResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateDeviceMobilityReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="xsd:string" minOccurs="0"/>
					<xsd:element name="subNet" type="xsd:string" minOccurs="0"/>
					<xsd:element name="subNetMaskSz" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="members" type="axl:XDevicePoolDeviceMobility" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDeviceMobility" type="axlapi:UpdateDeviceMobilityReq"/>
	<xsd:element name="updateDeviceMobilityResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDeviceMobilityGroupReq" abstract="false" final="#all">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="deviceMobilityGroup" type="axl:XDeviceMobilityGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDeviceMobilityGroup" type="axlapi:AddDeviceMobilityGroupReq"/>
	<xsd:element name="addDeviceMobilityGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetDeviceMobilityGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="deviceMobilityGroup" type="axl:XDeviceMobilityGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceMobilityGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="getDeviceMobilityGroupResponse" type="axlapi:GetDeviceMobilityGroupRes"/>
	<xsd:element name="removeDeviceMobilityGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeDeviceMobilityGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateDeviceMobilityGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String50" nillable="true" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDeviceMobilityGroup" type="axlapi:UpdateDeviceMobilityGroupReq"/>
	<xsd:element name="updateDeviceMobilityGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddPhysicalLocationReq">
		<xsd:sequence>
			<xsd:element name="physicalLocation" type="axl:XPhysicalLocation"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="addPhysicalLocation" type="axlapi:AddPhysicalLocationReq"/>
	<xsd:element name="addPhysicalLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetPhysicalLocationRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="physicalLocation" type="axl:XPhysicalLocation"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhysicalLocation" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="getPhysicalLocationResponse" type="axlapi:GetPhysicalLocationRes"/>
	<xsd:element name="removePhysicalLocation" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removePhysicalLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdatePhysicalLocationReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" minOccurs="0"/>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePhysicalLocation" type="axlapi:UpdatePhysicalLocationReq"/>
	<xsd:element name="updatePhysicalLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="addApplicationToSoftkeyTemplate" type="axlapi:AddApplicationToSoftkeyTemplateReq"/>
	<xsd:complexType name="AddApplicationToSoftkeyTemplateReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newApplication" type="axl:XApplicationToSoftKeyTemplate"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addApplicationToSoftkeyTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="removeApplicationToSoftkeyTemplateReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="softKeyTemplateId" type="axl:XUUID" nillable="false"/>
				<xsd:element name="softKeyTemplateName" type="axl:String100" nillable="false">
					<xsd:annotation>
						<xsd:documentation>This template should not be a standard template.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="applicationName" type="axl:String100" nillable="false">
				<xsd:annotation>
					<xsd:documentation>This application should not Cisco CallManager.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="removeApplicationToSoftkeyTemplate" type="axlapi:removeApplicationToSoftkeyTemplateReq"/>
	<xsd:element name="removeApplicationToSoftkeyTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddSoftKeyTemplateReq">
		<xsd:sequence>
			<xsd:element name="softKeyTemplate" type="axl:XSoftkeyTemplate"/>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="addSoftKeyTemplate" type="axlapi:AddSoftKeyTemplateReq"/>
	<xsd:element name="addSoftKeyTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getSoftKeyTemplate" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetSoftKeyTemplateRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="softKeyTemplate" type="axl:XSoftkeyTemplate"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSoftKeyTemplateResponse" type="axlapi:GetSoftKeyTemplateRes"/>
	<xsd:complexType name="UpdateSoftKeyTemplateReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String100" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is read-only for standard template.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String100" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is read-only for standard template.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDefault" type="xsd:boolean" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If this is set to true for a template which is not default,the old default SoftKeyTemplate will be deSelected.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneServiceDisplay" type="axl:XPhoneServiceDisplay" minOccurs="0"/>
					<xsd:element name="requirePKIAuthForHTTPS" type="axl:XStatus" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSoftKeyTemplate" type="axlapi:UpdateSoftKeyTemplateReq"/>
	<xsd:element name="updateSoftKeyTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeSoftKeyTemplate" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeSoftKeyTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateSoftKeySetReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="softKeyTemplateId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="softKeyTemplateName" type="axl:String100" nillable="false"/>
					</xsd:choice>
					<xsd:element name="callStates" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="callState" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence minOccurs="0">
											<xsd:element name="callStateName" type="axl:XCallState" nillable="false"/>
											<xsd:element name="softKeys" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>List of mandatory keys for each callstate ::               On Hook - NewCall
Connected - End Call 
On Hold - Resume
Off Hook - End Call 
Connected Transfer - Transfer
Digits After First - Backward
Connected Conference  -  Conference
Ring Out - End Call
Off Hook With Feature - End Call            </xsd:documentation>
												</xsd:annotation>
												<xsd:complexType>
													<xsd:sequence minOccurs="0">
														<xsd:element name="softKey" minOccurs="0" maxOccurs="unbounded">
															<xsd:complexType>
																<xsd:sequence>
																	<xsd:element name="positionId" type="xsd:nonNegativeInteger" nillable="false">
																		<xsd:annotation>
																			<xsd:documentation>Read-Only.The positionId has values starting with 0 and get incremented by 1 for each call state.</xsd:documentation>
																		</xsd:annotation>
																	</xsd:element>
																	<xsd:element name="softKeyName" type="axl:XSoftkey" nillable="false"/>
																</xsd:sequence>
															</xsd:complexType>
														</xsd:element>
													</xsd:sequence>
												</xsd:complexType>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSoftKeySet" type="axlapi:UpdateSoftKeySetReq"/>
	<xsd:element name="updateSoftKeySetResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetSoftKeySetRes">
		<xsd:sequence>
			<xsd:element name="return">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="softKeySet">
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axl:XSoftKeySet"/>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="getSoftKeySet" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>Mention the name or uuid of softkey template.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="getSoftKeySetResponse" type="axlapi:GetSoftKeySetRes"/>
	<xsd:complexType name="AddTranscoderReq">
		<xsd:annotation>
			<xsd:documentation>Adds  new Transcoder to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="transcoder" type="axl:XTranscoder"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTranscoder" type="axlapi:AddTranscoderReq"/>
	<xsd:element name="addTranscoderResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateTranscoderReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:UniqueString255" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:UniqueString255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Should not be modified for Cisco Media Termination Point (WS-SVC-CMM).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String128" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this transcoder.  </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="axl:UniqueString50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this transcoder.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="commonDeviceConfigId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Common Device Config for this transcoder.  </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonDeviceConfigName" type="axl:UniqueString50" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The name of the new Common Device Config  for this transcoder.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" nillable="true" minOccurs="0"/>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Used only for Cisco Media Termination Point (WS-SVC-CMM).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isTrustedRelayPoint" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for  Cisco Media Termination Point (WS-SVC-CMM). Valid values for this tag are 32,64,96,128. </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!--<xsd:element name="subUnit" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is used only by     Cisco Media Termination Point (WS-SVC-CMM)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>-->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTranscoder" type="axlapi:UpdateTranscoderReq"/>
	<xsd:element name="updateTranscoderResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getTranscoder" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTranscoderRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XTranscoder"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTranscoderResponse" type="axlapi:GetTranscoderRes"/>
	<xsd:element name="removeTranscoder" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeTranscoderResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMeetMeReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new meet me num plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="meetMe" type="axl:XNPMeetMe"/>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="addMeetMe" type="axlapi:AddMeetMeReq"/>
	<xsd:element name="addMeetMeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMeetMeReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Meet me number in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this meet me number.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="minimumSecurityLevel" type="axl:XDeviceSecurityMode" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMeetMe" type="axlapi:UpdateMeetMeReq"/>
	<xsd:element name="updateMeetMeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetMeetMeReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Meet-me Number/Pattern from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMeetMe" type="axlapi:GetMeetMeReq"/>
	<xsd:complexType name="GetMeetMeRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Meet me num plan specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="return">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="meetMe" type="axl:XNPMeetMe"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="getMeetMeResponse" type="axlapi:GetMeetMeRes"/>
	<xsd:complexType name="RemoveMeetMeReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Meet-me Number/Pattern from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMeetMe" type="axlapi:RemoveMeetMeReq"/>
	<xsd:element name="removeMeetMeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMOHServerReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="mohServer" type="axl:XMOHServer"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMOHServer" type="axlapi:AddMOHServerReq"/>
	<xsd:element name="addMOHServerResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMOHServerReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="name" type="axl:String100" nillable="false"/>
				<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
			</xsd:choice>
			<xsd:element name="newName" type="axl:UniqueName128" nillable="false" minOccurs="0"/>
			<xsd:element name="description" type="axl:String100" nillable="true" minOccurs="0"/>
			<xsd:sequence minOccurs="0">
				<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
					<xsd:annotation>
						<xsd:documentation>The GUID of the new Device Pool for this MOHServer. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:String100" nillable="false">
					<xsd:annotation>
						<xsd:documentation>The name of the new Device Pool for this MOHServer. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence minOccurs="0">
				<xsd:element name="locationId" type="axl:XUUID" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The GUID of the new location for this MOHServer.  Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String100" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The name of the new location for this MOHServer. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:element name="maxUnicastConnections" type="xsd:unsignedLong" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Maximum Half Duplex Streams must be a number in the range 0 to 500.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="maxMulticastConnections" type="xsd:unsignedLong" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Maximum Multicast Connections must be a number in the range 0 to 999999.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="fixedAudioSourceDevice" type="xsd:unsignedLong" nillable="true" minOccurs="0"/>
			<xsd:element name="runFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>If isMultiCastEnabled is false then these elements are not necessary.MOHServer will be added to the database without the values of  these tags.If the tag isMultiCastEnabled is not specified, then we are allowed to update audioSources details in case there are entries in mohservermulticastinfo table.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="isMultiCastEnabled" type="xsd:boolean" nillable="false" minOccurs="0"/>
				<xsd:element name="baseMulticastIPaddress" type="xsd:string" nillable="false" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>All Multicast IP Addresses must be in the range 239.1.1.1  to 239.255.255.255</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="baseMulticastPort" type="xsd:unsignedLong" nillable="false" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Multicast Base Port number must be an even number in the range 16384 to 32766</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="multicastIncrementOnIP" type="xsd:boolean" nillable="false" minOccurs="0"/>
				<xsd:element name="audioSources" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="audioSource" minOccurs="0" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="sourceId" type="xsd:unsignedLong" nillable="false"/>
										<xsd:element name="maxHops" type="xsd:unsignedLong" default="2" nillable="false" minOccurs="0"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="updateMOHServer" type="axlapi:UpdateMOHServerReq"/>
	<xsd:element name="updateMOHServerResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMOHServer" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMOHServerRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mohServer" type="axl:XMOHServer"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMOHServerResponse" type="axlapi:GetMOHServerRes"/>
	<xsd:element name="removeMOHServer" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeMOHServerResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Adds  new Conference Bridge to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newCFB" type="axl:XConferenceBridge"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addConferenceBridge" type="axlapi:AddConferenceBridgeReq"/>
	<xsd:element name="addConferenceBridgeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Conference Bridge from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Conference Bridge to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the  Conference Bridge to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeConferenceBridge" type="axlapi:RemoveConferenceBridgeReq"/>
	<xsd:element name="removeConferenceBridgeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateConferenceBridgeReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Should not be modified for Cisco Conference Bridge(WS-SVC-CMM)    and Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="locationName" type="xsd:Name" nillable="false"/>
					</xsd:choice>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Used only for               Cisco Video Conference Bridge(IPVC-35xx),          Cisco Conference Bridge (WS-SVC-CMM)             and Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is used only for Cisco Conference Bridge Hardware.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is  used only for Cisco Conference Bridge(WS-SVC-CMM)    and Cisco Media Server(WS-SVC-CMM-MS).  Valid values for this tag are 32,64,96,128.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Valid only for Cisco IOS Enhanced Conference Bridge</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50" nillable="false"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateConferenceBridge" type="axlapi:UpdateConferenceBridgeReq"/>
	<xsd:element name="updateConferenceBridgeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetConferenceBridgeReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified conference bridge from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Conference Bridge to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the Conference Bridge to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getConferenceBridge" type="axlapi:GetConferenceBridgeReq"/>
	<xsd:complexType name="GetConferenceBridgeRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XConferenceBridge"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getConferenceBridgeResponse" type="axlapi:GetConferenceBridgeRes"/>
	<xsd:complexType name="AddAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Pilot User  to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="pilotUser" type="axl:XPilotUser"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAttendantConsoleUser" type="axlapi:AddAttendantConsoleUserReq"/>
	<xsd:element name="addAttendantConsoleUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified pilot user from the database. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The GUID of the PilotUser to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The user Id of the PilotUser be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeAttendantConsoleUser" type="axlapi:RemoveAttendantConsoleUserReq"/>
	<xsd:element name="removeAttendantConsoleUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Pilot User in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="userId" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The userId of the pilot user to modify.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the pilot user to modify.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newUserId" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new UserId of the pilotUser.Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAttendantConsoleUser" type="axlapi:UpdateAttendantConsoleUserReq"/>
	<xsd:element name="updateAttendantConsoleUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetAttendantConsoleUserReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Pilot User from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the pilot user to be retrieved.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the pilot user to be retrieved.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleUser" type="axlapi:GetAttendantConsoleUserReq"/>
	<xsd:complexType name="GetAttendantConsoleUserRes">
		<xsd:annotation>
			<xsd:documentation>Returns the pilot user specified by the GetPilotUser request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pilotUser" type="axl:XPilotUser"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleUserResponse" type="axlapi:GetAttendantConsoleUserRes"/>
	<xsd:complexType name="AddAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds one new hunt group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newHuntGroup" type="axl:XPilotHuntGroup" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new hunt group to be added.Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAttendantConsoleHuntGroup" type="axlapi:AddAttendantConsoleHuntGroupReq"/>
	<xsd:element name="addAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing hunt group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="pilotPointId" type="axl:XUUID"/>
						<xsd:element name="pilotPointName"/>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this Hunt Group.If this element is null, then all members are removed from this hunt group.Note:If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XPilotHuntGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this hunt group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAttendantConsoleHuntGroup" type="axlapi:UpdateAttendantConsoleHuntGroupReq"/>
	<xsd:element name="updateAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified hunt group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="pilotPointId" type="axl:XUUID">
				<xsd:annotation>
					<xsd:documentation>The GUID of the pilotPoint associated with the hunt group to be retrieved.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pilotPointName" type="axl:String50">
				<xsd:annotation>
					<xsd:documentation>The name of the pilotPoint associated with the hunt group to be retrieved.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:element name="removeAttendantConsoleHuntGroup" type="axlapi:RemoveAttendantConsoleHuntGroupReq"/>
	<xsd:element name="removeAttendantConsoleHuntGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getAttendantConsoleHuntGroup" type="axlapi:GetAttendantConsoleHuntGroupReq"/>
	<xsd:complexType name="GetAttendantConsoleHuntGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the hunt group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="attendantConsoleHuntGroup" type="axl:XPilotHuntGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAttendantConsoleHuntGroupResponse" type="axlapi:GetAttendantConsoleHuntGroupRes"/>
	<xsd:complexType name="GetAttendantConsoleHuntGroupReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified hunt group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="pilotPointId" type="axl:XUUID">
				<xsd:annotation>
					<xsd:documentation>The GUID of the pilotPoint associated with the hunt group to be Removed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pilotPointName" type="axl:String50">
				<xsd:annotation>
					<xsd:documentation>The name of the pilotPoint associated with the hunt group to be Removed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="DeviceLoginReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>Logs-in the specified user to the specified phone.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the phone that is being logged-into.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of hte phone that is being logged-into.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="loginDuration" type="xsd:nonNegativeInteger" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The duration of the login.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice>
						<xsd:element name="profileId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the Device Profile to be used.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="profileName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the Device Profile to be used.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="userId" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The LDAP RN of the user that is to be logged-into the phone.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogin" type="axlapi:DeviceLoginReq"/>
	<xsd:complexType name="DeviceLoginResponse">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the login was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLoginResponse" type="axlapi:DeviceLoginResponse"/>
	<xsd:complexType name="DeviceLogoutReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>This method logs-out whichever user is logged-into the device.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the device to perform the log-out on.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the device to perform the log-out on.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogout" type="axlapi:DeviceLogoutReq"/>
	<xsd:complexType name="DeviceLogoutRes">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the log-out was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceLogoutResponse" type="axlapi:DeviceLogoutRes"/>
	<xsd:complexType name="DeviceResetReq">
		<xsd:annotation>
			<xsd:documentation>Performs either a hard or soft reset on the specified device.  If resetting an MGCP box, then set isMGCP attribute to true.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="deviceId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the device to perform a reset on.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="deviceName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the device to performs a reset on.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="isHardReset" type="xsd:boolean" nillable="false">
						<xsd:annotation>
							<xsd:documentation>True performs a hard reset.  False performs a soft reset.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="isMGCP" type="xsd:boolean" use="optional" default="false"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceReset" type="axlapi:DeviceResetReq">
		<xsd:annotation>
			<xsd:documentation>Performs either a hard or soft reset on the specified device.  If resetting an MGCP box, then set isMGCP attribute to true.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="DeviceResetRes">
		<xsd:annotation>
			<xsd:documentation>Returns "true" if the reset was performed successfully.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:StandardResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doDeviceResetResponse" type="axlapi:DeviceResetRes"/>
	<xsd:complexType name="AuthenticateUserReq" abstract="false">
		<xsd:annotation>
			<xsd:documentation>Authenticates the user on the basis of pin or password.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string"/>
					<xsd:choice>
						<xsd:element name="password" type="xsd:string"/>
						<xsd:element name="pin">
							<xsd:annotation>
								<xsd:documentation>Applicable for end users only.</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:pattern value="\d\d\d\d+"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doAuthenticateUser" type="axlapi:AuthenticateUserReq"/>
	<xsd:complexType name="AuthenticateUserResponse">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="userAuthenticated" type="xsd:boolean">
									<xsd:annotation>
										<xsd:documentation>true indicates that user was authenticated and false indicates that user was not authenticated.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="code" type="xsd:integer">
									<xsd:annotation>
										<xsd:documentation>This is the IMS result code that will be returned.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="doAuthenticateUserResponse" type="axlapi:AuthenticateUserResponse"/>
	<xsd:complexType name="AddLineReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Directory Number to the database.  Note that this does NOT associate a directory number with a phone.  Please use addPhone or updatePhone to do this.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newLine" type="axl:XNPDirectoryNumber" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new line to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLine" type="axlapi:AddLineReq"/>
	<xsd:element name="addLineResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveLineReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified line from the database.  The line can be specified by its GUID, or by a combination of its pattern, Route Partition Id, and Route Filter Id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeLine" type="axlapi:RemoveLineReq"/>
	<xsd:element name="removeLineResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateLineReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing line (directory number) in the database.  Can specify the line with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new directory number.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition GUID.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition name.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="aarDestinationMask" type="axl:String50" minOccurs="0"/>
					<xsd:element name="aarKeepCallHistory" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="aarVoiceMailEnabled" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="callForwardAll" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding on this line.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardBusy" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when this line is busy for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardBusyInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when this line is busy for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoAnswer" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no answer on this line for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoAnswerInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no answer on this line for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoCoverage" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no coverage on this line for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNoCoverageInt" type="axl:XCallForwardInfo" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when there is no coverage on this line for internal calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardOnFailure" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardAlternateParty" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNotRegistered" type="axl:XCallForwardInfo" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when the DN is not registered for external calls.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callForwardNotRegisteredInt" type="axl:XCallForwardInfo" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Calling Search Space and destination for Call Forwarding when the DN is not registered for internal calls</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callPickupGroup" type="axl:XNPCallPickupGroup">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callPickupGroupName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="autoAnswer" type="axl:XAutoAnswer" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The only valid values are Auto Answer with Headset and Auto Answer with Speakerphone.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="alertingName" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:element name="asciiAlertingName" type="axl:String32" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroupId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID for the new Presence Group used for this directory number.  Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="presenceGroupName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="shareLineAppearanceCSSId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID for the new Calling Search Space used for the Shared Line Appearance for this line.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="shareLineAppearanceCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="voiceMailProfileId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Voice Messaging Profile for this directory number.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="voiceMailProfileName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="hrDuration" type="xsd:long" nillable="false" minOccurs="0"/>
					<xsd:element name="hrInterval" type="xsd:long" nillable="false" minOccurs="0"/>
					<xsd:element name="cfaCSSPolicy" type="axl:XCFACSSActivationPolicy" default="Use System Default" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable for only intercom lines and if not set, intercom lines will not be active.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="defaultActivatedDeviceId" type="axl:XUUID"/>
						<xsd:element name="defaultActivatedDeviceName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLine" type="axlapi:UpdateLineReq"/>
	<xsd:element name="updateLineResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetLineReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified line (directory number) from the database.  Can specify the line with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLine" type="axlapi:GetLineReq"/>
	<xsd:complexType name="GetLineRes">
		<xsd:annotation>
			<xsd:documentation>Contains the directory number that was specified by the GetLine request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="directoryNumber" type="axl:XNPDirectoryNumber"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLineResponse" type="axlapi:GetLineRes"/>
	<xsd:complexType name="AddUserReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new user to the user directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newUser" type="axl:XUser">
						<xsd:annotation>
							<xsd:documentation>The new user to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addUser" type="axlapi:AddUserReq"/>
	<xsd:element name="addUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveUserReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified user from the user directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The ID of the user to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeUser" type="axlapi:RemoveUserReq"/>
	<xsd:element name="removeUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing user in the directory.  Specify the user to be modified with their LDAP RN.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="firstname" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new first name (given name) of the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lastname" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new last name (surname) of the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new password for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="pin" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new PIN (personal identification number) for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="^\d+$"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="telephoneNumber" type="axl:XDirectoryNumber" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new telephone number for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="extension" type="axl:XDirectoryNumber" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="department" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new department for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="manager" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new manager for the user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new locale for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="associatedDevices" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The devices associated with this user.  Also known as controlled devices.  If "associateDevices" is present, then all current associated devices are replaced by the devices listed underneath the "associatedDevices" element.                             If this element is null, then all devices are removed from the user.                  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:String50" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Name of device. If this element is null, then all devices are removed from the user.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="primaryExtension" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Only DNs associated with the associatedDevices of the  User can be used as primary extension.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XDirectoryNumber" nillable="false">
									<xsd:annotation>
										<xsd:documentation>DN or Pattern</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="routePartitionName" type="axl:String50" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Route Partition to which the DN is associated.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="associatedPC" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new PC associated with this user.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authenticationProxyRights" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="enableCTI" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="enableCTISuperProvider" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="allowCallParkRetrieval" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingNumberModAllowed" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="iaqExtension" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneProfiles" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If this element is null, then all phone profiles are removed from the user.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:annotation>
										<xsd:documentation>If this element is null, then all the phone profiles are removed from the user.</xsd:documentation>
									</xsd:annotation>
									<xsd:element name="profile" type="axl:XPhoneProfile" nillable="false" maxOccurs="unbounded">
										<xsd:annotation>
											<xsd:documentation>The complete profile object.  Only the "uuid" attribute is used by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="profileName" type="xsd:string" nillable="false" maxOccurs="unbounded">
										<xsd:annotation>
											<xsd:documentation>The profile name.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="enableMobility" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableMobileVoiceAccess" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="maxDeskPickupWaitTime" type="xsd:unsignedLong" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Maximum wait time for Desk Pickup must be a number in the range 0 to 30000. Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="remoteDestinationLimit" type="xsd:unsignedShort" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Remote Destination Limit must be a number in the range 1 to 10. Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="passwordCredentials" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:choice minOccurs="0">
									<xsd:element name="pwdCredPolicy" type="axl:XUUID">
										<xsd:annotation>
											<xsd:documentation>Only uuid can be accepted.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="pwdCredPolicyName" type="axl:String50"/>
								</xsd:choice>
								<xsd:element name="pwdCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredResetHackCount" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredSetLockOut" type="xsd:boolean" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="pinCredentials" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:choice minOccurs="0">
									<xsd:element name="pinCredPolicy" type="axl:XUUID">
										<xsd:annotation>
											<xsd:documentation>Ony uuid attribute can be accepted.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="pinCredPolicyName" type="axl:String50"/>
								</xsd:choice>
								<xsd:element name="pinCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pinCredUserMustChange can be true or pinCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pinCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pinCredUserMustChange can be true or pinCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pinCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pinCredResetHackCount" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pinCredSetLockOut" type="xsd:boolean" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="primaryDevice" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation> Primary devices for mobility users</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateUser" type="axlapi:UpdateUserReq"/>
	<xsd:element name="updateUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetUserReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified user from the directory.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The ID of the user to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUser" type="axlapi:GetUserReq"/>
	<xsd:complexType name="GetUserRes">
		<xsd:annotation>
			<xsd:documentation>Contains the user that was specified by the GetUser request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="user" type="axl:XUser"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUserResponse" type="axlapi:GetUserRes"/>
	<!-- Application User API starts -->
	<xsd:complexType name="AddAppUserReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new application user.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newApplicationUser" type="axl:XApplicationUser">
						<xsd:annotation>
							<xsd:documentation>The new application user to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addAppUser" type="axlapi:AddAppUserReq"/>
	<xsd:element name="addAppUserResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateAppUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing application user in the directory.  Specify the user to be modified with their LDAP RN.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new password for the user. Valid range is 1-127 characters. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="passwordCredentials" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:choice minOccurs="0">
									<xsd:element name="pwdCredPolicy">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:complexContent>
												<xsd:extension base="axl:XCredentialPolicy">
													<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
												</xsd:extension>
											</xsd:complexContent>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="pwdCredPolicyName" type="axl:String50"/>
								</xsd:choice>
								<xsd:element name="pwdCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredResetHackCount" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredSetLockOut" type="xsd:boolean" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Valid range is 1-42 characters.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroup" type="axl:XPresenceGroup" nillable="false" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="presenceGroupName" type="axl:String50" nillable="false" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="acceptPresenceSubscription" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="allowReplaceHeader" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="associatedDevices" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The devices associated with this user.  Also known as controlled devices.  If "associateDevices" is present, then all current associated devices are replaced by the devices listed underneath the "associatedDevices" element.  If this element is null, then all devices are removed from the user. Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="device" type="axl:String50" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Name of device. If this element is null, then all devices are removed from the user.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="associatedGroups" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The existing association with User Groups will be removed and new set of associations with user groups will be created.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="userGroup" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence minOccurs="0">
											<xsd:element name="name" type="axl:String100" nillable="false" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Name of User Group</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAppUser" type="axlapi:UpdateAppUserReq"/>
	<xsd:element name="updateAppUserResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getAppUser" type="axlapi:GetUserReq"/>
	<xsd:complexType name="GetAppUserRes">
		<xsd:annotation>
			<xsd:documentation>Contains the user that was specified by the GetUser request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="applicationUser" type="axl:XApplicationUser"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getAppUserResponse" type="axlapi:GetAppUserRes"/>
	<xsd:element name="removeAppUser" type="axlapi:RemoveUserReq"/>
	<xsd:element name="removeAppUserResponse" type="axlapi:StandardResponse"/>
	<!-- Application User API ends -->
	<xsd:complexType name="StandardResponse">
		<xsd:annotation>
			<xsd:documentation>Returns either the GUID of the object that was altered, or returns true if the operation was successful.  Whichever is appropriate for the corresponding request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new device profile to the databse.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newProfile" type="axl:XPhoneProfile">
						<xsd:annotation>
							<xsd:documentation>The new profile to be added. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDeviceProfile" type="axlapi:AddDeviceProfileReq"/>
	<xsd:element name="addDeviceProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified device profile from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="profileId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the profile to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="profileName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the profile to be removed. Not nullable</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeDeviceProfile" type="axlapi:RemoveDeviceProfileReq"/>
	<xsd:element name="removeDeviceProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing device profile in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of the profile.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the profile.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is not valid for a device profile.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="presenceGroupID" type="axl:XUUID" nillable="false"/>
						<xsd:element name="PresenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this profile.  If this element is null, then all lines are removed from this profile.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All lines specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplateId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Phone Template for this profile.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new speed-dials for this profile.  If this element is null, then all speed-dials are removed from this profile.  Note:  If the "speeddials" element is present, then all existing speed-dials are removed and replaced with the "speeddial" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Busy Lamp Fields for this profile.  If this element is null, then all  Busy Lamp Fields are removed from this profile.  Note:  If the " Busy Lamp Fields" element is present, then all existing  Busy Lamp Fields are removed and replaced with the " Busy Lamp Field" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampField" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ringSettingIdleBLFAudibleAlert" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="ringSettingBusyBLFAudibleAlert" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="addOnModules" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Add-on Modules associated with this profile.  If this element is null, then all Add-on Modules are removed from this profile.  Note:  If the "addOnModules" element is present, then all existing Add-on Modules are removed and replaced with the "addOnModule" sub-elements.  All Add-on Modules specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="services" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new subscribed services for this profile.  If this element is null, then all services are removed from this profile.  Note:  If the "services" element is present, then all existing services are removed and replaced with the "service" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="softkeyTemplateId" type="axl:XUUID"/>
						<xsd:element name="softkeyTemplateName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loginUserId" type="axl:String255" nillable="false" minOccurs="0"/>
					<xsd:element name="singleButtonBarge" type="axl:XBarge" nillable="false" minOccurs="0"/>
					<xsd:element name="joinAcrossLines" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndOption" type="axl:XDNDOption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndRingSetting" type="axl:XRingSetting" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDeviceProfile" type="axlapi:UpdateDeviceProfileReq"/>
	<xsd:element name="updateDeviceProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetDeviceProfileReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Device Profile from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="profileId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the profile to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="profileName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the profile to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceProfile" type="axlapi:GetDeviceProfileReq"/>
	<xsd:complexType name="GetDeviceProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the device profile that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="profile" type="axl:XPhoneProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDeviceProfileResponse" type="axlapi:GetDeviceProfileRes"/>
	<xsd:complexType name="AddTimePeriodReq" abstract="false" final="#all">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="timePeriod" type="axl:XTimePeriod"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTimePeriod" type="axlapi:AddTimePeriodReq"/>
	<xsd:element name="addTimePeriodResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getTimePeriod" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTimePeriodRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="timePeriod" type="axl:XTimePeriod"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTimePeriodResponse" type="axlapi:GetTimePeriodRes"/>
	<xsd:element name="removeTimePeriod" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeTimePeriodResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateTimePeriodReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="startTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
					<xsd:element name="endTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
					<xsd:element name="startDay" type="axl:XDayOfWeek" minOccurs="0"/>
					<xsd:element name="endDay" type="axl:XDayOfWeek" minOccurs="0"/>
					<xsd:element name="monthOfYear" type="axl:XMonthOfYear" minOccurs="0"/>
					<xsd:element name="dayOfMonth" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="description" type="axl:String255" minOccurs="0"/>
					<xsd:element name="dayOfMonthEnd" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="monthOfYearEnd" type="axl:XMonthOfYear" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTimePeriod" type="axlapi:UpdateTimePeriodReq"/>
	<xsd:element name="updateTimePeriodResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddTimeScheduleReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="timeSchedule" type="axl:XTimeSchedule"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTimeSchedule" type="axlapi:AddTimeScheduleReq"/>
	<xsd:element name="addTimeScheduleResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getTimeSchedule" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTimeScheduleRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="timeSchedule" type="axl:XTimeSchedule"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTimeScheduleResponse" type="axlapi:GetTimeScheduleRes"/>
	<xsd:element name="removeTimeSchedule" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeTimeScheduleResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateTimeScheduleReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XTimeScheduleTimePeriod" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="description" type="axl:String255" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTimeSchedule" type="axlapi:UpdateTimeScheduleReq"/>
	<xsd:element name="updateTimeScheduleResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddTODAccessReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="TODAccess" type="axl:XTODAccess"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTODAccess" type="axlapi:AddTODAccessReq"/>
	<xsd:element name="addTODAccessResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getTODAccess" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetTODAccessRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="TODAccess" type="axl:XTODAccess"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTODAccessResponse" type="axlapi:GetTODAccessRes"/>
	<xsd:complexType name="UpdateTODAccessReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String128" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String255" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of TODAccess.  If "members" is present, then all current members of this are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XTODAccessMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTODAccess" type="axlapi:UpdateTODAccessReq"/>
	<xsd:element name="updateTODAccessResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeTODAccess" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeTODAccessResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new route partition to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newRoutePartition" type="axl:XRoutePartition" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The route partition to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRoutePartition" type="axlapi:AddRoutePartitionReq"/>
	<xsd:element name="addRoutePartitionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route partition in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the route partition to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the route partition to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this route partition.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this route partition.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="newTimeScheduleId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Time Schedule GUID for this Route Partition. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newTimeScheduleName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="useOriginatingDeviceTimeZone" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="timeZone" type="axl:XTimeZone" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRoutePartition" type="axlapi:UpdateRoutePartitionReq"/>
	<xsd:element name="updateRoutePartitionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified route partition from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="partitionId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="partitionName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRoutePartition" type="axlapi:RemoveRoutePartitionReq"/>
	<xsd:element name="removeRoutePartitionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetRoutePartitionReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified route partition from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="partitionId" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the route partition to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="partitionName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the route partition to be removed.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePartition" type="axlapi:GetRoutePartitionReq"/>
	<xsd:complexType name="GetRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route partition that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePartition" type="axl:XRoutePartition"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePartitionResponse" type="axlapi:GetRoutePartitionRes"/>
	<xsd:element name="getCSS" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCSSRes">
		<xsd:annotation>
			<xsd:documentation>Contains the calling search space that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCSSResponse" type="axlapi:GetCSSRes"/>
	<xsd:element name="removeCSS" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCSSResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCSSReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Calling Search Space to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newCSS" type="axl:XCallingSearchSpace" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The calling search space to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCSS" type="axlapi:AddCSSReq"/>
	<xsd:element name="addCSSResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCSSReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Calling Search Space in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the calling search space to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the calling search space to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this calling search space.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this calling search space.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this calling search space.  If "members" is present, then all current members of this calling search space are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XCallingSearchSpaceMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCSS" type="axlapi:UpdateCSSReq"/>
	<xsd:element name="updateCSSResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateNumPlanPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetNumPlanPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID"/>
						<xsd:sequence>
							<xsd:element name="pattern" type="xsd:string"/>
							<xsd:choice>
								<xsd:element name="routePartitionId" type="axl:XUUID"/>
								<xsd:element name="routePartitionName" type="axl:String50"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetCallPickupGroupBase" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>This is the uuid of CallPickupGroup</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="name" type="axl:String50"/>
						<xsd:sequence>
							<xsd:element name="pattern" type="xsd:string"/>
							<xsd:choice>
								<xsd:element name="routePartitionId" type="axl:XUUID"/>
								<xsd:element name="routePartitionName" type="axl:String50"/>
							</xsd:choice>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>Some NumPlans do not require a Route Filter, thus these elements can be null.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="routeFilterId" type="axl:XUUID"/>
								<xsd:element name="routeFilterName" type="axl:String50"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GetTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Translation Pattern from the database. Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransPattern" type="axlapi:GetTransPatternReq"/>
	<xsd:complexType name="GetTransPatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the translation pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPTranslationPattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransPatternResponse" type="axlapi:GetTransPatternRes"/>
	<xsd:complexType name="RemoveTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified translation pattern from the database.  Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeTransPattern" type="axlapi:RemoveTransPatternReq"/>
	<xsd:element name="removeTransPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new translation pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPTranslationPattern">
						<xsd:annotation>
							<xsd:documentation>The new pattern to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTransPattern" type="axlapi:AddTransPatternReq"/>
	<xsd:element name="addTransPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateTransPatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing translation pattern in the database.  Can specify the translation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this tranlsation pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this tranlsation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:element name="callingPartyPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XUUID"/>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID"/>
						<xsd:element name="digitDiscardInstructionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this translation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is not valid for a translation pattern.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new calling search space for this translation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Default value would be Null in case not specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="resourcePriorityNamespace" type="axl:XResourcePriorityNamespace" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTransPattern" type="axlapi:UpdateTransPatternReq"/>
	<xsd:element name="updateTransPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new transformation pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPTransformationPattern">
						<xsd:annotation>
							<xsd:documentation>The new pattern to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addTransformationPattern" type="axlapi:AddTransformationPatternReq"/>
	<xsd:element name="addTransformationPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Transformation Pattern from the database. Can specify the transformation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransformationPattern" type="axlapi:GetTransformationPatternReq"/>
	<xsd:complexType name="GetTransformationPatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the transformation pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPTransformationPattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getTransformationPatternResponse" type="axlapi:GetTransformationPatternRes"/>
	<xsd:complexType name="UpdateTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing transformation pattern in the database.  Can specify the transformation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this transformation pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XRoutePartition">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this transformation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callingPartyTransformationMask" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XDialPlan"/>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XRouteFilter">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this transformation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateTransformationPattern" type="axlapi:UpdateTransformationPatternReq"/>
	<xsd:element name="updateTransformationPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified transformation pattern from the database.  Can specify the transformation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeTransformationPattern" type="axlapi:RemoveTransformationPatternReq"/>
	<xsd:element name="removeTransformationPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCalledPartyTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new called party transformation pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPCalledPartyTransformationPattern">
						<xsd:annotation>
							<xsd:documentation>The new pattern to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCalledPartyTransformationPattern" type="axlapi:AddCalledPartyTransformationPatternReq"/>
	<xsd:element name="addCalledPartyTransformationPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetCalledPartyTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Called Party Transformation Pattern from the database. Can specify the transformation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCalledPartyTransformationPattern" type="axlapi:GetCalledPartyTransformationPatternReq"/>
	<xsd:complexType name="GetCalledPartyTransformationPatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Called Party transformation pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPCalledPartyTransformationPattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCalledPartyTransformationPatternResponse" type="axlapi:GetCalledPartyTransformationPatternRes"/>
	<xsd:complexType name="UpdateCalledPartyTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Called Party transformation pattern in the database.  Can specify the transformation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this transformation pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this transformation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="calledPartyTransformationMask" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="dialPlanName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="prefixDigitsOut" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this transformation pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="calledPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCalledPartyTransformationPattern" type="axlapi:UpdateCalledPartyTransformationPatternReq"/>
	<xsd:element name="updateCalledPartyTransformationPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveCalledPartyTransformationPatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Called Party Transformation pattern from the database.  Can specify the transformation pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeCalledPartyTransformationPattern" type="axlapi:RemoveCalledPartyTransformationPatternReq"/>
	<xsd:element name="removeCalledPartyTransformationPatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Route Pattern from the database.  Can specify the route pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePattern" type="axlapi:GetRoutePatternReq"/>
	<xsd:complexType name="GetRoutePatternRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route pattern that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPRoutePattern"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRoutePatternResponse" type="axlapi:GetRoutePatternRes"/>
	<xsd:complexType name="RemoveRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified route pattern from the database.  Can specify the route pattern with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRoutePattern" type="axlapi:RemoveRoutePatternReq"/>
	<xsd:element name="removeRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Pattern to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPRoutePattern" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new route pattern to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRoutePattern" type="axlapi:AddRoutePatternReq"/>
	<xsd:element name="addRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRoutePatternReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route pattern in the database.  The route pattern can be specified by its GUID, or by a combination if its pattern, route partition GUID, and route filter GUID.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this route pattern.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route partition of this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="dialPlanName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" minOccurs="0"/>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="allowDeviceOverride" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="provideOutsideDialtone" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="destination" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new destination for this route pattern. Can be a gateway or a route list.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="gateway" type="axl:XDevice"/>
										<xsd:element name="gatewayName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="routeList" type="axl:XRouteList"/>
										<xsd:element name="routeListName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="authorizationCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="authorizationLevelRequired" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="clientCodeRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="withTag" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read Only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="withValueClause" type="axl:String255" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read Only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isdnNSFInfoElement" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If blank tag is passed then the NSF Information is removed for the corresponding route pattern.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="cic" type="axl:String100" nillable="true" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>If not specified then a default value of '0' is set. This tag is not applicable to networkServiceProtocol PRI NI2. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="networkServiceProtocol" type="axl:String100" nillable="false">
									<xsd:annotation>
										<xsd:documentation>It is a mandatory tag if anychild tag of isdnNSFInfoElement is specified.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="networkService" type="axl:String100" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>If not specified then the first record based on the protocol in NSFProtocolServiceMap table will be set as the default value.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="paramValue" type="axl:String100" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This parameter will take effect only if the selected network service has a valid  parameterName in TypeNSFService.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Default value would be Null in case not specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="resourcePriorityNamespace" type="axl:XResourcePriorityNamespace" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRoutePattern" type="axlapi:UpdateRoutePatternReq"/>
	<xsd:element name="updateRoutePatternResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Hunt Pilot from the database.  Can specify the hunt pilot with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntPilot" type="axlapi:GetHuntPilotReq"/>
	<xsd:complexType name="GetHuntPilotRes">
		<xsd:annotation>
			<xsd:documentation>Contains the hunt pilot that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pattern" type="axl:XNPHuntPilot"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntPilotResponse" type="axlapi:GetHuntPilotRes"/>
	<xsd:complexType name="RemoveHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified hunt pilot from the database.  Can specify the hunt pilot with its GUID or by a combination of its pattern, route partition id, and route filter id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeHuntPilot" type="axlapi:RemoveHuntPilotReq"/>
	<xsd:element name="removeHuntPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Hunt PIlot to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XNPHuntPilot" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The new hunt pilot to be added.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addHuntPilot" type="axlapi:AddHuntPilotReq"/>
	<xsd:element name="addHuntPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateHuntPilotReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing hunt pilot in the database.  The hunt pilot can be specified by its GUID, or by a combination if its pattern, route partition GUID, and route filter GUID.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new pattern for this hunt pilot.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Route Partition of this hunt pilot.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="blockEnable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="dialPlanName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" minOccurs="0"/>
						<xsd:element name="digitDiscardInstructionId" type="axl:XUUID" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate" minOccurs="0"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" minOccurs="0"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRouteFilterId" type="axl:XUUID" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new route filter for this route pattern.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRouteFilterName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="destination" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new destination for this hunt pilot. Can only be a hunt list.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="huntList" type="axl:XHuntList"/>
									<xsd:element name="huntListName" type="xsd:string"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ForwardHuntBusy" type="axl:XHuntForwardInfo" minOccurs="0"/>
					<xsd:element name="ForwardHuntNoAnswer" type="axl:XHuntForwardInfo" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This is applicable only if Cisco support use 1 Enterprise parameter is set.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callPickupGroup" type="axl:XNPCallPickupGroup">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callPickupGroupName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateHuntPilot" type="axlapi:UpdateHuntPilotReq"/>
	<xsd:element name="updateHuntPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddLineGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Line Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="lineGroup" type="axl:XLineGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLineGroup" type="axlapi:AddLineGroupReq"/>
	<xsd:element name="addLineGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateLineGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing line group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this line group.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="distributionAlgorithm" type="axl:XDistributeAlgorithm" nillable="false"/>
					<xsd:element name="rnaReversionTimeOut" type="xsd:nonNegativeInteger" default="10" nillable="false"/>
					<xsd:element name="huntAlgorithmNoAnswer" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="huntAlgorithmBusy" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="huntAlgorithmNotAvailable" type="axl:XHuntAlgorithm" nillable="false"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This new line group members for this route group.  All of the line group's current members are replaced by the "member" sub-elements specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XLineGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this Line group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLineGroup" type="axlapi:UpdateLineGroupReq"/>
	<xsd:element name="updateLineGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getLineGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetLineGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the line group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="lineGroup" type="axl:XLineGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLineGroupResponse" type="axlapi:GetLineGroupRes"/>
	<xsd:element name="removeLineGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeLineGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRouteGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeGroup" type="axl:XRouteGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteGroup" type="axlapi:AddRouteGroupReq"/>
	<xsd:element name="addRouteGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRouteGroupReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing route group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this route group.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This new route group members for this route group.  All of the route group's current members are replaced by the "member" sub-elements specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteGroupMember" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this route group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteGroup" type="axlapi:UpdateRouteGroupReq"/>
	<xsd:element name="updateRouteGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRouteGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the route group that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeGroup" type="axl:XRouteGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteGroupResponse" type="axlapi:GetRouteGroupRes"/>
	<xsd:element name="removeRouteGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRouteListReq">
		<xsd:annotation>
			<xsd:documentation>Add a new Route List to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeList" type="axl:XRouteList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteList" type="axlapi:AddRouteListReq"/>
	<xsd:element name="addRouteListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRouteListReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Route List in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the route list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the route list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Route List. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Route List.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new list of route groups that are part of this route list. A route list must have at least one member.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteList" type="axlapi:UpdateRouteListReq"/>
	<xsd:element name="updateRouteListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRouteList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteListRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Route List that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeList" type="axl:XRouteList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteListResponse" type="axlapi:GetRouteListRes"/>
	<xsd:element name="removeRouteList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddHuntListReq">
		<xsd:annotation>
			<xsd:documentation>Add a new Hunt List to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="huntList" type="axl:XHuntList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addHuntList" type="axlapi:AddHuntListReq"/>
	<xsd:element name="addHuntListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateHuntListReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Hunt List in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the hunt list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The pkid of the hunt list to modify (from the Device table).</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Hunt List. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Hunt List.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new list of line groups that are part of this route list. A route list must have at least one member.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XHuntListMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateHuntList" type="axlapi:UpdateHuntListReq"/>
	<xsd:element name="updateHuntListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getHuntList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetHuntListRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Hunt List that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="huntList" type="axl:XHuntList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getHuntListResponse" type="axlapi:GetHuntListRes"/>
	<xsd:element name="removeHuntList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeHuntListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCTIRoutePointReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new CTI Route Point to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routePoint" type="axl:XCTIRoutePoint"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCTIRoutePoint" type="axlapi:AddCTIRoutePointReq"/>
	<xsd:element name="addCTIRoutePointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCTIRoutePointReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing CTI Route Point in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:Name128" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:Name128" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of this Route Point.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String128" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Route Point.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Calling Search Space for this Route Point.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The new Device Pool for this Route Point. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="axl:Name128">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="commonDeviceConfigId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonDeviceConfigName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new location for this Route Point.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceList" type="axl:XMediaResourceList">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" minOccurs="0"/>
					<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0"/>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCTIRoutePoint" type="axlapi:UpdateCTIRoutePointReq"/>
	<xsd:element name="updateCTIRoutePointResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCTIRoutePoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCTIRoutePointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CTI Route Point that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePoint" type="axl:XCTIRoutePoint"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCTIRoutePointResponse" type="axlapi:GetCTIRoutePointRes"/>
	<xsd:element name="removeCTIRoutePoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCTIRoutePointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDHCPSubnetReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new DHCP Subnet to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newDHCPSubnet" type="axl:XDHCPSubnet" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDHCPSubnet" type="axlapi:AddDHCPSubnetReq"/>
	<xsd:element name="addDHCPSubnetResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="DHCPSubnetReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDHCPSubnet" type="axlapi:DHCPSubnetReq"/>
	<xsd:complexType name="GetDHCPSubnetRes">
		<xsd:annotation>
			<xsd:documentation>Contains the DHCP Subnet that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="DHCPSubnet" type="axl:XDHCPSubnet"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDHCPSubnetResponse" type="axlapi:GetDHCPSubnetRes"/>
	<xsd:complexType name="UpdateDHCPSubnetReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing DHCP Subnet in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the DHCP Subnet  to be modified.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Each DHCPSubnet is associated with a unique DHCP Server.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dhcpServer" type="axl:XDHCPServer">
							<xsd:annotation>
								<xsd:documentation>only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dhcpServerName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="subnetIPAddress" type="xsd:string" minOccurs="0"/>
					<xsd:element name="primaryStartIPAddress" type="xsd:string" minOccurs="0"/>
					<xsd:element name="primaryEndIPAddress" type="xsd:string" minOccurs="0"/>
					<xsd:element name="secondaryStartIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="secondaryEndIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="primaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="secondaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="subnetMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="domainName" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="primaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="secondaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="tftpServerName" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="primaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="secondaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="bootstrapServerIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="renewalTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDHCPSubnet" type="axlapi:UpdateDHCPSubnetReq"/>
	<xsd:element name="updateDHCPSubnetResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeDHCPSubnet" type="axlapi:DHCPSubnetReq"/>
	<xsd:element name="removeDHCPSubnetResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Dial Plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="dialPlan" type="axl:XDialPlan"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDialPlan" type="axlapi:AddDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="UpdateDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Dial Plan in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Dial Plan.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description for this Dial Plan.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDialPlan" type="axlapi:UpdateDialPlanReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanResponse" type="axlapi:StandardResponse"/>-->
	<xsd:element name="getDialPlan" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetDialPlanRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Dial Plan that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="dialPlan" type="axl:XDialPlan"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDialPlanResponse" type="axlapi:GetDialPlanRes"/>
	<!--<xsd:element name="removeDialPlan" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="AddDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Dial Plan Tag to the databse</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="dialPlanTag" type="axl:XDialPlanTag" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDialPlanTag" type="axlapi:AddDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="UpdateDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Dial Plan Tag in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The name (or "tag" in the database) for this Dial Plan Tag. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlan" type="axl:XDialPlan" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The new Dial Plan for this Dial Plan Tag. Note that the "uuid" attribute is used. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="operator" type="axl:XOperator" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Operator type for this Dial Plan Tag. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="suppressFromRouteFilter" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new boolean value for the suppressFromRouteFilter property of this Dial Plan Tag.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDialPlanTag" type="axlapi:UpdateDialPlanTagReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="getDialPlanTagReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="name" type="axl:String50"/>
					<xsd:sequence>
						<xsd:choice>
							<xsd:element name="dialPlanUuid" type="axl:XUUID"/>
							<xsd:element name="dialPlanName" type="xsd:string"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:sequence>
				<xsd:element name="uuid" type="axl:XUUID"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="getDialPlanTag" type="axlapi:getDialPlanTagReq"/>
	<xsd:complexType name="GetDialPlanTagRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Dial Plan Tag that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="dialPlanTag" type="axl:XDialPlanTag"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDialPlanTagResponse" type="axlapi:GetDialPlanTagRes"/>
	<!--<xsd:element name="removeDialPlanTag" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDialPlanTagResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="AddCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Call Park num plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callPark" type="axl:XNPCallPark" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallPark" type="axlapi:AddCallParkReq"/>
	<xsd:element name="addCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Call Park num plan in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new directory number for this Call Park num plan.  Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition GUID for this Call Park num plan. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="callManagerId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new CallManager associated to this Call Park num plan.  Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallPark" type="axlapi:UpdateCallParkReq"/>
	<xsd:element name="updateCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPark" type="axlapi:GetCallParkReq"/>
	<xsd:complexType name="GetCallParkRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Call Park num plan specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callPark" type="axl:XNPCallPark"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallParkResponse" type="axlapi:GetCallParkRes"/>
	<xsd:complexType name="RemoveCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeCallPark" type="axlapi:RemoveCallParkReq"/>
	<xsd:element name="removeCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDirectedCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Directed Call Park num plan to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="directedCallPark" type="axl:XNPDirectedCallPark" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDirectedCallPark" type="axlapi:AddDirectedCallParkReq"/>
	<xsd:element name="addDirectedCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateDirectedCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Directed Call Park num plan in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern">
				<xsd:sequence>
					<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new directory number for this Call Park num plan.  Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The new Route Partition GUID for this Call Park num plan. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:element name="retrievalPrefix" type="xsd:string" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The new prefix used for park-code retrieval. User will dial prefix plus park code to retrieve a parked call. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="reversionPattern" type="xsd:string" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The new pattern used to revert the call when the parked call is not retrieved within retrieval timer. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>To be configured only when reversion pattern is not empty.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="revertCSS">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axl:XCallingSearchSpace"/>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="revertCSSName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDirectedCallPark" type="axlapi:UpdateDirectedCallParkReq"/>
	<xsd:element name="updateDirectedCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetDirectedCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Directed Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDirectedCallPark" type="axlapi:GetDirectedCallParkReq"/>
	<xsd:complexType name="GetDirectedCallParkRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Directed Call Park num plan specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="directedCallPark" type="axl:XNPDirectedCallPark"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDirectedCallParkResponse" type="axlapi:GetDirectedCallParkRes"/>
	<xsd:complexType name="RemoveDirectedCallParkReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Directed Call Park num plan from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetNumPlanPattern"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeDirectedCallPark" type="axlapi:RemoveDirectedCallParkReq"/>
	<xsd:element name="removeDirectedCallParkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Call Pickup Group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callPickup" type="axl:XNPCallPickupGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallPickupGroup" type="axlapi:AddCallPickupGroupReq"/>
	<xsd:element name="addCallPickupGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Modifies and existing Call Pickup Group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetCallPickupGroupBase">
				<xsd:sequence>
					<xsd:element name="newPattern" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="newRoutePartitionId" type="axl:XUUID"/>
						<xsd:element name="newRoutePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>On Addition always the first member added is itself. Do not specify the first member as itself in an Add request . Also make sure that the priority always starts with 1. It will internally be taken care of during Addition and Updation.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XPickupGroupMember" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>A list of the new members of this Pickup group.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="pickupNotification" type="axl:XPickupNotification" default="No Alert" nillable="false" minOccurs="0"/>
					<xsd:element name="pickupNotificationTimer" type="xsd:nonNegativeInteger" default="6" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoForPickupNotification" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable when Pickup Notification Policy is "Visual Alert" or "Visual or Audio Alert".</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="callingPartyInfo" type="xsd:boolean" default="false" nillable="false"/>
								<xsd:element name="calledPartyInfo" type="xsd:boolean" default="false" nillable="false"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallPickupGroup" type="axlapi:UpdateCallPickupGroupReq"/>
	<xsd:element name="updateCallPickupGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Call Pickup Group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetCallPickupGroupBase"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPickupGroup" type="axlapi:GetCallPickupGroupReq"/>
	<xsd:complexType name="GetCallPickupGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Call Pickup Group specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callPickup" type="axl:XNPCallPickupGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallPickupGroupResponse" type="axlapi:GetCallPickupGroupRes"/>
	<xsd:complexType name="RemoveCallPickupGroupReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Call Pickup Group from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetCallPickupGroupBase"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeCallPickupGroup" type="axlapi:RemoveCallPickupGroupReq"/>
	<xsd:element name="removeCallPickupGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddDDIReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Digit Discard Instruction to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="ddi" type="axl:XDigitDiscardInstruction"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="addDDI" type="axlapi:AddDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="addDDIResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="UpdateDDIReq">
		<xsd:annotation>
			<xsd:documentation>Modifies and existing Digit Discard Instruction in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Digit Discard Instruction. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The GUID or name of the new Dial Plan for this Digit Discard Instruction.  Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlanId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="dialPlanName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The "members" element will contain the new list of members of this Digit Discard Instruction.  If the "members" element is present, any existing members are deleted and replaced by the new "member" elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XDigitDiscardInstructionMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="updateDDI" type="axlapi:UpdateDDIReq">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateDDIResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="getDDIReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="name" type="axl:String50"/>
					<xsd:sequence>
						<xsd:choice>
							<xsd:element name="dialPlanUuid" type="axl:XUUID"/>
							<xsd:element name="dialPlanName" type="axl:String50"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:sequence>
				<xsd:element name="uuid" type="axl:XUUID"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="getDDI" type="axlapi:getDDIReq"/>
	<xsd:complexType name="GetDDIRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Digit Discard Instruction specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="ddi" type="axl:XDigitDiscardInstruction"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDDIResponse" type="axlapi:GetDDIRes"/>
	<!--<xsd:element name="removeDDI" type="axlapi:NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This API call is experimental and not supported in normal operation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeDDIResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="CreateAutogeneratedProfileReq">
		<xsd:annotation>
			<xsd:documentation>This method uses the specified phone to create an auto-generated device profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="phoneName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The name of the phone to use to create the profile.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneId" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The GUID of the phone to use to create the profile.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--<xsd:element name="createAutogeneratedProfile" type="axlapi:CreateAutogeneratedProfileReq">
			<xsd:annotation>
				<xsd:documentation>This API call is experimental and not supported in normal operation.				</xsd:documentation>
			</xsd:annotation>
	</xsd:element>
	<xsd:element name="createAutogeneratedProfileResponse" type="axlapi:StandardResponse"/>-->
	<xsd:complexType name="ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This abstract method is to be extended by the "list" methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="searchString" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The string to search for.  Can contain SQL wildcard characters.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListPhoneByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all phones whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByName" type="axlapi:ListPhoneByNameReq"/>
	<xsd:complexType name="ListPhoneResponse">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listPhoneByXXX methods.  It includes the phone GUID, name, and product.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="phone" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50" nillable="false"/>
											<xsd:element name="product" type="axl:XProduct" nillable="false"/>
											<xsd:element name="model" type="axl:XModel" nillable="false"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListPhoneByNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneByName.  For each phone returned, lists its name, product type, and model type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListPhoneResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByNameResponse" type="axlapi:ListPhoneByNameRes"/>
	<xsd:complexType name="ListPhoneByDescriptionReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all phones whose description matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByDescription" type="axlapi:ListPhoneByDescriptionReq"/>
	<xsd:complexType name="ListPhoneByDescriptionRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneByDescription.  For each phone returned, lists its name, product type, and model type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListPhoneResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listPhoneByDescriptionResponse" type="axlapi:ListPhoneByDescriptionRes"/>
	<xsd:complexType name="ListUserByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all users whose first and last names match the given pattern.  The '*' character is used as the wildcard.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="firstname" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The first name to search for.  Can contain the '*' character as a wildcard.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lastname" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The last name to search for.  Can contain the '*' character as a wildcard.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="searchLimit" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation>The maximum number of users to be displayed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listUserByName" type="axlapi:ListUserByNameReq"/>
	<xsd:complexType name="ListUserByNameRes">
		<xsd:annotation>
			<xsd:documentation>The is element will contain all the users who matched the search string supplied by listUserByName.  For each user returned, the user's ldapRN, firstname, and lastname is specified.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="user" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="firstname" type="xsd:string"/>
											<xsd:element name="lastname" type="xsd:string"/>
										</xsd:sequence>
										<xsd:attribute name="userid" type="xsd:string" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listUserByNameResponse" type="axlapi:ListUserByNameRes"/>
	<xsd:complexType name="ListRoutePlanByTypeReq">
		<xsd:annotation>
			<xsd:documentation>This request returns the all entries in the NumPlan table which match the type given.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="usage" type="axl:XPatternUsage" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The type (pattern usage) of Route Plan to return.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePlanByType" type="axlapi:ListRoutePlanByTypeReq"/>
	<xsd:complexType name="ListRoutePlanByTypeRes">
		<xsd:annotation>
			<xsd:documentation>Response to listRoutePlanByType request.  For each route plan returned, the directory number, route partition name, and usage type is specified.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePlan" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="directoryNumber" type="axl:XDirectoryNumber"/>
											<xsd:element name="routePartitionName" type="axl:String50"/>
											<xsd:element name="usage" type="axl:XPatternUsage"/>
											<xsd:element name="routeFilterName" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePlanByTypeResponse" type="axlapi:ListRoutePlanByTypeRes"/>
	<xsd:complexType name="GetNumDevicesReq">
		<xsd:annotation>
			<xsd:documentation>This method returns the number of devices found.  The caller specifies what class of device they want counted.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="class" type="axl:XClass" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The class of device that is to be counted.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getNumDevices" type="axlapi:GetNumDevicesReq"/>
	<xsd:complexType name="GetNumDevicesRes">
		<xsd:annotation>
			<xsd:documentation>Response to GetNumDevices.  Returns an integer value which is the number of devices found.  The class of device counted is represented by the "class" attribute.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger"/>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getNumDevicesResponse">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="axlapi:GetNumDevicesRes">
					<xsd:attribute name="class" type="xsd:string" use="optional"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="ListServiceParametersReq">
		<xsd:annotation>
			<xsd:documentation>This method can be used to list all service parameters (include Enterprise-Wide parameters) for a particular Process Node and service type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="nodeName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The process node.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="serviceType" type="axl:XService" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The type of service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listServiceParameters" type="axlapi:ListServiceParametersReq"/>
	<xsd:complexType name="ListServiceParametersRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the service parameters as found by ListServiceParameters.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:annotation>
							<xsd:documentation>A list of "param" elements.  Eache "param" element represents a service parameter.  If no service parameters were found, then no "param" elements will be present.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="xsd:string" nillable="false">
												<xsd:annotation>
													<xsd:documentation>The name of this service parameter.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="value" type="xsd:string" nillable="false">
												<xsd:annotation>
													<xsd:documentation>The value of this service parameter.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listServiceParametersResponse" type="axlapi:ListServiceParametersRes"/>
	<xsd:complexType name="ListCSSByNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Calling Search Spaces in the database whose name matches the search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listCSSByName" type="axlapi:ListCSSByNameReq"/>
	<xsd:complexType name="ListCSSResponse">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listCSSByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ListCSSByNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listCSSByName. Contains all the Calling Search Spaces that matched the search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListCSSResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listCSSByNameResponse" type="axlapi:ListCSSByNameRes"/>
	<xsd:complexType name="NameAndGUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This is a utility object that created because many of the Get, Remove, and Update methods allow the user to specify either the name or the uuid.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String100" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GUIDRequest">
		<xsd:annotation>
			<xsd:documentation>This is a utility object that created because many of the Get, Remove, and Update methods allow the user to specify  the uuid.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddDevicePoolReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new device pool to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="devicePool" type="axl:XDevicePool" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addDevicePool" type="axlapi:AddDevicePoolReq"/>
	<xsd:element name="addDevicePoolResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateDevicePoolReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing device pool in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the Device Pool to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The UUID of the Device Pool to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Device Pool. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="autoSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="autoSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dateTimeSettingId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="dateTimeSettingName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callManagerGroupId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="mediaResourceListId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="regionId" type="axl:XUUID" nillable="false"/>
						<xsd:element name="regionName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="srstInfoId" type="axl:XUUID"/>
						<xsd:element name="srstName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="connectionMonitorDuration" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>-1 means use system default.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="locationName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mobilityCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="mobilityCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="physicalLocationId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="physicalLocationName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="deviceMobilityGroupId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="deviceMobilityGroupName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="revertPriority" type="axl:XRevertPriority" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The value accepted and retrieved from the database for this field will be of type XRevertPriority in AXLEnums.xsd.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="singleButtonBarge" type="axl:XBarge" nillable="false" minOccurs="0"/>
					<xsd:element name="joinAcrossLines" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="cdpnTransformationCSSId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="localRouteGroupId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="localRouteGroupName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="nationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="internationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="subscriberPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateDevicePool" type="axlapi:UpdateDevicePoolReq"/>
	<xsd:element name="updateDevicePoolResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getDevicePool" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>Contains the device pool specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="devicePool" type="axl:XDevicePool"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getDevicePoolResponse" type="axlapi:GetDevicePoolRes"/>
	<xsd:element name="removeDevicePool" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeDevicePoolResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCallManagerGroupReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CallManager group to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallManagerGroup" type="axlapi:AddCallManagerGroupReq"/>
	<xsd:element name="addCallManagerGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallManagerGroupReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CallManager group in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="tftpDefault" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this CallManager group.  If "members" is present, then all current members of this CallManager group are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XCallManagerMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallManagerGroup" type="axlapi:UpdateCallManagerGroupReq"/>
	<xsd:element name="updateCallManagerGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCallManagerGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCallManagerGroupRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CallManager group specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallManagerGroupResponse" type="axlapi:GetCallManagerGroupRes"/>
	<xsd:element name="removeCallManagerGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCallManagerGroupResponse" type="axlapi:StandardResponse"/>
	<!-- VG224 Gateway -->
	<xsd:complexType name="AddVG224Req" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new VG224 Gateway to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newVG224" type="axl:XVG224"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVG224" type="axlapi:AddVG224Req"/>
	<xsd:element name="addVG224Response" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetVG224Req" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified VG224 gateway info from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the VG224 Gateway to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="axl:String64" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the VG224 to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVG224" type="axlapi:GetVG224Req"/>
	<xsd:complexType name="GetVG224Res">
		<xsd:annotation>
			<xsd:documentation>Returns the VG224 specified by the GetVG224 request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="vg224" type="axl:XVG224"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVG224Response" type="axlapi:GetVG224Res"/>
	<xsd:complexType name="RemoveVG224Req">
		<xsd:annotation>
			<xsd:documentation>Removes the specified VG224 Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the VG224 to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="axl:String64" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the VG224 to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeVG224" type="axlapi:RemoveVG224Req"/>
	<xsd:element name="removeVG224Response" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateVG224Req">
		<xsd:annotation>
			<xsd:documentation>Updates an existing VG224 Gateway information in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of the VG224 that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the VG224 that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newDomainName" type="axl:String64" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new domain name of the VG224.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String100" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the VG224.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Call Manager Group for this VG224.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerGroupName" type="axl:String50" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The name of the new Call  Manager Group name for this VG224. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="units" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The units element is optional when a new VG224 is being added  and can be added using updateVG224Gateway.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="unit" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>In the IOS model, UNIT corresponds to a SLOT (Slot Module).</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="product" type="axl:XMGCPSlotModule"/>
											<xsd:element name="subunits" minOccurs="0">
												<xsd:complexType>
													<xsd:sequence minOccurs="0">
														<xsd:element name="subunit" minOccurs="0">
															<xsd:complexType>
																<xsd:annotation>
																	<xsd:documentation>In the IOS model, SUBUNIT corresponds to a VIC, and a VIC contains 1 or more PORTs.</xsd:documentation>
																</xsd:annotation>
																<xsd:sequence>
																	<xsd:element name="product" type="axl:XMGCPVic"/>
																	<xsd:element name="endpoints" minOccurs="0">
																		<xsd:complexType>
																			<xsd:annotation>
																				<xsd:documentation>The max attribute identifies the maximum number of endpoints this endpoint list is allowed.</xsd:documentation>
																			</xsd:annotation>
																			<xsd:choice minOccurs="0">
																				<xsd:element name="endpoint" minOccurs="0" maxOccurs="unbounded">
																					<xsd:annotation>
																						<xsd:documentation>If new endpoints are mentioned to be added to the gateway, the tags would be mandatory as in the addVG224Req.</xsd:documentation>
																					</xsd:annotation>
																					<xsd:complexType>
																						<xsd:annotation>
																							<xsd:documentation>In the IOS model, ENDPOINT corresponds to a PORT inside a VIC.</xsd:documentation>
																						</xsd:annotation>
																						<xsd:complexContent>
																							<xsd:extension base="axlapi:APIRequest">
																								<xsd:sequence>
																									<xsd:choice>
																										<xsd:element name="name" type="axl:UniqueString128">
																											<xsd:annotation>
																												<xsd:documentation>The name of the phone that you want to update.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="uuid" type="axl:XUUID">
																											<xsd:annotation>
																												<xsd:documentation>The GUID of the phone that you want to update.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																									</xsd:choice>
																									<xsd:element name="description" type="axl:String128" minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>The new description of the phone.  Nullable.</xsd:documentation>
																										</xsd:annotation>
																									</xsd:element>
																									<xsd:choice minOccurs="0">
																										<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
																											<xsd:annotation>
																												<xsd:documentation>The GUID of the new Calling Search Space for this phone. Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="callingSearchSpaceName" type="axl:String50">
																											<xsd:annotation>
																												<xsd:documentation>The name of the new Calling Search Space for this phone.  Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																									</xsd:choice>
																									<xsd:choice minOccurs="0">
																										<xsd:element name="devicePoolId" type="axl:XUUID">
																											<xsd:annotation>
																												<xsd:documentation>The GUID of the new Device Pool for this phone.  Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="devicePoolName" type="axl:UniqueString50">
																											<xsd:annotation>
																												<xsd:documentation>The name of the new Device Pool for this phone. Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																									</xsd:choice>
																									<xsd:choice minOccurs="0">
																										<xsd:element name="commonDeviceConfigId" type="axl:XUUID" nillable="true">
																											<xsd:annotation>
																												<xsd:documentation>The GUID of the new Common Device Config for this phone.  Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="commonDeviceConfigName" type="axl:UniqueString50" nillable="true">
																											<xsd:annotation>
																												<xsd:documentation>The name of the new Common Device Config for this phone. Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																									</xsd:choice>
																									<xsd:choice minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>Only applicable to Phone.</xsd:documentation>
																										</xsd:annotation>
																										<xsd:element name="commonPhoneConfigId" type="axl:XUUID" nillable="false">
																											<xsd:annotation>
																												<xsd:documentation>The GUID of the new Common Phone Config for this phone. Not Nullable. </xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="commonPhoneConfigName" type="axl:String50" nillable="false"/>
																									</xsd:choice>
																									<xsd:choice minOccurs="0">
																										<xsd:element name="locationId" type="axl:XUUID">
																											<xsd:annotation>
																												<xsd:documentation>The GUID of the new Location for this phone.  Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="locationName" type="xsd:Name">
																											<xsd:annotation>
																												<xsd:documentation>The name of the new Location for this phone.  Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																									</xsd:choice>
																									<xsd:choice minOccurs="0">
																										<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
																										<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
																									</xsd:choice>
																									<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
																										</xsd:annotation>
																									</xsd:element>
																									<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
																										</xsd:annotation>
																									</xsd:element>
																									<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
																										</xsd:annotation>
																									</xsd:element>
																									<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
																									<xsd:choice minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>This tag is valid only for phones, SIP trunks and voice mail ports. Not nullable.</xsd:documentation>
																										</xsd:annotation>
																										<xsd:element name="securityProfileId" type="axl:XUUID">
																											<xsd:annotation>
																												<xsd:documentation>The GUID of the new Security Profile for this phone.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
																									</xsd:choice>
																									<xsd:choice minOccurs="0">
																										<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
																										<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
																									</xsd:choice>
																									<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0"/>
																									<xsd:element name="lines" minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
																										</xsd:annotation>
																										<xsd:complexType>
																											<xsd:choice>
																												<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
																												<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
																											</xsd:choice>
																										</xsd:complexType>
																									</xsd:element>
																									<xsd:sequence minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>These tags are applicable only for MGCP.</xsd:documentation>
																										</xsd:annotation>
																										<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" default="None" minOccurs="0"/>
																										<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0"/>
																										<xsd:element name="transmitUTF8" type="xsd:boolean" nillable="false" minOccurs="0"/>
																										<xsd:element name="ports">
																											<xsd:annotation>
																												<xsd:documentation>The list of ports on the gateway.</xsd:documentation>
																											</xsd:annotation>
																											<xsd:complexType>
																												<xsd:annotation>
																													<xsd:documentation>List of analog ports on an analog gateway.</xsd:documentation>
																												</xsd:annotation>
																												<xsd:sequence minOccurs="0">
																													<xsd:element name="port" maxOccurs="unbounded">
																														<xsd:complexType>
																															<xsd:annotation>
																																<xsd:documentation>An analog port on an analog gateway. The portNumber attribute  identifies the ordinal value of the port in the gateway.</xsd:documentation>
																															</xsd:annotation>
																															<xsd:sequence minOccurs="0">
																																<xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
																																<xsd:element name="trunkDirection" type="axl:XTrunkDirection"/>
																																<xsd:sequence minOccurs="0">
																																	<xsd:annotation>
																																		<xsd:documentation>For Gorund Start/Loop Start type of endpoint.</xsd:documentation>
																																	</xsd:annotation>
																																	<xsd:element name="attendantDN" type="axl:XDirectoryNumber"/>
																																</xsd:sequence>
																																<xsd:sequence minOccurs="0">
																																	<xsd:annotation>
																																		<xsd:documentation>For POTS type of endpoint.</xsd:documentation>
																																	</xsd:annotation>
																																	<xsd:element name="prefixDN" type="axl:XDirectoryNumber" minOccurs="0"/>
																																	<xsd:element name="numDigits" type="xsd:nonNegativeInteger" nillable="false"/>
																																	<xsd:element name="expectedDigits" type="xsd:nonNegativeInteger"/>
																																	<xsd:element name="smdiPortNumber" type="xsd:nonNegativeInteger">
																																		<xsd:annotation>
																																			<xsd:documentation>Not used by T1 Ports.</xsd:documentation>
																																		</xsd:annotation>
																																	</xsd:element>
																																</xsd:sequence>
																															</xsd:sequence>
																															<xsd:attribute name="uuid" type="axl:XUUID"/>
																															<xsd:attribute name="portNumber" type="xsd:positiveInteger" use="required"/>
																														</xsd:complexType>
																													</xsd:element>
																												</xsd:sequence>
																											</xsd:complexType>
																										</xsd:element>
																									</xsd:sequence>
																									<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
																									<xsd:element name="networkLocale" type="axl:XCountry" nillable="true" minOccurs="0"/>
																									<xsd:sequence minOccurs="0">
																										<xsd:annotation>
																											<xsd:documentation>These tags are applicable only for SCCP.</xsd:documentation>
																										</xsd:annotation>
																										<xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0"/>
																										<xsd:choice minOccurs="0">
																											<xsd:element name="subscribeCallingSearchSpace" type="axl:XCallingSearchSpace" nillable="true">
																												<xsd:annotation>
																													<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																												</xsd:annotation>
																											</xsd:element>
																											<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
																										</xsd:choice>
																										<xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
																										<xsd:element name="remoteDevice" type="xsd:boolean" nillable="false" minOccurs="0"/>
																										<xsd:choice minOccurs="0">
																											<xsd:element name="phoneTemplate" type="axl:XPhoneTemplate">
																												<xsd:annotation>
																													<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																												</xsd:annotation>
																											</xsd:element>
																											<xsd:element name="phoneTemplateName" type="axl:String50" nillable="false"/>
																										</xsd:choice>
																										<xsd:choice>
																											<xsd:element name="presenceGroup" type="axl:XPresenceGroup" nillable="false">
																												<xsd:annotation>
																													<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																												</xsd:annotation>
																											</xsd:element>
																											<xsd:element name="presenceGroupName" type="axl:String50" nillable="false"/>
																										</xsd:choice>
																										<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" nillable="false" minOccurs="0">
																											<xsd:annotation>
																												<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="deviceMobilityMode" type="axl:XStatus" default="Default" nillable="false" minOccurs="0">
																											<xsd:annotation>
																												<xsd:documentation>Specifies if the phone is configured for device mobility feature or not</xsd:documentation>
																											</xsd:annotation>
																										</xsd:element>
																										<xsd:element name="hlogStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
																										<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
																									</xsd:sequence>
																								</xsd:sequence>
																								<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
																							</xsd:extension>
																						</xsd:complexContent>
																					</xsd:complexType>
																					<!--VG224 EndPoint Schema Ends-->
																				</xsd:element>
																				<xsd:element name="associateEndpoints" minOccurs="0">
																					<xsd:complexType>
																						<xsd:sequence>
																							<xsd:element name="associateEndpoint" minOccurs="0" maxOccurs="unbounded">
																								<xsd:complexType>
																									<xsd:choice>
																										<xsd:element name="uuid" minOccurs="0"/>
																										<xsd:element name="name" minOccurs="0"/>
																									</xsd:choice>
																									<xsd:attribute name="port" type="xsd:positiveInteger" use="required"/>
																									<xsd:attribute name="slot" type="xsd:positiveInteger" use="required"/>
																								</xsd:complexType>
																							</xsd:element>
																						</xsd:sequence>
																					</xsd:complexType>
																				</xsd:element>
																			</xsd:choice>
																			<xsd:attribute name="max" type="xsd:positiveInteger"/>
																		</xsd:complexType>
																		<!--VG224 EndPoints Schema Ends-->
																	</xsd:element>
																</xsd:sequence>
															</xsd:complexType>
															<!--VG224 SubUnit Schema Ends-->
														</xsd:element>
													</xsd:sequence>
												</xsd:complexType>
												<!--VG224 SubUnits Schema Ends-->
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
									<!--VG224 Unit Schema Ends-->
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
						<!--VG224 Units Schema Ends-->
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>It contains Product Specific Configuration Information like Fax mode, Modem Passthorugh, etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVG224" type="axlapi:UpdateVG224Req"/>
	<xsd:element name="updateVG224Response" type="axlapi:StandardResponse"/>
	<!-- vg224 gateway ends -->
	<xsd:complexType name="AddVoiceMailPilotReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Pilot to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailPilot" type="axlapi:AddVoiceMailPilotReq"/>
	<xsd:element name="addVoiceMailPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailPilotReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Updates the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the Voice Mail Pilot to be updated</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
							<xsd:choice>
								<xsd:element name="CSS" type="axl:XCallingSearchSpace" nillable="true">
									<xsd:annotation>
										<xsd:documentation>Only the UUID attribute is read by the AXL API.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:element name="newdirn" type="axl:XDirectoryNumber" nillable="true" minOccurs="0"/>
						<xsd:choice minOccurs="0">
							<xsd:element name="newCSS" type="axl:XUUID" nillable="true" minOccurs="0"/>
							<xsd:element name="newCSSName" type="axl:UniqueName50" nillable="true" minOccurs="0"/>
						</xsd:choice>
					</xsd:sequence>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Setting isDefault tag as false would not disable this VoiceMailPilot as Default. Instead, the corresponding tag of another VoiceMailPilot should be set to true</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailPilot" type="axlapi:UpdateVoiceMailPilotReq"/>
	<xsd:element name="updateVoiceMailPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetVoiceMailPilotReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Voice Mail Pilot to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence>
						<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
						<xsd:choice>
							<xsd:element name="CSS" type="axl:XUUID" nillable="true"/>
							<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPilot" type="axlapi:GetVoiceMailPilotReq"/>
	<xsd:complexType name="GetVoiceMailPilotRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Pilot specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPilotResponse" type="axlapi:GetVoiceMailPilotRes"/>
	<xsd:complexType name="RemoveVoiceMailPilotReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Voice Mail Pilot from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Voice Mail Pilot to be removed</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence>
						<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
						<xsd:choice>
							<xsd:element name="CSS" type="axl:XUUID" nillable="true"/>
							<xsd:element name="CSSName" type="axl:UniqueName50" nillable="true"/>
						</xsd:choice>
					</xsd:sequence>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeVoiceMailPilot" type="axlapi:RemoveVoiceMailPilotReq"/>
	<xsd:complexType name="AddVoiceMailProfileReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Profile to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailProfile" type="axlapi:AddVoiceMailProfileReq"/>
	<xsd:element name="addVoiceMailProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailProfileReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing VoiceMail Profile in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="voiceMailboxMask" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="voiceMailPilot" type="axl:XUUID" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Only UUID attribute is read by the AXL API.Setting isDefault tag as false would not disable this VoiceMailProfile as Default. Instead, another VoiceMailProfile should be set to true</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailProfile" type="axlapi:UpdateVoiceMailProfileReq"/>
	<xsd:element name="updateVoiceMailProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getVoiceMailProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetVoiceMailProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Profile specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailProfileResponse" type="axlapi:GetVoiceMailProfileRes"/>
	<xsd:element name="removeVoiceMailProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeVoiceMailProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeVoiceMailPilotResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddVoiceMailPortReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new VoiceMail Port to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="voiceMailPort" type="axl:XVoiceMailPort" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addVoiceMailPort" type="axlapi:AddVoiceMailPortReq"/>
	<xsd:element name="addVoiceMailPortResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateVoiceMailPortReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing VoiceMail Port in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this device. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this device.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this device. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="commonDeviceConfigId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonDeviceConfigName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor configuration XML for this device. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this device.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new security profile for this device. Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="line" type="axl:XLine" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new line for this voice mail port.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateVoiceMailPort" type="axlapi:UpdateVoiceMailPortReq"/>
	<xsd:element name="updateVoiceMailPortResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getVoiceMailPort" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetVoiceMailPortRes">
		<xsd:annotation>
			<xsd:documentation>Contains the VoiceMail Port specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailPort" type="axl:XVoiceMailPort"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getVoiceMailPortResponse" type="axlapi:GetVoiceMailPortRes"/>
	<xsd:element name="removeVoiceMailPort" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeVoiceMailPortResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddGatewayEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Gateway endpoint to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="gateway" type="axl:XGateway" nillable="false">
						<xsd:annotation>
							<xsd:documentation>XGateway is abstract, so the  user of AddGatewayEndpoint must specify a complex type that extends XGateway.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addGatewayEndpoint" type="axlapi:AddGatewayEndpointReq"/>
	<xsd:element name="addGatewayEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateGatewayEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Gateway endpoint in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="protocolSide" type="axl:XProtocolSide" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Protocol Side can only be modified on PRI gateways. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this device. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the new Calling Search Space for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this device.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this device. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="commonDeviceConfigId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonDeviceConfigName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for most gateways, except FXS gateways.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Location for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mediaResourceListName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Media Resource List for this device.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this device.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new vendor configuration XML for this device. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceFlag" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new trace flag for this device.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="country" type="axl:XCountry" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Also known as networkLocale.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable to PRI gateways.For analog and T1 gateways, this tag comes under ports.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not appicable to T1-CAS and FXO ports.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not appicable to T1-CAS and FXO ports.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>At this point, you can edit the elements specific to PRI, BRI, T1, or Analog gateways.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="analog">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="ports" type="axl:XAnalogPortList" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>The new list of ports for this gateway.  This list of ports replaces any pre-existing ports on this gateway.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>The new trunk selection order for this gateway. Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="pri">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="direction" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="interfaceId" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Neither the present attribute nor the value of this element is nullable.</xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:simpleContent>
												<xsd:extension base="xsd:nonNegativeInteger">
													<xsd:attribute name="present" type="xsd:boolean" use="required"/>
												</xsd:extension>
											</xsd:simpleContent>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="mcdnEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable. The value of numDigits must be either 0 to 32 or 99.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="passingPrecedenceLevelThroughUUIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="prefix" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="connectedPBX" type="axl:XConnectedPBX" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="priProtocol" type="axl:XPriProtocol" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="securityAccessLevel" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendCallingNameInFacilityIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendEXLeadingCharInDispIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This tag enables the significant digits for the gateway; if the tag is set to true, the value of the 'numDigits' element is used as Significant Digits for the gateway. This tag should have a value of false if numDigits is set to 99.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="span" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadRx" type="axl:XTrunkPad" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadTx" type="axl:XTrunkPad" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkLevel" type="axl:XTrunkLevel" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sMDIBasePort" type="xsd:positiveInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="protocolProfile91NameOnly" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="GClearEnable" type="xsd:boolean" default="false" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="bri">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="briProtocol" type="axl:XBriProtocol" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="calledPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="callingPri" type="axl:XPriOfNumber" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="chanIE" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="dChannelEnable" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="direction" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="displayIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="firstDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="framing" type="axl:XFraming" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="intraDelay" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numberIE" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="numDigits" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable. The value of numDigits must be either 0 to 32 or 99.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="prefix" type="xsd:string" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="presentationBit" type="axl:XPresentationBit" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sendRestart" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="setupNonISDNPI" type="xsd:boolean" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sigDigits" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This tag enables the significant digits for the gateway; if the tag is set to true, the value of the 'numDigits' element is used as Significant Digits for the gateway. This tag should have a value of false if numDigits is set to 99.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stableIn4" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="statusPoll" type="xsd:boolean" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadRx" type="axl:XTrunkPad" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkPadTx" type="axl:XTrunkPad" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="trunkLevel" type="axl:XTrunkLevel" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="t1">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="clockReference" type="axl:XClockReference" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="csuParam" type="axl:XCSUParam" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="digitSending" type="axl:XDigitSending" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="encode" type="axl:XEncode" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="fdlChannel" type="axl:XFDLChannel" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>This field has been deprecated for SeaDragon.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="ports" type="axl:XT1PortList" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>If the ports element is included in the request, then all existing ports on this gateway will be replaced by the ports found here.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="yellowAlarm" type="axl:XYellowAlarm" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="zeroSuppression" type="axl:XZeroSuppression" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="sMDIBasePort" type="xsd:positiveInteger" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Not nullable.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="cdpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="enableProtectedFacilityIE" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for DigitalAccess PRI Gateways</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateGatewayEndpoint" type="axlapi:UpdateGatewayEndpointReq"/>
	<xsd:element name="updateGatewayEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getGatewayEndpoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetGatewayEndpointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Gateway specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" type="axl:XGateway"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getGatewayEndpointResponse" type="axlapi:GetGatewayEndpointRes"/>
	<xsd:element name="removeGatewayEndpoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeGatewayEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRouteFilterReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Route Filter to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="routeFilter" type="axl:XRouteFilter" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRouteFilter" type="axlapi:AddRouteFilterReq"/>
	<xsd:element name="addRouteFilterResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRouteFilterReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Route Filter in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="dialPlanId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Dial Plan for this Route Filter. Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="xsd:Name">
							<xsd:annotation>
								<xsd:documentation>The name of the new Dial Plan for this Route Filter.  Not Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this Route Filter.  If this element is null, then all members are removed from this route filter.  Note:  If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XRouteFilterMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRouteFilter" type="axlapi:UpdateRouteFilterReq"/>
	<xsd:element name="updateRouteFilterResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRouteFilter" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRouteFilterRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Route Filter specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routeFilter" type="axl:XRouteFilter"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRouteFilterResponse" type="axlapi:GetRouteFilterRes"/>
	<xsd:element name="removeRouteFilter" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRouteFilterResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetServiceParameterReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified service parameter from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the service parameter in the ProcessConfig table.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:element name="name" type="axl:String50">
								<xsd:annotation>
									<xsd:documentation>Name of the service parameter. Not nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>The process Node that this the service parameter belongs to. Not nullable.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="processNodeId" type="axl:XUUID"/>
								<xsd:element name="processNodeName" type="axl:String50"/>
							</xsd:choice>
							<xsd:element name="service" type="axl:XService">
								<xsd:annotation>
									<xsd:documentation>The service that this service parameter belongs to.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getServiceParameter" type="axlapi:GetServiceParameterReq"/>
	<xsd:complexType name="GetServiceParameterRes">
		<xsd:annotation>
			<xsd:documentation>Contains the service parameter specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="serviceParameter" type="axl:XProcessConfig"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getServiceParameterResponse" type="axlapi:GetServiceParameterRes"/>
	<xsd:complexType name="UpdateServiceParameterReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing service parameter's value.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetServiceParameterReq">
				<xsd:sequence>
					<xsd:element name="newValue" type="axl:String1024" nillable="true">
						<xsd:annotation>
							<xsd:documentation>The new value of the service parameter. Nullable in some cases.  Must be a valid value for this service parameter's data type or an error will be returned.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateServiceParameter" type="axlapi:UpdateServiceParameterReq"/>
	<xsd:element name="updateServiceParameterResponse" type="axlapi:StandardResponse">
		<xsd:annotation>
			<xsd:documentation>Would return either the GUID of the object that was altered, or return true if the operation was successful.  Whichever is possible for this request.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddLocationReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Location to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="location" type="axl:XLocation" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addLocation" type="axlapi:AddLocationReq"/>
	<xsd:element name="addLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateLocationReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing Location in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="kbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="videoKbits" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="relatedLocations" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="relatedLocation" type="axl:XLocationRelationship" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLocation" type="axlapi:UpdateLocationReq"/>
	<xsd:element name="updateLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getLocation" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetLocationRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Location specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="location" type="axl:XLocation"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLocationResponse" type="axlapi:GetLocationRes"/>
	<xsd:element name="removeLocation" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeLocationResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCMCInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CMCInfo to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="cmcInfo" type="axl:XCMCInfo" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCMCInfo" type="axlapi:AddCMCInfoReq"/>
	<xsd:element name="addCMCInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCMCInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CMCInfo in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="code" type="axl:String16">
							<xsd:annotation>
								<xsd:documentation>The code of the CMCInfo that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the CMCInfo that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newCode" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String16" nillable="true" minOccurs="0"/>
					<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag has been deprecated</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCMCInfo" type="axlapi:UpdateCMCInfoReq"/>
	<xsd:element name="updateCMCInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="CMCInfoReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Access the specified CMCInfo from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the CMCInfo to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="code" type="axl:String16" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The code of the CMCInfo to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCMCInfo" type="axlapi:CMCInfoReq"/>
	<xsd:complexType name="GetCMCInfoRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CMCInfo specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="cmcInfo" type="axl:XCMCInfo"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCMCInfoResponse" type="axlapi:GetCMCInfoRes"/>
	<xsd:element name="removeCMCInfo" type="axlapi:CMCInfoReq"/>
	<xsd:element name="removeCMCInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddFACInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new FACInfo to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="facInfo" type="axl:XFACInfo" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addFACInfo" type="axlapi:AddFACInfoReq"/>
	<xsd:element name="addFACInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateFACInfoReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing FACInfo in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="code" type="axl:String16" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateFACInfo" type="axlapi:UpdateFACInfoReq"/>
	<xsd:element name="updateFACInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getFACInfo" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetFACInfoRes">
		<xsd:annotation>
			<xsd:documentation>Contains the FACInfo specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="facInfo" type="axl:XFACInfo"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getFACInfoResponse" type="axlapi:GetFACInfoRes"/>
	<xsd:element name="removeFACInfo" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeFACInfoResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRegionReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new Region to the database and automatically adds associated regions to the Region Matrix table.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="region">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="axl:XRegion">
									<xsd:sequence minOccurs="0">
										<xsd:element name="defaultCodec" type="axl:XBandwidth" default="G.711" nillable="false" minOccurs="0"/>
									</xsd:sequence>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRegion" type="axlapi:AddRegionReq"/>
	<xsd:element name="addRegionResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRegionReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing region in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>The name of the Region to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The UUID of the Region to update. Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Region. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRegion" type="axlapi:UpdateRegionReq"/>
	<xsd:element name="updateRegionResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeRegion" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRegionResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRegion" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRegionRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Region specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="region" type="axl:XRegion"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRegionResponse" type="axlapi:GetRegionRes"/>
	<xsd:complexType name="UpdateRegionMatrixReq">
		<xsd:annotation>
			<xsd:documentation>Updates a specific entry in the RegionMatrix table.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="uuid" type="axl:XUUID">
						<xsd:annotation>
							<xsd:documentation>The pkid of the entry in the RegionMatrix table that is to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="bandwidth" type="axl:XBandwidth" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new bandwidth value for this particular region relationship.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="videoBandwidth" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="lossyNetwork" type="axl:XLossyNetwork" nillable="true" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRegionMatrix" type="axlapi:UpdateRegionMatrixReq"/>
	<xsd:element name="updateRegionMatrixResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newMGCP" type="axl:XMGCP"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCP" type="axlapi:AddMGCPReq"/>
	<xsd:element name="addMGCPResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPUnitReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP Unit to the MGCP Gateway.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the unit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>the domain name of MGCP Gateway for which the unit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" type="axl:XMGCPUnit"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPUnit" type="axlapi:AddMGCPUnitReq"/>
	<xsd:element name="addMGCPUnitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPSubunitReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one new MGCP Subunit to the MGCP Gateway's unit(slot).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the subunit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of MGCP Gateway for which the subunit is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) index for which the subunit is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" type="axl:XMGCPSubunit"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPSubunit" type="axlapi:AddMGCPSubunitReq"/>
	<xsd:element name="addMGCPSubunitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMGCPEndpointReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds one and only one new MGCP Endpoint(port) to the MGCP Gateway's subunit.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the MGCP gateway for which the endpoint is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of MGCP Gateway for which the endpoint is being added</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) index for which the endpoint is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit">
						<xsd:annotation>
							<xsd:documentation>The subunit index for which the endpoint is being added</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="endpoint">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="axl:XMGCPEndpoint">
									<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMGCPEndpoint" type="axlapi:AddMGCPEndpointReq"/>
	<xsd:element name="addMGCPEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetMGCPReq" final="#all">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified MGCP gateway info from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the MGCP Gateway to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the MGCP to be retrieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMGCP" type="axlapi:GetMGCPReq"/>
	<xsd:complexType name="GetMGCPRes">
		<xsd:annotation>
			<xsd:documentation>Returns the MGCP specified by the GetMGCP request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mgcp" type="axl:XMGCP"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMGCPResponse" type="axlapi:GetMGCPRes"/>
	<xsd:complexType name="RemoveMGCPReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the MGCP to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="domainName" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The domain name of the MGCP to be removed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCP" type="axlapi:RemoveMGCPReq"/>
	<xsd:element name="removeMGCPResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPUnitReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified unit(slot) of MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose unit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose unit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit or slot number to be removed from the MGCP gateway(specified as the attribute index)</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPUnit" type="axlapi:RemoveMGCPUnitReq"/>
	<xsd:element name="removeMGCPUnitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPSubunitReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified subunit of MGCP Gateway's unit from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose unit's subunit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose subunit is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit number from which the subunit is to be removed from the MGCP gateway(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The subunit to be removed from the MGCP gateway(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPSubunit" type="axlapi:RemoveMGCPSubunitReq"/>
	<xsd:element name="removeMGCPSubunitResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveMGCPEndpointReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified endpoint(port) of MGCP Gateway from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP whose endpoint is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="domainName" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP whose endpoint is to be removed.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="unit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The unit(slot) number from which the endpoint is to be removed(specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="subunit" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The subunit from which the endpoint(port) is to be removed (specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="endpoint" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The endpoint(port) number to be removed (specified as the attribute "index")</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeMGCPEndpoint" type="axlapi:RemoveMGCPEndpointReq"/>
	<xsd:element name="removeMGCPEndpointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMGCPReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing MGCP Gateway information in the database.
To modify unit, use removeMGCPUnit-addMGCPUnit.
To modify subunit, use removeMGCPSubunit-addMGCPSubunit
To modify endpoint, use removeMGCPEndpoint-addMGCPEndpoint</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="domainName" type="axl:String64">
							<xsd:annotation>
								<xsd:documentation>The domain name of the MGCP that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the MGCP that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newDomainName" type="axl:String64" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new domain name of the MGCP.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String100" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the MGCP.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="product" type="axl:XProduct" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="model" type="axl:XModel" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Call Manager Group for this MGCP.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerGroupName" type="axl:String50" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The name of the new Call  Manager Group name for this MGCP. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="scratch" type="axl:Name50" minOccurs="0"/>
					<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0"/>
					<xsd:element name="versionStamp" type="axl:String128" minOccurs="0"/>
					<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new load information for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMGCP" type="axlapi:UpdateMGCPReq"/>
	<xsd:element name="updateMGCPResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCallManagerReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new CallManager to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="callManager" type="axl:XCallManager" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addCallManager" type="axlapi:AddCallManagerReq"/>
	<xsd:element name="addCallManagerResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCallManagerReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing CallManager in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="autoRegistration" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Auto-registration information block.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="startDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="endDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="nextDN" type="axl:XDirectoryNumber" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:choice minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
									<xsd:element name="routePartitionId" type="axl:XUUID"/>
									<xsd:element name="routePartitionName" type="axl:String50"/>
								</xsd:choice>
								<xsd:element name="e164Mask" type="axl:String50" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ports" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Port information block.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="ethernetPhonePort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Not nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="mgcpPorts" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>MGCP port information block.</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="listen" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Not nullable.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="keepAlive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Not nullable.</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCallManager" type="axlapi:UpdateCallManagerReq"/>
	<xsd:element name="updateCallManagerResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCallManager" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCallManagerRes">
		<xsd:annotation>
			<xsd:documentation>Contains the CallManager specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="callManager" type="axl:XCallManager"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCallManagerResponse" type="axlapi:GetCallManagerRes"/>
	<xsd:element name="removeCallManager" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeCallManagerResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMobileSmartClientProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMobileSmartClientProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the MobileSmartClientProfile specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mobileSmartClientProfile" type="axl:XMobileSmartClientProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMobileSmartClientProfileResponse" type="axlapi:GetMobileSmartClientProfileRes"/>
	<xsd:complexType name="AddProcessNodeReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new ProcessNode to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="processNode" type="axl:XProcessNode" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addProcessNode" type="axlapi:AddProcessNodeReq"/>
	<xsd:element name="addProcessNodeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateProcessNodeReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing ProcessNode in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:Name255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mac" type="axl:XMacAddress" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateProcessNode" type="axlapi:UpdateProcessNodeReq"/>
	<xsd:element name="updateProcessNodeResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getProcessNode" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetProcessNodeRes">
		<xsd:annotation>
			<xsd:documentation>Contains the ProcessNode specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeResponse" type="axlapi:GetProcessNodeRes"/>
	<xsd:element name="removeProcessNode" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeProcessNodeResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="ListAllProcessNodesReq">
		<xsd:annotation>
			<xsd:documentation>Sends a request for all ProcessNodes in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAllProcessNodes" type="axlapi:ListAllProcessNodesReq"/>
	<xsd:complexType name="ListAllProcessNodesRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the process nodes in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAllProcessNodesResponse" type="axlapi:ListAllProcessNodesRes"/>
	<xsd:complexType name="ListProcessNodesByServiceReq">
		<xsd:annotation>
			<xsd:documentation>Sends a request for all ProcessNodes in the database for this particular service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="service" type="axl:XService"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listProcessNodesByService" type="axlapi:ListProcessNodesByServiceReq"/>
	<xsd:complexType name="ListProcessNodesByServiceRes">
		<xsd:annotation>
			<xsd:documentation>Contains all the process nodes in the database that matched the service type in the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNode" type="axl:XProcessNode" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listProcessNodesByServiceResponse" type="axlapi:ListProcessNodesByServiceRes"/>
	<xsd:complexType name="GetProcessNodeServiceReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Process Node Service from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The pkid of the Process Node Service you wish to retrieve.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:sequence>
							<xsd:choice>
								<xsd:annotation>
									<xsd:documentation>The process Node that this the process node service belongs to. Not nullable.</xsd:documentation>
								</xsd:annotation>
								<xsd:element name="processNodeId" type="axl:XUUID"/>
								<xsd:element name="processNodeName" type="axl:String50"/>
							</xsd:choice>
							<xsd:element name="service" type="axl:XService">
								<xsd:annotation>
									<xsd:documentation>The service that this process node service belongs to.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeService" type="axlapi:GetProcessNodeServiceReq"/>
	<xsd:complexType name="GetProcessNodeServiceRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Process Node Service specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="processNodeService" type="axl:XProcessNodeService"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getProcessNodeServiceResponse" type="axlapi:GetProcessNodeServiceRes"/>
	<xsd:complexType name="UpdateProcessNodeServiceReq">
		<xsd:annotation>
			<xsd:documentation>Modifies an existing Process Node Service's value.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetProcessNodeServiceReq">
				<xsd:sequence>
					<xsd:element name="fileName" type="axl:String255" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="traceLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="userCategories" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="enable" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="numFiles" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="numLines" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="numMinutes" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="includeNonDeviceTraces" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="useXML" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="serverName" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="deviceNameMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="deviceTypeMonitorFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="fileTraceFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="outputDebugStringFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateProcessNodeService" type="axlapi:UpdateProcessNodeServiceReq"/>
	<xsd:element name="updateProcessNodeServiceResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listRoutePartitionByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Route Partitions whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listRoutePartitionByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="routePartition" type="axl:XRoutePartition" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listRoutePartitionByNameResponse" type="axlapi:ListRoutePartitionRes">
		<xsd:annotation>
			<xsd:documentation>The response to listRoutePartitionsByName. Contains all the Route Partitions that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listDevicePoolByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Device Pools whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDevicePoolByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="devicePool" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDevicePoolByNameResponse" type="axlapi:ListDevicePoolRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDevicePoolsByName. Contains all the Device Pools that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listPhoneTemplateByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Phone Templates whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListPhoneTemplateRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listPhoneTemplateByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="return">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="phoneTemplate" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="name" type="axl:String50"/>
									<xsd:element name="model" type="axl:XModel"/>
									<xsd:element name="protocol" type="axl:XDeviceProtocol"/>
								</xsd:sequence>
								<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="listPhoneTemplateByNameResponse" type="axlapi:ListPhoneTemplateRes">
		<xsd:annotation>
			<xsd:documentation>The response to listPhoneTemplatesByName. Contains all the Phone Templates that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDeviceByNameAndClassReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all devices of the specified device class and whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString">
				<xsd:sequence>
					<xsd:element name="class" type="axl:XClass"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByNameAndClass" type="axlapi:ListDeviceByNameAndClassReq"/>
	<xsd:complexType name="ListDeviceRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDeviceByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
											<xsd:element name="product" type="axl:XProduct"/>
											<xsd:element name="model" type="axl:XModel"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByNameAndClassResponse" type="axlapi:ListDeviceRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDeviceByNameAndClass. Contains all the device that matched the search string and class type.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListDeviceByServiceNameReq">
		<xsd:annotation>
			<xsd:documentation>This method searches for all devices which are subscribed to the specified telecaster service.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:ListBySearchString">
				<xsd:sequence>
					<xsd:element name="serviceName" type="axl:XClass"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByServiceName" type="axlapi:ListDeviceByNameAndClassReq"/>
	<xsd:complexType name="ListDeviceByServiceNameRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listDeviceByServiceName methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="device" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listDeviceByServiceNameResponse" type="axlapi:ListDeviceByServiceNameRes">
		<xsd:annotation>
			<xsd:documentation>The response to listDeviceByServiceName. Contains all the device that matched the ServiceName.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listMOHAudioSourceByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all MOH Audio Sources whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMOHAudioSourceRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMOHAudioSourceByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mohAudioSource" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="sourceId" type="axl:XMOHAudioSourceId"/>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMOHAudioSourceByNameResponse" type="axlapi:ListMOHAudioSourceRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMOHAudioSourcesByName. Contains all the MOH Audio Sources that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to retrieve.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					<xsd:element name="sourceId" type="axl:XMOHAudioSourceId" nillable="false"/>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UpdateMOHAudioSourceReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:GetMOHAudioSourceByIDAndSourceReq">
				<xsd:sequence>
					<xsd:element name="name" type="axl:String50" minOccurs="0"/>
					<xsd:element name="sourceFile" type="axl:String255" minOccurs="0"/>
					<xsd:element name="multicast" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="repeat" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMOHAudioSource" type="axlapi:UpdateMOHAudioSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to modify.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="updateMOHAudioSourceResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMOHAudioSource" type="axlapi:GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to retrieve.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetMOHAudioSourceRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mohAudioSource" type="axl:XMOHAudioSource"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMOHAudioSourceResponse" type="axlapi:GetMOHAudioSourceRes"/>
	<xsd:element name="removeMOHAudioSource" type="axlapi:GetMOHAudioSourceByIDAndSourceReq">
		<xsd:annotation>
			<xsd:documentation>Specifies which MOH Audio Source to remove.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="removeMOHAudioSourceResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listMediaResourceListByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Media Resource Lists whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMediaResourceListRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMediaResourceListByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceList" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMediaResourceListByNameResponse" type="axlapi:ListMediaResourceListRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMediaResourceListsByName. Contains all the Media Resource Lists that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddMediaResourceListReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="mediaResourceList" type="axl:XMediaResourceList"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMediaResourceList" type="axlapi:AddMediaResourceListReq"/>
	<xsd:element name="addMediaResourceListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMediaResourceList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMediaResourceListRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceList" type="axl:XMediaResourceList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMediaResourceListResponse" type="axlapi:GetMediaResourceListRes"/>
	<xsd:element name="removeMediaResourceList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeMediaResourceListResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMediaResourceListReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XMediaResourceListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMediaResourceList" type="axlapi:UpdateMediaResourceListReq"/>
	<xsd:element name="updateMediaResourceListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listMediaResourceGroupByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Media Resource Groups whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListMediaResourceGroupRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listMediaResourceGroupByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceGroup" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String50"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listMediaResourceGroupByNameResponse" type="axlapi:ListMediaResourceGroupRes">
		<xsd:annotation>
			<xsd:documentation>The response to listMediaResourceGroupsByName. Contains all the Media Resource Groups that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddMediaResourceGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMediaResourceGroup" type="axlapi:AddMediaResourceGroupReq"/>
	<xsd:element name="addMediaResourceGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getMediaResourceGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetMediaResourceGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMediaResourceGroupResponse" type="axlapi:GetMediaResourceGroupRes"/>
	<xsd:element name="removeMediaResourceGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeMediaResourceGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMediaResourceGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:element name="multicast" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="member" type="axl:XMediaResourceGroupMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateMediaResourceGroup" type="axlapi:UpdateMediaResourceGroupReq"/>
	<xsd:element name="updateMediaResourceGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddUserGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userGroup" type="axl:XUserGroup"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addUserGroup" type="axlapi:AddUserGroupReq"/>
	<xsd:element name="addUserGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getUserGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetUserGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="userGroup" type="axl:XUserGroup"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getUserGroupResponse" type="axlapi:GetUserGroupRes"/>
	<xsd:element name="removeUserGroup" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeUserGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateUserGroupReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String128" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="members" nillable="true" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The new members of this User Group. If this element is null, then all members are removed from this user group. Note: If the "members" element is present, then all existing members are removed and replaced with the "member" sub-elements.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="member" type="axl:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:sequence minOccurs="0">
							<xsd:element name="addMembers" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Add new members to the User Group. It doesn't delete old members. Note: If the member is already added to the User Group an error will be thrown.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="member" type="axl:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="removeMembers" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Remove members from the UserGroup. Note: Only members already associated with this User Group can be deleted.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="member" type="axl:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateUserGroup" type="axlapi:UpdateUserGroupReq"/>
	<xsd:element name="updateUserGroupResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="listLocationByName" type="axlapi:ListBySearchString"/>
	<xsd:complexType name="ListLocationRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="location" type="axl:XLocation" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listLocationByNameResponse" type="axlapi:ListLocationRes"/>
	<xsd:element name="listAARGroupByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>List all AAR Groups that match the specified name pattern.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListAARGroupRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="aarGroup" type="axl:XAARNeighborhood" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listAARGroupByNameResponse" type="axlapi:ListAARGroupRes">
		<xsd:annotation>
			<xsd:documentation>The response to listAARGroupByName. Contains all the AAR Groups that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listVoiceMailProfileByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>List all Voice Mail Profiles that match the specified name pattern.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListVoiceMailProfileRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listVoiceMailProfileByNameResponse" type="axlapi:ListVoiceMailProfileRes">
		<xsd:annotation>
			<xsd:documentation>The response to listVoiceMailProfileByName. Contains all the Voice Maile Profiles that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="listGatekeeperByName" type="axlapi:ListBySearchString">
		<xsd:annotation>
			<xsd:documentation>This method searches for all Gatekeepers whose name matches the specified search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ListGatekeeperRes">
		<xsd:annotation>
			<xsd:documentation>This response is returned by the listGatekeeperByXXX methods.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gatekeeper" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="name" type="axl:String128"/>
										</xsd:sequence>
										<xsd:attribute name="uuid" type="axl:XUUID" use="required"/>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="listGatekeeperByNameResponse" type="axlapi:ListGatekeeperRes">
		<xsd:annotation>
			<xsd:documentation>The response to listGatekeepersByName. Contains all the Gatekeepers that matched the search string.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="AddGatekeeperReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="gatekeeper" type="axl:XGatekeeper"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addGatekeeper" type="axlapi:AddGatekeeperReq"/>
	<xsd:element name="addGatekeeperResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getGatekeeper" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetGatekeeperRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gatekeeper" type="axl:XGatekeeper"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getGatekeeperResponse" type="axlapi:GetGatekeeperRes"/>
	<xsd:element name="removeGatekeeper" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeGatekeeperResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateGatekeeperReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="axl:String50" minOccurs="0"/>
					<xsd:element name="rrqTimeToLive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="retryTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="enableDevice" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateGatekeeper" type="axlapi:UpdateGatekeeperReq"/>
	<xsd:element name="updateGatekeeperResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddH323PhoneReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="phone" type="axl:XH323Phone"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Phone" type="axlapi:AddH323PhoneReq"/>
	<xsd:element name="addH323PhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddH323GatewayReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="gateway" type="axl:XH323Gateway"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Gateway" type="axlapi:AddH323GatewayReq"/>
	<xsd:element name="addH323GatewayResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddH323TrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="trunk" type="axl:XH323Trunk"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addH323Trunk" type="axlapi:AddH323TrunkReq"/>
	<xsd:element name="addH323TrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getH323Phone" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323PhoneRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="phone" type="axl:XH323Phone"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323PhoneResponse" type="axlapi:GetH323PhoneRes"/>
	<xsd:element name="getH323Gateway" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323GatewayRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="gateway" type="axl:XH323Gateway"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323GatewayResponse" type="axlapi:GetH323GatewayRes"/>
	<xsd:element name="getH323Trunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetH323TrunkRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="trunk" type="axl:XH323Trunk"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getH323TrunkResponse" type="axlapi:GetH323TrunkRes"/>
	<xsd:element name="removeH323Phone" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeH323PhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeH323Gateway" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeH323GatewayResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeH323Trunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeH323TrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateH323DeviceReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence minOccurs="0">
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String128" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="callingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false" minOccurs="0"/>
						<xsd:element name="devicePoolName" type="axl:String50" nillable="false" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="commonDeviceConfigId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonDeviceConfigName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for H323 Gateways and Trunks.  Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="locationName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable. This tag is not valid for H323Phone and H323Trunk.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable. This tag is not valid for H323Phone and H323Trunk.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="true" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0"/>
					<xsd:element name="srtpAllowed" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Phones and H323Trunks.Not applicable for H323Gateways.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateway and H323Trunk.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="cdpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateway and H323Trunk.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="waitForFarEndH245TerminalSet" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpPreferredCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323 Phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="displayIEDelivery" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectOutboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectInboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableInboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableOutboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If set to True, mediaResourceList must be mentioned and mtpRequired must be set to True.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="codecForOutboundFaststart" type="axl:XMediaPayload" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>enableOutboundFaststart must be set to true for it to be read. Not Nillable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UpdateH323PhoneReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateH323DeviceReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="hlogStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="ownerUserId" type="axl:String255" minOccurs="0"/>
					<xsd:element name="signalingPort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="gatekeeperInfo" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice minOccurs="0">
									<xsd:element name="gatekeeperId" type="axl:XUUID" nillable="false" minOccurs="0"/>
									<xsd:element name="gatekeeperName" type="axl:String50" nillable="false" minOccurs="0"/>
								</xsd:choice>
								<xsd:element name="e164" type="axl:String50" nillable="false" minOccurs="0"/>
								<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
								<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this phone.  If this element is null, then all lines are removed from this phone.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="line" type="axl:XLine" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Phone" type="axlapi:UpdateH323PhoneReq"/>
	<xsd:element name="updateH323PhoneResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateH323GatewayReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateH323DeviceReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="nationalPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="internationalPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="subscriberPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="significantDigits" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The value of significantDigits  must be either from 0 to 32 or 99. Here 99 means All.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger"/>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="calledPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Gateway" type="axlapi:UpdateH323GatewayReq"/>
	<xsd:element name="updateH323GatewayResponse" type="axlapi:StandardResponse" nillable="false"/>
	<xsd:complexType name="UpdateH323TrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:UpdateH323GatewayReq">
				<xsd:sequence minOccurs="0">
					<xsd:element name="tunneledProtocol" type="axl:XTunneledProtocol" minOccurs="0"/>
					<xsd:element name="pathReplacementSupport" type="xsd:boolean" default="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="gatekeeperInfo" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence minOccurs="0">
									<xsd:choice minOccurs="0">
										<xsd:element name="gatekeeperId" type="axl:XUUID" nillable="false" minOccurs="0"/>
										<xsd:element name="gatekeeperName" type="axl:String50" nillable="false" minOccurs="0"/>
									</xsd:choice>
									<xsd:element name="terminal" type="axl:XTerminal" nillable="false" minOccurs="0"/>
									<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
									<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="remoteServerInfo" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence minOccurs="0">
									<xsd:element name="server1" type="axl:String255" nillable="false" minOccurs="0"/>
									<xsd:element name="server2" type="axl:String255" minOccurs="0"/>
									<xsd:element name="server3" type="axl:String255" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for Non-Gatekeeper controlled ICT trunk's.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="ictPassingPrecedenceLevelThroughUUIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
						<xsd:element name="ictSecurityAccessLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Should be set only when ictPassingPrecedenceLevelThroughUUIE is set to true.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateH323Trunk" type="axlapi:UpdateH323TrunkReq" nillable="false"/>
	<xsd:element name="updateH323TrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="ExecuteSQLQueryReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="sql" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>WARNING:  SQL Large Text and BLOB columns cannot be fetched along with other columns.  A Large Text or BLOB column must be selected in its own SQL query.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddSIPTrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="trunk" type="axl:XSIPTrunk"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addSIPTrunk" type="axlapi:AddSIPTrunkReq"/>
	<xsd:element name="addSIPTrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getSIPTrunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetSIPTrunkBase">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="trunk" type="axl:XSIPTrunk"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPTrunkResponse" type="axlapi:GetSIPTrunkBase"/>
	<xsd:element name="removeSIPTrunk" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeSIPTrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateSIPTrunkReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence minOccurs="0">
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String128" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="callingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID" nillable="false" minOccurs="0"/>
						<xsd:element name="devicePoolName" type="axl:String50" nillable="false" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="commonDeviceConfigId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="commonDeviceConfigName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Common Device Config for this device. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="locationId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="locationName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mediaResourceListId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="mediaResourceListName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable. This tag is not valid for SIPTrunk.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable. This tag is not valid for SIPTrunk.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="automatedAlternateRoutingCSSId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="aarNeighborhoodId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="aarNeighborhoodName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="rerouteCallingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="rerouteCallingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="referCallingSearchSpaceId" type="axl:XUUID" minOccurs="0"/>
						<xsd:element name="referCallingSearchSpaceName" type="axl:String50" minOccurs="0"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="cdpnTransformationCSSId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="destinationaddress" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Valid characters for Destination Address are letters, numbers, dashes and dots(periods). IP address should have four 8-bit numbers seperated by periods. Host name should start with letter and end with letter or number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destAddrIsSRV" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is ignored and destAddrIsSRV is set to false if destinationaddress is an IP address and destinationport is mentioned correctly.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destinationport" type="xsd:integer" default="0" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag depends on destAddrIsSRV. It is mandatory when destAddrIsSRV is false or when destination address is an IP address. Valid values between 1024 to 65535 (inclusive)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Security Profile for this phone.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="securityProfileId" type="axl:XUUID"/>
						<xsd:element name="securityProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="tkSipCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The ampersand is a reserved character in xml. It can be escaped as "&amp;"</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="sipProfileId" type="axl:XUUID"/>
						<xsd:element name="sipProfileName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:element name="sigDigits" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The value of sigDigits  must be either from 0 to 32 or 99. Here 99 means All. enable attribute is Read-Only. If sigDigits is 0-32 then enable is true, if signDigits is 99 then enable is false.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="optional"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="connectedNamePresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedPartyIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingname" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callerName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Characters which are not valid for caller name are ampersand, braces, less than or greater than, percentage sign, double quotes, square brackets and pipe.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="acceptOutboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="srtpAllowed" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="srtpFallbackAllowed" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only if srtpAllowed is set to false.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isPaiEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="sipPrivacy" type="axl:XSipPrivacy" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="isRpidEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="sipAssertedType" type="axl:XSipAssertedType" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="DTMFSignalingMethod" type="axl:XDTMFSignaling" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSIPTrunk" type="axlapi:UpdateSIPTrunkReq" nillable="false"/>
	<xsd:element name="updateSIPTrunkResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddSIPRealmReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new SIP Realm.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newSIPRealm" type="axl:XSIPRealm">
						<xsd:annotation>
							<xsd:documentation>The new SIP Realm to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addSIPRealm" type="axlapi:AddSIPRealmReq"/>
	<xsd:element name="addSIPRealmResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveSIPRealmReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified SIP Realm.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the SIP Realm to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="realm" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The  SIP Realm to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeSIPRealm" type="axlapi:RemoveSIPRealmReq"/>
	<xsd:element name="removeSIPRealmResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateSIPRealmReq">
		<xsd:annotation>
			<xsd:documentation>Updates an SIP Realm.  Specify the SIP Realm to be modified .</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="xsd:string" nillable="false"/>
						<xsd:element name="realm" type="xsd:string" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newRealm" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userid" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The userId of the user. Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The digestCredentials to be modified.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSIPRealm" type="axlapi:UpdateSIPRealmReq"/>
	<xsd:element name="updateSIPRealmResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetSIPRealmReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified SIP Realm .</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the SIP Realm to be retrieved. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="realm" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The SIP Realm to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPRealm" type="axlapi:GetSIPRealmReq"/>
	<xsd:complexType name="GetSIPRealmRes">
		<xsd:annotation>
			<xsd:documentation>Contains the SIP Realm that was specified by the GetSIPRealm request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="sipRealm" type="axl:XSIPRealm"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPRealmResponse" type="axlapi:GetSIPRealmRes"/>
	<xsd:complexType name="StandardSIPRealmResponse">
		<xsd:annotation>
			<xsd:documentation>Returns either the GUID of the object that was altered, or returns true if the operation was successful.  Whichever is appropriate for the corresponding request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddSIPProfileReq">
		<xsd:annotation>
			<xsd:documentation>Adds  new SIPProfile to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="sipProfile" type="axl:XSIPProfile"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addSIPProfile" type="axlapi:AddSIPProfileReq"/>
	<xsd:element name="addSIPProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateSIPProfileReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:UniqueString255" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:UniqueString255" nillable="false" minOccurs="0"/>
					<xsd:element name="description" type="axl:String100" nillable="true" minOccurs="0"/>
					<xsd:element name="defaultTelephonyEventPayloadType" type="xsd:long" default="101" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectByApplication" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="ringing180" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="timerInvite" type="xsd:long" default="180" nillable="false" minOccurs="0"/>
					<xsd:element name="timerRegisterDelta" type="xsd:long" default="5" nillable="false" minOccurs="0"/>
					<xsd:element name="timerRegister" type="xsd:long" default="3600" nillable="false" minOccurs="0"/>
					<xsd:element name="timerT1" type="xsd:long" default="500" nillable="false" minOccurs="0"/>
					<xsd:element name="timerT2" type="xsd:long" default="4000" nillable="false" minOccurs="0"/>
					<xsd:element name="retryInvite" type="xsd:long" default="6" nillable="false" minOccurs="0"/>
					<xsd:element name="retryNotInvite" type="xsd:long" default="10" nillable="false" minOccurs="0"/>
					<xsd:element name="startMediaPort" type="xsd:long" default="16384" nillable="false" minOccurs="0"/>
					<xsd:element name="stopMediaPort" type="xsd:long" default="32766" nillable="false" minOccurs="0"/>
					<xsd:element name="callpickupURI" type="axl:Name128" default="x-cisco-serviceuri-pickup" nillable="false" minOccurs="0"/>
					<xsd:element name="callpickupListURI" type="axl:String128" default="x-cisco-serviceuri-opickup" nillable="false" minOccurs="0"/>
					<xsd:element name="callpickupGroupURI" type="axl:String128" default="x-cisco-serviceuri-gpickup" nillable="false" minOccurs="0"/>
					<xsd:element name="meetmeServiceURI" type="axl:String128" default="x-cisco-serviceuri-meetme" nillable="false" minOccurs="0"/>
					<xsd:element name="userInfo" type="axl:XZzuserInfo" default="None" nillable="false" minOccurs="0"/>
					<xsd:element name="dtmfDbLevel" type="axl:XZzdtmfDbLevel" default="Nominal" nillable="false" minOccurs="0"/>
					<xsd:element name="callHoldRingback" type="axl:XZzpreff" default="Off" nillable="false" minOccurs="0"/>
					<xsd:element name="anonymousCallBlock" type="axl:XZzpreff" default="Off" nillable="false" minOccurs="0"/>
					<xsd:element name="callerIdBlock" type="axl:XZzpreff" default="Off" nillable="false" minOccurs="0"/>
					<xsd:element name="dndControl" type="axl:XZzdndcontrol" default="Admin" nillable="false" minOccurs="0"/>
					<xsd:element name="telnetLevel" type="axl:XTelnetLevel" default="Disabled" nillable="false" minOccurs="0"/>
					<xsd:element name="timerKeepAlive" type="xsd:long" default="120" nillable="false" minOccurs="0"/>
					<xsd:element name="timerSubscribe" type="xsd:long" default="120" nillable="false" minOccurs="0"/>
					<xsd:element name="timerSubscribeDelta" type="xsd:long" default="5" nillable="false" minOccurs="0"/>
					<xsd:element name="maxRedirects" type="xsd:long" default="70" nillable="false" minOccurs="0"/>
					<xsd:element name="timerOffhookToFirstDigit" type="xsd:long" default="15000" nillable="false" minOccurs="0"/>
					<xsd:element name="callForwardURI" type="axl:String128" default="x-cisco-serviceuri-cfwdall" nillable="false" minOccurs="0"/>
					<xsd:element name="abbreviatedDialURI" type="axl:String128" default="x-cisco-serviceuri-abbrdial" nillable="false" minOccurs="0"/>
					<xsd:element name="confJoinEnable" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="rfc2543Hold" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="semiAttendedTransfer" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="enableVAD" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="stutterMsgWaiting" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="callStats" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="t38Invite" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="rerouteIncomingRequest" type="axl:XSIPReroute" default="Never" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="resourcePriorityNamespaceList" type="axl:XResourcePriorityNamespaceList" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="resourcePriorityNamespaceListName" type="axl:Name50" default="Null" nillable="true"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateSIPProfile" type="axlapi:UpdateSIPProfileReq"/>
	<xsd:element name="updateSIPProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getSIPProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetSIPProfileRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="sipProfile" type="axl:XSIPProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPProfileResponse" type="axlapi:GetSIPProfileRes"/>
	<xsd:element name="removeSIPProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeSIPProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRecordingProfileReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Recording Profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newRecordingProfile" type="axl:XRecordingProfile">
						<xsd:annotation>
							<xsd:documentation>The new Recording Profile to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRecordingProfile" type="axlapi:AddRecordingProfileReq"/>
	<xsd:element name="addRecordingProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="RemoveRecordingProfileReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Recording Profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Recording Profile to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The Recording Profile to be removed. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRecordingProfile" type="axlapi:RemoveRecordingProfileReq"/>
	<xsd:element name="removeRecordingProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRecordingProfileReq">
		<xsd:annotation>
			<xsd:documentation>Updates a Recording Profile.  Specify the Recording Profile to be modified .</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="xsd:string" nillable="false"/>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0" maxOccurs="0">
						<xsd:element name="recordingCSS" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="recordingCSSName" type="axl:UniqueName50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="recorderDestination" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The DN or URL of the recorder to be modified.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRecordingProfile" type="axlapi:UpdateRecordingProfileReq"/>
	<xsd:element name="updateRecordingProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetRecordingProfileReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves the specified Recording Profile .</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:choice>
					<xsd:element name="uuid" type="axl:XUUID" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The GUID of the Recording Profile to be retrieved. Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="name" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>The Recording Profile to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRecordingProfile" type="axlapi:GetRecordingProfileReq"/>
	<xsd:complexType name="GetRecordingProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Recording Profile that was specified by the getRecordingProfile request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="recordingProfile">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XRecordingProfile">
												<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRecordingProfileResponse" type="axlapi:GetRecordingProfileRes"/>
	<xsd:complexType name="AddPilotPointReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Pilot Point to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="pilotPoint" type="axl:XPilotPoint"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addPilotPoint" type="axlapi:AddPilotPointReq"/>
	<xsd:element name="addPilotPointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdatePilotPointReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Pilot Point in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name for this Pilot Point.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePool" type="axl:XDevicePool">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="axl:UniqueString50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="routePartition" type="axl:XRoutePartition">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routePartitionName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="pilotNumber" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useFirstAvailable" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="location" type="axl:XLocation">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="locationName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePilotPoint" type="axlapi:UpdatePilotPointReq"/>
	<xsd:element name="updatePilotPointResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getPilotPoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetPilotPointRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Pilot Point that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="pilotPoint">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XPilotPoint">
												<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPilotPointResponse" type="axlapi:GetPilotPointRes"/>
	<xsd:element name="removePilotPoint" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removePilotPointResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateLicenseCapabilitiesReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string"/>
					<xsd:element name="enableUPS" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The only valid values for enableUPS are true, True, false and False.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="enableUPC" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The only valid values for enableUPC are true, True, false and False.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateLicenseCapabilities" type="axlapi:UpdateLicenseCapabilitiesReq"/>
	<xsd:element name="updateLicenseCapabilitiesResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetLicenseCapabilitiesReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The ID of the user to be retrieved.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLicenseCapabilities" type="axlapi:GetLicenseCapabilitiesReq"/>
	<xsd:complexType name="GetLicenseCapabilitiesRes">
		<xsd:annotation>
			<xsd:documentation>Contains the license capabilities for the user specified in the getLicenseCapabilities request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="licenseCapabilities">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XLicenseCapabilities">
												<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getLicenseCapabilitiesResponse" type="axlapi:GetLicenseCapabilitiesRes"/>
	<!-- Existing UpdateAppUser which will be replaced by the new code
	<xsd:complexType name="UpdateAppUserReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing application user. Specify the user to be modified with their user id.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="userid" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The userid of the user to be modified.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="password" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The new password for the user.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="passwordCredentials" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice minOccurs="0">
									<xsd:element name="pwdCredPolicy" type="axl:XUUID">
										<xsd:annotation>
											<xsd:documentation>Only uuid can be accepted.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="pwdCredPolicyName" type="axl:String50"/>
								</xsd:choice>
								<xsd:element name="pwdCredUserCantChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredUserMustChange" type="xsd:boolean" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Either pwdCredUserMustChange can be true or pwdCredUserCantChange can be true. Not Nullable. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredResetHackCount" type="xsd:boolean" minOccurs="0"/>
								<xsd:element name="pwdCredSetLockOut" type="xsd:boolean" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateAppUser" type="axlapi:UpdateAppUserReq"/>
	<xsd:element name="updateAppUserResponse" type="axlapi:StandardResponse"/>
-->
	<xsd:complexType name="AddMobileVoiceAccessReq">
		<xsd:sequence>
			<xsd:element name="mobileVoiceAccess" type="axl:XMobileVoiceAccess"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="addMobileVoiceAccess" type="axlapi:AddMobileVoiceAccessReq"/>
	<xsd:element name="addMobileVoiceAccessResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMobileVoiceAccessReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="uuid" type="axl:XUUID"/>
				<xsd:element name="pattern" type="xsd:string"/>
			</xsd:choice>
			<xsd:element name="newPattern" type="xsd:string" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="newRoutePartitionId" type="axl:XUUID" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The GUID of the new route partition of this meet me number.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="newRoutePartitionName" type="axl:String50" nillable="true"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="updateMobileVoiceAccess" type="axlapi:UpdateMobileVoiceAccessReq"/>
	<xsd:element name="updateMobileVoiceAccessResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetMobileVoiceAccessReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID"/>
						<xsd:element name="pattern" type="xsd:string"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMobileVoiceAccess" type="axlapi:GetMobileVoiceAccessReq"/>
	<xsd:complexType name="GetMobileVoiceAccessRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mobileVoiceAccess">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XMobileVoiceAccess"/>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMobileVoiceAccessResponse" type="axlapi:GetMobileVoiceAccessRes"/>
	<xsd:complexType name="RemoveMobileVoiceAccessReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified Mobile Voice Access from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="uuid" type="axl:XUUID"/>
				<xsd:element name="pattern" type="xsd:string"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="removeMobileVoiceAccess" type="axlapi:RemoveMobileVoiceAccessReq"/>
	<xsd:element name="removeMobileVoiceAccessResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddIVRUserLocaleReq">
		<xsd:sequence>
			<xsd:element name="ivrUserLocale" type="axl:XIVRUserLocale"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="addIVRUserLocale" type="axlapi:AddIVRUserLocaleReq"/>
	<xsd:element name="addIVRUserLocaleResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateIVRUserLocaleReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="uuid" type="axl:XUUID"/>
				<xsd:element name="userLocale" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="newUserLocale" type="axl:XUserLocale" minOccurs="0"/>
			<xsd:element name="newOrderIndex" type="xsd:integer" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="updateIVRUserLocale" type="axlapi:UpdateIVRUserLocaleReq"/>
	<xsd:element name="updateIVRUserLocaleResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetIVRUserLocaleReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
						<xsd:element name="userLocale" type="axl:String50" nillable="false"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getIVRUserLocale" type="axlapi:GetIVRUserLocaleReq"/>
	<xsd:complexType name="GetIVRUserLocaleRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="ivrUserLocale">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XIVRUserLocale"/>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getIVRUserLocaleResponse" type="axlapi:GetIVRUserLocaleRes"/>
	<xsd:complexType name="RemoveIVRUserLocaleReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="uuid" type="axl:XUUID"/>
				<xsd:element name="userLocale" type="axl:String50"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="removeIVRUserLocale" type="axlapi:RemoveIVRUserLocaleReq"/>
	<xsd:element name="removeIVRUserLocaleResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddMobilityReq">
		<xsd:complexContent>
			<xsd:extension base="axl:XMobility"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addMobility" type="axlapi:AddMobilityReq"/>
	<xsd:element name="addMobilityResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateMobilityReq">
		<xsd:sequence>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>It is mandatory to give either handoffNumber or DTMFNumber tag in the request. Both can't be null.</xsd:documentation>
				</xsd:annotation>
				<xsd:choice>
					<xsd:element name="handoffUuid" type="axl:XUUID" minOccurs="0"/>
					<xsd:element name="handoffNumber" type="xsd:string" minOccurs="0"/>
				</xsd:choice>
				<xsd:choice>
					<xsd:element name="DTMFUuid" type="axl:XUUID" minOccurs="0"/>
					<xsd:element name="DTMFNumber" type="xsd:string" minOccurs="0"/>
				</xsd:choice>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="newHandoffNumber" type="xsd:string" minOccurs="0"/>
				<xsd:choice minOccurs="0">
					<xsd:element name="newHandoffPartitionId" type="axl:XUUID"/>
					<xsd:element name="newHandoffPartitionName" type="axl:String50"/>
				</xsd:choice>
				<xsd:element name="newDTMFNumber" type="xsd:string" minOccurs="0"/>
				<xsd:choice minOccurs="0">
					<xsd:element name="newDTMFPartitionId" type="axl:XUUID"/>
					<xsd:element name="newDTMFPartitionName" type="axl:String50"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="updateMobility" type="axlapi:UpdateMobilityReq"/>
	<xsd:element name="updateMobilityResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetMobilityReq">
		<xsd:annotation>
			<xsd:documentation>Retrieves mobility configuration information.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:annotation>
				<xsd:documentation>It is mandatory to give either handoffNumber or DTMFNumber tag in the request. Both can't be null.</xsd:documentation>
			</xsd:annotation>
			<xsd:choice>
				<xsd:element name="handoffUuid" type="axl:XUUID" minOccurs="0"/>
				<xsd:element name="handoffNumber" type="xsd:string" minOccurs="0"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="DTMFUuid" type="axl:XUUID" minOccurs="0"/>
				<xsd:element name="DTMFNumber" type="xsd:string" minOccurs="0"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="getMobility" type="axlapi:GetMobilityReq"/>
	<xsd:complexType name="GetMobilityRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="mobility" type="axl:XMobility"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getMobilityResponse" type="axlapi:GetMobilityRes"/>
	<xsd:complexType name="GetCCMVersionReq">
		<xsd:sequence>
			<xsd:element name="processNodeName" type="axl:String255" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="getCCMVersion" type="axlapi:GetCCMVersionReq"/>
	<xsd:complexType name="GetCCMVersionRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="componentVersion" type="axl:XCCMVersion"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCCMVersionResponse" type="axlapi:GetCCMVersionRes"/>
	<xsd:complexType name="GetOSVersionReq"/>
	<xsd:element name="getOSVersion" type="axlapi:GetOSVersionReq"/>
	<xsd:complexType name="GetOSVersionRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="os" type="axl:XOSVersion"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getOSVersionResponse" type="axlapi:GetOSVersionRes"/>
	<xsd:complexType name="RemoveMobilityReq">
		<xsd:annotation>
			<xsd:documentation>Removes the specified DTMF/Handoff pattern from the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="handoffUuid" type="axl:XUUID"/>
				<xsd:element name="handoffNumber" type="xsd:string"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="DTMFUuid" type="axl:XUUID"/>
				<xsd:element name="DTMFNumber" type="xsd:string"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="removeMobility" type="axlapi:RemoveMobilityReq"/>
	<xsd:element name="removeMobilityResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddPhoneTemplateReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="phoneTemplate" type="axl:XPhoneTemplate"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addPhoneTemplate" type="axlapi:AddPhoneTemplateReq"/>
	<xsd:element name="addPhoneTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdatePhoneTemplateReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="axl:String50" nillable="false"/>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
					</xsd:choice>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0"/>
					<xsd:element name="buttons" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is used to modify the fields corresponding to one button. The feature and label of the first button cannot be modified.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="button" type="axl:XButton" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updatePhoneTemplate" type="axlapi:UpdatePhoneTemplateReq"/>
	<xsd:element name="updatePhoneTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getPhoneTemplate" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetPhoneTemplateRes">
		<xsd:annotation>
			<xsd:documentation>Returns the phone template specified by the getPhoneTemplate request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="phoneTemplate" type="axl:XPhoneTemplate"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getPhoneTemplateResponse" type="axlapi:GetPhoneTemplateRes"/>
	<xsd:element name="removePhoneTemplate" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removePhoneTemplateResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddCredentialPolicyReq">
		<xsd:sequence>
			<xsd:element name="credentialPolicy" type="axl:XCredentialPolicy"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="addCredentialPolicy" type="axlapi:AddCredentialPolicyReq"/>
	<xsd:element name="addCredentialPolicyResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateCredentialPolicyReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="name" type="axl:String255"/>
					<xsd:element name="newName" type="axl:String255" minOccurs="0"/>
					<xsd:element name="noLimitForFailedLogon" type="xsd:boolean" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If this tag is set to true, zero is inserted into the database for failedLogon.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="failedLogon" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Failed logon must be a number in the range 0 to 100.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="resetFailedLogonAttempts" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Reset Failed logon attempts must be a number in the range 1 to 120.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="administratorMustUnlock" type="xsd:boolean" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If this tag is set to true, zero is inserted into the database for lockoutDuration.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lockoutDuration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Lockout duration must be a number in the range 0 to 1440.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="credChangeDuration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Credential change duration must be a number in the range 0 to 129600.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="neverExpires" type="xsd:boolean" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If this tag is set to true, zero is inserted into the database for credExpiresAfter.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="credExpiresAfter" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Credential expires after must be a number in the range 0 to 365.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="minCredLength" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Minimum credential length must be a number in the range 0 to 64.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="prevCredStoredNum" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Stored number of previous credentials must be a number in the range 0 to 25.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="inactiveDaysAllowed" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Inactive days allowed must be a number in the range 0 to 5000.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="expiryWarningDays" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Expiry warning days must be a number in the range 0 to 90.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="trivialCredCheck" type="xsd:boolean" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateCredentialPolicy" type="axlapi:UpdateCredentialPolicyReq"/>
	<xsd:element name="updateCredentialPolicyResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getCredentialPolicy" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetCredentialPolicyRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="credentialPolicy">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XCredentialPolicy">
												<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getCredentialPolicyResponse" type="axlapi:GetCredentialPolicyRes"/>
	<xsd:complexType name="RemoveCredentialPolicyReq">
		<xsd:sequence>
			<xsd:element name="name" type="axl:String255"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="removeCredentialPolicy" type="axlapi:RemoveCredentialPolicyReq"/>
	<xsd:element name="removeCredentialPolicyResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddSIPTrunkSecurityProfileReq">
		<xsd:sequence>
			<xsd:element name="SIPTrunkSecurityProfile" type="axl:XSIPTrunkSecurityProfile"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="addSIPTrunkSecurityProfile" type="axlapi:AddSIPTrunkSecurityProfileReq"/>
	<xsd:element name="addSIPTrunkSecurityProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateSIPTrunkSecurityProfileReq">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="name" type="axl:String64" nillable="false"/>
				<xsd:element name="uuid" type="axl:XUUID" nillable="false"/>
			</xsd:choice>
			<xsd:element name="newName" type="axl:String64" minOccurs="0"/>
			<xsd:element name="description" type="axl:String100" minOccurs="0"/>
			<xsd:element name="securityMode" type="axl:XDeviceSecurityMode" nillable="true" minOccurs="0"/>
			<xsd:element name="incomingTransport" type="axl:XTransport" nillable="false" minOccurs="0"/>
			<xsd:element name="outgoingTransport" type="axl:XTransport" nillable="true" minOccurs="0"/>
			<xsd:element name="digestAuthentication" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="noncePolicyTime" type="xsd:long" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Only if digestAuthentication is enabled this value can be changed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="x509SubjectName" type="axl:String4096" nillable="false" minOccurs="0"/>
			<xsd:element name="incomingPort" type="xsd:long" nillable="false" minOccurs="0"/>
			<xsd:element name="applLevelAuthentication" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptPresenceSubscription" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="allowReplaceHeader" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="transmitSecurityStatus" type="xsd:boolean" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="sequence" type="xsd:unsignedLong" use="optional"/>
	</xsd:complexType>
	<xsd:element name="updateSIPTrunkSecurityProfile" type="axlapi:UpdateSIPTrunkSecurityProfileReq"/>
	<xsd:element name="updateSIPTrunkSecurityProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getSIPTrunkSecurityProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetSIPTrunkSecurityProfileRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="SIPTrunkSecurityProfile" type="axl:XSIPTrunkSecurityProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getSIPTrunkSecurityProfileResponse" type="axlapi:GetSIPTrunkSecurityProfileRes"/>
	<xsd:element name="removeSIPTrunkSecurityProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeSIPTrunkSecurityProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddRemoteDestinationReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Remote Destination.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newRemoteDestination" type="axl:XRemoteDestination">
						<xsd:annotation>
							<xsd:documentation>The new Remote Destination to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRemoteDestination" type="axlapi:AddRemoteDestinationReq"/>
	<xsd:element name="addRemoteDestinationResponse" type="axlapi:StandardResponse"/>
	<!--<xsd:element name="removeRemoteDestination" type="axlapi:NameAndGUIDRequest"/>-->
	<xsd:complexType name="RemoveRemoteDestinationReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID"/>
						<xsd:element name="destination" type="xsd:string"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="removeRemoteDestination" type="axlapi:RemoveRemoteDestinationReq"/>
	<xsd:element name="removeRemoteDestinationResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRemoteDestinationReq">
		<xsd:annotation>
			<xsd:documentation>Updates a Remote Destination.  Specify the Remote Destination to be modified .</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID"/>
						<xsd:element name="destination" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="newDestination" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new destination number for this remote destination.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="answerTooSoonTimer" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="answerTooLateTimer" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="delayBeforeRingingCell" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="isMobilePhone" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableMobileConnect" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="lineAssociations" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The line association for this remote destination.  If this element is null, then all line associations are removed from this remote destination.  Note:  If the lineAssciations element is present, then all existing line associations are removed and replaced with the sub-elements described by the lineAssociation element.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="lineAssociation" type="axl:XLineAssociation" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="timeZone" type="axl:XTimeZone" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="todAccessId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="todAccessName" type="axl:String128" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="mobileSmartClientId" type="axl:XUUID"/>
						<xsd:element name="mobileSmartClientName" type="axl:String128"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRemoteDestination" type="axlapi:UpdateRemoteDestinationReq"/>
	<xsd:element name="updateRemoteDestinationResponse" type="axlapi:StandardResponse"/>
	<!--<xsd:element name="getRemoteDestination" type="axlapi:NameAndGUIDRequest"/>-->
	<xsd:complexType name="GetRemoteDestinationReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="uuid" type="axl:XUUID"/>
						<xsd:element name="destination" type="xsd:string"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRemoteDestination" type="axlapi:GetRemoteDestinationReq"/>
	<xsd:complexType name="GetRemoteDestinationRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Remote Destination that was specified by the GetRemoteDestination request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="remoteDestination" type="axl:XRemoteDestination"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRemoteDestinationResponse" type="axlapi:GetRemoteDestinationRes"/>
	<xsd:complexType name="StandardRemoteDestinationResponse">
		<xsd:annotation>
			<xsd:documentation>Returns either the GUID of the object that was altered, or returns true if the operation was successful.  Whichever is appropriate for the corresponding request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddRemoteDestinationProfileReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Remote Destination Profile.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newRemoteDestinationProfile" type="axl:XRemoteDestinationProfile">
						<xsd:annotation>
							<xsd:documentation>The new Remote Destination Profile to be added.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addRemoteDestinationProfile" type="axlapi:AddRemoteDestinationProfileReq"/>
	<xsd:element name="addRemoteDestinationProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeRemoteDestinationProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeRemoteDestinationProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="UpdateRemoteDestinationProfileReq">
		<xsd:annotation>
			<xsd:documentation>Updates a Remote Destination profile.  Specify the Remote Destination profile to be modified .</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="name" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the remote destination profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the remote destination profile that you want to update.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newName" type="xsd:Name" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new name of the remote destination profile.  Cannot be null.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="description" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new description of the remote destination profile.  Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="callingSearchSpaceId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Calling Search Space for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="devicePoolId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>The GUID of the new Device Pool for this remote destination profile.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="devicePoolName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the new Device Pool for this remote destination profile. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new lines for this remote destination profile.  If this element is null, then all lines are removed from this remote destination profile.  Note:  If the lines element is present, then all existing lines are removed and replaced with the sub-elements described by the line and lineIdentifier elements.  All directory numbers specified must already exist in the database.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="userId" type="xsd:string" nillable="false" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="rerouteCallingSearchSpaceId" type="axl:XUUID" nillable="true"/>
						<xsd:element name="rerouteCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="cgpnTransformationCSSId" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="primaryPhoneId" type="axl:XDevice">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="primaryPhoneName" type="axl:String128" nillable="false"/>
					</xsd:choice>
					<xsd:element name="dndOption" type="axl:XDNDOption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="mobileSmartClientProfileId" type="axl:XUUID"/>
						<xsd:element name="mobileSmartClientProfileName" type="axl:String128"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateRemoteDestinationProfile" type="axlapi:UpdateRemoteDestinationProfileReq"/>
	<xsd:element name="updateRemoteDestinationProfileResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getRemoteDestinationProfile" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetRemoteDestinationProfileRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Remote Destination Profile that was specified by the getRemoteDestinationProfile request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="remoteDestinationProfile" type="axl:XRemoteDestinationProfile"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getRemoteDestinationProfileResponse" type="axlapi:GetRemoteDestinationProfileRes"/>
	<xsd:complexType name="StandardRemoteDestinationProfileResponse">
		<xsd:annotation>
			<xsd:documentation>Returns either the GUID of the object that was altered, or returns true if the operation was successful.  Whichever is appropriate for the corresponding request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:pattern value="(true)|(false)|(\{........-....-....-....-............\})"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AddResourcePriorityNamespaceReq">
		<xsd:annotation>
			<xsd:documentation>Adds a new Resource Priority Namespace to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="newResourcePriorityNamespace" type="axl:XResourcePriorityNamespace" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addResourcePriorityNamespace" type="axlapi:AddResourcePriorityNamespaceReq"/>
	<xsd:element name="addResourcePriorityNamespaceResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="ResourcePriorityNamespaceReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="namespace" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getResourcePriorityNamespace" type="axlapi:ResourcePriorityNamespaceReq"/>
	<xsd:complexType name="GetResourcePriorityNamespaceRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Resource Priority Namespace that was specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="resourcePriorityNamespace" type="axl:XResourcePriorityNamespace"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getResourcePriorityNamespaceResponse" type="axlapi:GetResourcePriorityNamespaceRes"/>
	<xsd:complexType name="UpdateResourcePriorityNamespaceReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Resource Priority Namespace in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name="namespace" type="xsd:string" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The name of the ResourcePriorityNamespace to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="uuid" type="axl:XUUID" nillable="false">
							<xsd:annotation>
								<xsd:documentation>The GUID of the ResourcePriorityNamespace  to be modified.  Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="newNamespace" type="xsd:string" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new namespace for this ResourcePriorityNamespace.  Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateResourcePriorityNamespace" type="axlapi:UpdateResourcePriorityNamespaceReq"/>
	<xsd:element name="updateResourcePriorityNamespaceResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeResourcePriorityNamespace" type="axlapi:ResourcePriorityNamespaceReq"/>
	<xsd:element name="removeResourcePriorityNamespaceResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="GetResourcePriorityDefaultNamespaceReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getResourcePriorityDefaultNamespace" type="axlapi:GetResourcePriorityDefaultNamespaceReq"/>
	<xsd:complexType name="GetResourcePriorityDefaultNamespaceRes">
		<xsd:annotation>
			<xsd:documentation>Contains the Resource Priority Default Namespace</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="resourcePriorityDefaultNamespace" type="axl:XResourcePriorityDefaultNamespace"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getResourcePriorityDefaultNamespaceResponse" type="axlapi:GetResourcePriorityDefaultNamespaceRes"/>
	<xsd:complexType name="UpdateResourcePriorityDefaultNamespaceReq">
		<xsd:annotation>
			<xsd:documentation>Updates an existing Resource Priority Default Namespace in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:choice minOccurs="0">
						<xsd:element name="resourcePriorityDefaultNamespaceId" type="axl:XUUID"/>
						<xsd:element name="resourcePriorityDefaultNamespaceName" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>The name of the ResourcePriorityNamespace to be set as Default. </xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateResourcePriorityDefaultNamespace" type="axlapi:UpdateResourcePriorityDefaultNamespaceReq"/>
	<xsd:element name="updateResourcePriorityDefaultNamespaceResponse" type="axlapi:StandardResponse"/>
	<xsd:complexType name="AddResourcePriorityNamespaceListReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Adds a new ResourcePriorityNamespaceList to the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="resourcePriorityNamespaceList" type="axl:XResourcePriorityNamespaceList" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="addResourcePriorityNamespaceList" type="axlapi:AddResourcePriorityNamespaceListReq"/>
	<xsd:element name="addResourcePriorityNamespaceListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="getResourcePriorityNamespaceList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:complexType name="GetResourcePriorityNamespaceListRes">
		<xsd:annotation>
			<xsd:documentation>Contains the ResourcePriorityNamespaceList specified by the request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="resourcePriorityNamespaceList" type="axl:XResourcePriorityNamespaceList"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="getResourcePriorityNamespaceListResponse" type="axlapi:GetResourcePriorityNamespaceListRes"/>
	<xsd:complexType name="UpdateResourcePriorityNamespaceListReq" abstract="false" final="#all">
		<xsd:annotation>
			<xsd:documentation>Update an existing ResourcePriorityNamespaceList in the database.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axlapi:NameAndGUIDRequest">
				<xsd:sequence>
					<xsd:element name="newName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new members of this ResourcePriorityNamespaceList.  If "members" is present, then all current members of this are removed and replaced by the "member" sub-elements.  Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XResourcePriorityNamespaceListMember" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="updateResourcePriorityNamespaceList" type="axlapi:UpdateResourcePriorityNamespaceListReq"/>
	<xsd:element name="updateResourcePriorityNamespaceListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="removeResourcePriorityNamespaceList" type="axlapi:NameAndGUIDRequest"/>
	<xsd:element name="removeResourcePriorityNamespaceListResponse" type="axlapi:StandardResponse"/>
	<xsd:element name="executeSQLQuery" type="axlapi:ExecuteSQLQueryReq" nillable="false">
		<xsd:annotation>
			<xsd:documentation>This API call is used to execute a Structured Query Language query against the database.  The sql element would contain the SQL statement.  If special characters are required, wrap the SQL command inside a CDATA element.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLQueryRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="row" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Each row element can contain any number of sub-elements, each sub-element is a column from that row in the result set.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLQueryResponse" type="axlapi:ExecuteSQLQueryRes">
		<xsd:annotation>
			<xsd:documentation>The response message to executeSQLQuery.  The return element represents the result set, which can contain 0 or more rows of data. Each row can have any number of elements as defined by columns specified in the SQL Query.  The name of each sub-element of the row element represents the column name, the value of each sub-element of the row element is the corresponding value of that column in the database.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLUpdateReq">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIRequest">
				<xsd:sequence>
					<xsd:element name="sql" type="xsd:string" nillable="false">
						<xsd:annotation>
							<xsd:documentation>Request to execute an SQL update.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLUpdate" type="axlapi:ExecuteSQLUpdateReq" nillable="false">
		<xsd:annotation>
			<xsd:documentation>This API call is used to execute a Structured Query Language Update against the database.  The sql element would contain the SQL statement</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ExecuteSQLUpdateRes">
		<xsd:complexContent>
			<xsd:extension base="axlapi:APIResponse">
				<xsd:sequence>
					<xsd:element name="return">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="rowsUpdated" type="xsd:integer">
									<xsd:annotation>
										<xsd:documentation>Rows updated indicates the number of rows updated by the SQL update.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="executeSQLUpdateResponse" type="axlapi:ExecuteSQLUpdateRes">
		<xsd:annotation>
			<xsd:documentation>The response message to executeSQLUpdate.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
</xsd:schema>
