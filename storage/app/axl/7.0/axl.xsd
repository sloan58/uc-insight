<?xml version="1.0"?>
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by Dev Garg (Cisco Systems, Inc.) -->
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by Tejas (Cisco Systems, Inc.) -->
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by Dev Garg (Cisco Systems, Inc.) -->
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by Huma Mahmood (Cisco Systems, Inc.) -->
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Jerry Vander Voord (Cisco Systems) -->
<xsd:schema targetNamespace="http://www.cisco.com/AXL/7.0" xmlns:axl="http://www.cisco.com/AXL/7.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" attributeFormDefault="unqualified">
	<xsd:include schemaLocation="AXLEnums.xsd"/>
	<xsd:annotation>
		<xsd:documentation>

Version 1.00

Copyright (c) 2001, 2007-2008 Cisco Systems, Inc.
	
**********************
* CISCO CONFIDENTIAL *
**********************
	
</xsd:documentation>
	</xsd:annotation>
	<!-- *********************************************************** -->
	<!-- Device Family                                               -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XAARGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String32"/>
			<xsd:element name="relatedGroups" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.  AXL API automatically adds the required entries in the AARDialPrefixMatrix table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="relatedGroup" type="axl:XAARGroupRelationship" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XAARGroupRelationship">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="AARGroup_From" type="axl:XAARGroup"/>
				<xsd:element name="GroupNameFrom" type="axl:String100"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="AARGroup_To" type="axl:XAARGroup"/>
				<xsd:element name="GroupNameTo" type="axl:String100"/>
			</xsd:choice>
			<xsd:element name="prefixDigit" type="axl:String32"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XApplicationUser">
		<xsd:sequence>
			<xsd:element name="userid" type="xsd:string"/>
			<xsd:element name="password" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Valid range is 1-127 characters.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="passwordCredentials" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only.Credential configuration for password.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:choice minOccurs="0">
							<xsd:element name="pwdCredPolicy">
								<xsd:annotation>
									<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:complexContent>
										<xsd:extension base="axl:XCredentialPolicy">
											<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
										</xsd:extension>
									</xsd:complexContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="pwdCredPolicyName" type="axl:String50"/>
						</xsd:choice>
						<xsd:element name="pwdCredUserCantChange" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pwdCredUserMustChange" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pwdCredTimeChanged" type="xsd:string" minOccurs="0"/>
						<xsd:element name="pwdCredTimeAdminLockout" type="xsd:string" minOccurs="0"/>
						<xsd:element name="pwdCredLockedByAdministrator" type="xsd:boolean" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Valid range is 1-42 characters.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="presenceGroup" type="axl:XPresenceGroup" nillable="false" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="presenceGroupName" type="axl:String50" nillable="false" minOccurs="0"/>
			</xsd:choice>
			<xsd:element name="acceptPresenceSubscription" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="allowReplaceHeader" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="isStandard" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="associatedDevices" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Also known as controlled devices.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="device" type="axl:String50" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of device.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="associatedGroups" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The User Groups to which the application user is associated with.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="userGroup" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence minOccurs="0">
									<xsd:element name="name" type="axl:String100" nillable="false" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Name of User Group</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="userRoles" nillable="true" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Read Only.</xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:sequence minOccurs="0">
												<xsd:element name="userRole" nillable="true" minOccurs="0" maxOccurs="unbounded">
													<xsd:annotation>
														<xsd:documentation>Name of the User Role associated with the user group.</xsd:documentation>
													</xsd:annotation>
													<xsd:complexType>
														<xsd:simpleContent>
															<xsd:extension base="axl:String100">
																<xsd:attribute name="uuid" type="axl:XUUID"/>
															</xsd:extension>
														</xsd:simpleContent>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="associatedCAPFProfiles" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only.The Certification Authority Proxy Function Profiles  to which the application user is associated with. </xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="CAPFProfileInstanceId" type="axl:String128" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDevice">
		<xsd:annotation>
			<xsd:documentation>Abstraction of all devices in the Call Manager system.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueString128">
				<xsd:annotation>
					<xsd:documentation>The device name, using only URL-friendly characters.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String128" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Optional description of the device.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Product/Model/Class block</xsd:documentation>
				</xsd:annotation>
				<xsd:choice>
					<xsd:annotation>
						<xsd:documentation>Product information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="product" type="axl:XProduct">
						<xsd:annotation>
							<xsd:documentation>Product ID string.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="productInfo" type="axl:XProductInfo">
						<xsd:annotation>
							<xsd:documentation>Complete product information block.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:choice>
					<xsd:annotation>
						<xsd:documentation>Model information is read-only.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="model" type="axl:XModel">
						<xsd:annotation>
							<xsd:documentation>Model ID string.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="modelInfo" type="axl:XModelInfo">
						<xsd:annotation>
							<xsd:documentation>Complete model information block.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:element name="class" type="axl:XClass">
					<xsd:annotation>
						<xsd:documentation>Class ID string. Class information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Protocol block</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="protocol" type="axl:XDeviceProtocol">
					<xsd:annotation>
						<xsd:documentation>Protocol information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="protocolSide" type="axl:XProtocolSide">
					<xsd:annotation>
						<xsd:documentation>Side information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Any device that makes calls has a calling search space. This tag is not valid for a device profile.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Device Pools are required for  most devices, including phones and gateways. Its not required for Device Profile.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="devicePool" type="axl:XDevicePool">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:UniqueString50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="commonDeviceConfig" type="axl:XCommonDeviceConfig" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="commonDeviceConfigName" type="axl:UniqueString50" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Only applicable to Phone.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="commonPhoneConfig" type="axl:XCommonPhoneConfig" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="commonPhoneConfigName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="networkLocation" type="axl:XNetworkLocation" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The new Device Destination flag for Trunk to Trunk Transfer and Drop Conference Feature is required for most gateways, except FXS gateways and phones. Not Nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>All devices that receive calls implicitly have a location for bandwidth negotiation. If the location is not defined, it is assumed to be LOCAL.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="location" type="axl:XLocation">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Media Resource (MOH) information. This tag is not valid for a device profile.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="mediaResourceList" type="axl:XMediaResourceList">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mediaResourceListName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is not valid for H323Phone, H323Trunk, SIPTrunk and Analog Phone.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is not valid for H323Phone, H323Trunk, SIPTrunk and Analog Phone.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is not valid for a device profile.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="automatedAlternateRoutingCSS" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>The calling search space used by Automated Alternate Routing. Nullable. Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>The name of the calling search space used by Automated Alternate Routing.  Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is not valid for a device profile.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="aarNeighborhood" type="axl:XAARNeighborhood">
					<xsd:annotation>
						<xsd:documentation>For IP Phones and Gateways. Nullable. Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="loadInformation" type="axl:XLoadInformation" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>For devices with load information, if any special load information is specified, the special attribute is set to TRUE. Otherwise, the load information is the default for the product.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0"/>
			<xsd:element name="versionStamp" type="axl:String128" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>UUID changed each time the device is updated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="traceFlag" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" minOccurs="0"/>
			<xsd:element name="retryVideoCallAsAudio" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is valid only for phones, SIP trunks and voice mail ports. Not nullable.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="securityProfile">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="uuid" type="axl:XUUID"/>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="securityProfileName" type="axl:UniqueString100"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is valid only for SIP Trunks and SIP Phones.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="sipProfile">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="uuid" type="axl:XUUID"/>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="sipProfileName" type="axl:UniqueString50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Not Applicable for VoicemailPort, DeviceProfile, T1-CAS and FXO ports. </xsd:documentation>
				</xsd:annotation>
				<xsd:element name="cgpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Not Applicable for VoicemailPort, DeviceProfile, T1-CAS and FXO ports. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ctiid" type="xsd:positiveInteger">
			<xsd:annotation>
				<xsd:documentation>Computer Telephony Interface ID, Unique, Cannot be null.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XVoiceMailPort">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:element name="line" type="axl:XLine">
						<xsd:annotation>
							<xsd:documentation>This is the entry to the DeviceNumPlanMap table.  The directory number is referred to by the "dirn" or "dirnId" sub-element.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XCTIRoutePoint">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0"/>
					<xsd:element name="lines" minOccurs="0">
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>An XLine is an entry in the DeviceNumPlanMap table.  The actual directory number is referenced inside the XLine object by the "dirn" or "dirnId" element.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="lineId" type="axl:XLineId" maxOccurs="unbounded"/>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>The lineIdentifier is a shorthand method that refers to a particular direcotyr number.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XConferenceBridge">
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueName128" nillable="false"/>
			<xsd:element name="description" type="axl:String128" nillable="true" minOccurs="0"/>
			<xsd:element name="product" type="axl:XProduct" nillable="false"/>
			<xsd:choice>
				<xsd:element name="devicePool" type="axl:XDevicePool" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:UniqueString50" nillable="false"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="location" type="axl:XLocation" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50" default="Hub_None" nillable="false"/>
			</xsd:choice>
			<xsd:element name="subUnit" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Applicable for               Cisco Conference Bridge (WS-SVC-CMM)             and Cisco Media Server(WS-SVC-CMM-MS).  Valid values range from 1 to 4.The value should be given as per the formula.       Cisco Media Server :            subunit = ((Extract two digits after 'A' from the name)-2)/3 + 1.                                   Cisco Conference Bridge:      subunit = ((Extract two digits after 'C' from the name)-1)/3 + 1   </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="loadInformation" type="axl:XLoadInformation" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by Cisco Conference Bridge Hardware.For devices with load information, if any special load information is specified, the special attribute is set to TRUE. Otherwise, the load information is the default for the product.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by     Cisco Video Conference Bridge(IPVC-35xx),Cisco Conference Bridge (WS-SVC-CMM) and    Cisco Media Server(WS-SVC-CMM-MS).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by Cisco Conference Bridge(WS-SVC-CMM) and   Cisco Media Server(WS-SVC-CMM-MS). Valid values for this tag are 32,64,96,128.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Valid only for Cisco IOS Enhanced Conference Bridge</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="securityProfile" type="axl:XUUID" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="securityProfileName" type="axl:UniqueString50" nillable="false"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPilotHuntGroup">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="pilotPoint">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="axl:XPilotPoint">
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="pilotPointName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XPilotHuntGroupMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPilotHuntGroupMember">
		<xsd:sequence>
			<xsd:element name="sortOrder" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="deviceMemberInfo">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="alwaysRoute" type="xsd:boolean" minOccurs="0"/>
							<xsd:element name="dirn" type="axl:XNPDirectoryNumber">
								<xsd:annotation>
									<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="userMemberInfo">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="lineIndex" type="xsd:nonNegativeInteger"/>
							<xsd:element name="pilotUserId" type="axl:XUUID"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XPilotUser">
		<xsd:sequence minOccurs="0">
			<xsd:element name="userId" type="axl:String255" nillable="false"/>
			<xsd:element name="password" type="xsd:string" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XGateway">
		<xsd:annotation>
			<xsd:documentation>This is an abstract base type for all Gateways to extend.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:sequence>
						<xsd:choice minOccurs="0">
							<xsd:element name="cdpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
								<xsd:annotation>
									<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
						</xsd:choice>
						<xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Supported only by a few MGCP gateways like 26XX, 366X, 37XX, 269X, 38XX, VG224.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" default="None" minOccurs="0"/>
						<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0"/>
						<xsd:element name="GClearEnable" type="xsd:boolean" default="false" minOccurs="0"/>
					</xsd:sequence>
					<xsd:element name="enableProtectedFacilityIE" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for DigitalAccess PRI Gateways</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XAnalogGateway">
		<xsd:annotation>
			<xsd:documentation>Analog Gateways extend Device and are concrete types.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XGateway">
				<xsd:sequence>
					<xsd:element name="country" type="axl:XCountry" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The gateway's country code. Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="maxPorts" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>The maximum number of ports this gateway supports.  Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ports" type="axl:XAnalogPortList">
						<xsd:annotation>
							<xsd:documentation>The list of ports on the gateway.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder">
						<xsd:annotation>
							<xsd:documentation>Describes the trunk-selection order for this gateway (ie, bottom-up, top-down).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XDigitalGateway" abstract="true">
		<xsd:complexContent>
			<xsd:extension base="axl:XGateway">
				<xsd:sequence minOccurs="0">
					<xsd:element name="country" type="axl:XCountry" nillable="true" minOccurs="0"/>
					<xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable to PRI gateways.For analog and T1 gateways, this tag comes under ports.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="trunkSelectionOrder" type="axl:XTrunkSelectionOrder" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Does not apply to PRI gateways.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XPresenceGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String128"/>
			<xsd:element name="description" type="axl:String128" minOccurs="0"/>
			<xsd:element name="matrix" type="axl:XMatrix" minOccurs="0"/>
			<xsd:element name="isStandard" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XIPPhone">
		<xsd:complexContent>
			<xsd:extension base="axl:XPhone">
				<xsd:sequence minOccurs="0">
					<xsd:element name="blfDirectedCallParks" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="blfDirectedCallPark" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:complexContent>
											<xsd:extension base="axl:XBLFDirectedCallPark">
												<xsd:attribute name="index" type="xsd:positiveInteger"/>
											</xsd:extension>
										</xsd:complexContent>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="addOnModules" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Additional modules attached to the phone. There can be 0, 1, or 2.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="addOnModule" type="axl:XAddOnModule" minOccurs="0" maxOccurs="2"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
					<xsd:element name="networkLocale" type="axl:XCountry" nillable="true" minOccurs="0"/>
					<xsd:element name="idleTimeout" type="xsd:nonNegativeInteger" nillable="true" minOccurs="0"/>
					<xsd:element name="authenticationURL" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="directoryURL" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="idleURL" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="informationURL" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="messagesURL" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="proxyServerURL" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="servicesURL" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="services" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="service" type="axl:XSubscribedService" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="softkeyTemplate" type="axl:XSoftkeyTemplate">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="softkeyTemplateName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="loginUserId" type="axl:String255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not applicable to IP phones</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Extension Mobility block.  By default, extension mobility is disabled.  To enable, include a default profile and set enableExtensionMobility to true.  Only applicable to 7960 and 7940 phones.  If enableExtensionMobility is false then these elements will not appear.</xsd:documentation>
						</xsd:annotation>
						<xsd:choice>
							<xsd:annotation>
								<xsd:documentation>The absence of this tag would mean the device would use the current device Settings</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="defaultProfile" type="axl:XProfile" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Only the "uuid" attribute is applicable to the AXL API.  Not nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="defaultProfileName" type="axl:String50" nillable="false" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The name of the default profile for this device.  Not nullable.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:element name="enableExtensionMobility" type="xsd:boolean">
							<xsd:annotation>
								<xsd:documentation> Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:choice minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>The current user profile in use by this device.  Read-only.</xsd:documentation>
							</xsd:annotation>
							<xsd:element name="currentProfile" type="axl:XProfile" nillable="false">
								<xsd:annotation>
									<xsd:documentation>Read-only.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="currentProfileName" type="axl:String50" nillable="false">
								<xsd:annotation>
									<xsd:documentation>Read-only.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:element name="loginTime" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Read-only.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="loginDuration" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Read-only.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:element name="currentConfig" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for a getPhoneResponse. It contains Extension Mobility related parameters for a device when a user is logged in using a user defined device profile. If no user is logged in, the original device information for these parameters is returned</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
								<xsd:choice minOccurs="0">
									<xsd:element name="phoneTemplate" type="axl:XPhoneTemplate">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="phoneTemplateName" type="axl:String50" nillable="false"/>
								</xsd:choice>
								<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This setting only affects devices that support MLPP. To set its value as 'none', pass '-1' in the request.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This setting only affects devices that support MLPP.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:choice minOccurs="0">
									<xsd:element name="softkeyTemplate" type="axl:XSoftkeyTemplate">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="softkeyTemplateName" type="xsd:string"/>
								</xsd:choice>
								<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="singleButtonBarge" type="axl:XBarge" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This tag is valid only for devices that support SBB.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="joinAcrossLines" type="axl:XStatus" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This tag is valid only for devices that support JAL.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
								<xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0"/>
								<xsd:element name="dndRingSetting" type="axl:XRingSetting" nillable="true" minOccurs="0"/>
								<xsd:element name="dndOption" type="axl:XDNDOption" nillable="false" minOccurs="0"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="singleButtonBarge" type="axl:XBarge" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support SBB.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="joinAcrossLines" type="axl:XStatus" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support JAL.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="builtInBridgeStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="hlogStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Not applicable to Device Profile.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is not valid for a device profile.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="subscribeCallingSearchSpace" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is not valid for a device profile.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="rerouteCallingSearchSpace" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="rerouteCallingSearchSpaceName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="allowCtiControlFlag" type="xsd:boolean" default="true" nillable="true" minOccurs="0"/>
					<xsd:choice>
						<xsd:element name="presenceGroup" type="axl:XPresenceGroup" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="presenceGroupName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="requireDTMFReception" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="RFC2833Disabled" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="phoneLoadName" type="axl:String32" minOccurs="0"/>
					<xsd:element name="certificateOperation" type="axl:XCertificateOperation" minOccurs="0"/>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>These tags can be updated only if securityProfile is not mentioned in the request.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="authenticationMode" type="axl:XAuthenticationMode" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>authenticationMode can be updated only if certificateOperation field is Install/Upgrade, Delete or Troubleshoot.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="keySize" type="axl:XKeySize" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>keySize can be updated only if certificateOperation field is Install/Upgrade, Delete or Troubleshoot.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:element name="authenticationString" type="axl:String128" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>authenticationString can be updated only if certificateOperation field is Install/Upgrade, Delete or Troubleshoot.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="certificateStatus" type="axl:XCertificateStatus" minOccurs="0"/>
					<xsd:element name="upgradeFinishTime" type="xsd:string" minOccurs="0"/>
					<xsd:element name="deviceMobilityMode" type="axl:XStatus" default="Default" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies if the phone is configured for device mobility feature or not</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="roamingDevicePoolName" type="axl:UniqueString50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only. Specifies the device pool being used if the device is roaming and the devicemobility feature is enabled for it.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="remoteDevice" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="dndOption" type="axl:XDNDOption" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndRingSetting" type="axl:XRingSetting" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isActive" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag determines if the newly added phone is active to determine consumption of license. If set to false the license units will not be consumed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isDualMode" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only tag.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for dual mode phones.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="mobilityUser" type="axl:XUUID" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The GUID of the mobility User for this phone.  Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mobilityUserIdName" type="axl:String50" nillable="true">
							<xsd:annotation>
								<xsd:documentation>The userid of the mobility user for this phone. Nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="phoneSuite" type="axl:XPhonePersonalization" default="Default" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If a blank tag is passed, the value of "Default" is inserted into the database.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneServiceDisplay" type="axl:XPhoneServiceDisplay" minOccurs="0"/>
					<xsd:element name="isProtected" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for devices that support Secure Tone</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only for CUMC devices.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="mobileSmartClientProfile" type="axl:XMobileSmartClientProfile">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="mobileSmartClientProfileName" type="axl:String128"/>
					</xsd:choice>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mtpPreferredCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialRules" type="axl:XSIPDialRules" nillable="false">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialRulesName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="sshUser" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable only to those devices that support ssh feature.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sshPwd" type="axl:String255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable only to those devices that support ssh feature.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="digestUser" type="axl:String255" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable only to SIP phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="outboundCallRollover" type="axl:XOutboundCallRollover" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field is applicable to only those phones that support Automatic Outbound Call Rollover.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XBusyLampField">
		<xsd:sequence>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element name="blfDirn" type="axl:XDirectoryNumber"/>
					<xsd:element name="routePartition" type="xsd:string" minOccurs="0"/>
				</xsd:sequence>
				<xsd:element name="blfDest" type="xsd:nonNegativeInteger"/>
			</xsd:choice>
			<xsd:element name="label" type="xsd:string" minOccurs="0"/>
			<xsd:element name="asciiLabel" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:element name="associatedBLFSDFeatures" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Features associated with this BLFSpeedDial button</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="feature" type="axl:XBLFSDOption" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of the feature.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XBLFDirectedCallPark">
		<xsd:sequence>
			<xsd:element name="label" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:element name="directedCallParkId" type="axl:XUUID"/>
				<xsd:element name="directedCallParkDNAndPartition">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="dnPattern" type="axl:XDirectoryNumber" nillable="false"/>
							<xsd:choice minOccurs="0">
								<xsd:element name="routePartition" type="axl:XRoutePartition" nillable="true" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Only the UUID attribute is read by AXL API.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="routePartitionName" type="axl:UniqueName50" nillable="true" minOccurs="0"/>
							</xsd:choice>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="labelAscii" type="axl:String50" nillable="true" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XPhone">
		<xsd:annotation>
			<xsd:documentation>Abstract representation of a phone device.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:element name="associatedPC" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>When adding or updating a phone with the AXL API, only use the 'line' element.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
								<xsd:element name="lineId" type="axl:XLineId" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Do not use when adding or updating a phone.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="lineLabel" type="xsd:string" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Do not use when adding or updating a phone.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Do not use when adding or updating a phone.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="numberOfButtons" type="xsd:positiveInteger" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="phoneTemplate" type="axl:XPhoneTemplate">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="phoneTemplateName" type="axl:String50" nillable="false"/>
					</xsd:choice>
					<xsd:element name="speeddials" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="speeddial" type="axl:XSpeeddial" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="busyLampFields" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="busyLampField" type="axl:XBusyLampField" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="primaryPhone" type="axl:XDevice">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="primaryPhoneName" type="axl:String128" nillable="true"/>
					</xsd:choice>
					<xsd:element name="ringSettingIdleBLFAudibleAlert" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="ringSettingBusyBLFAudibleAlert" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XProfile">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:element name="deviceProfile" type="axl:XDeviceProfile"/>
					<xsd:element name="loginUserid" type="xsd:string"/>
					<xsd:element name="loginTime" type="xsd:time"/>
					<xsd:element name="loginDuration" type="xsd:nonNegativeInteger"/>
					<xsd:element name="allowHoteling" type="xsd:boolean"/>
					<xsd:element name="defaultProfileId" type="axl:XUUID" minOccurs="0"/>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="phoneServiceDisplay" type="axl:XPhoneServiceDisplay" minOccurs="0"/>
					<xsd:element name="requirePKIAuthForHTTPS" type="axl:XStatus" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XBRIGateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XDigitalGateway">
				<xsd:sequence>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean"/>
					<xsd:element name="briProtocol" type="axl:XBriProtocol"/>
					<xsd:element name="calledPlan" type="axl:XNumberingPlan" minOccurs="0"/>
					<xsd:element name="calledPri" type="axl:XPriOfNumber"/>
					<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection"/>
					<xsd:element name="callingPlan" type="axl:XNumberingPlan" minOccurs="0"/>
					<xsd:element name="callingPri" type="axl:XPriOfNumber"/>
					<xsd:element name="chanIE" type="xsd:nonNegativeInteger">
						<xsd:annotation>
							<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="clockReference" type="axl:XClockReference"/>
					<xsd:element name="csuParam" type="axl:XCSUParam"/>
					<xsd:element name="dChannelEnable" type="xsd:boolean"/>
					<xsd:element name="direction" type="xsd:boolean"/>
					<xsd:element name="displayIE" type="xsd:boolean"/>
					<xsd:element name="encode" type="axl:XEncode"/>
					<xsd:element name="fdlChannel" type="axl:XFDLChannel"/>
					<xsd:element name="firstDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="framing" type="axl:XFraming"/>
					<xsd:element name="intraDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="numberIE" type="xsd:boolean"/>
					<xsd:element name="numDigits" type="xsd:nonNegativeInteger">
						<xsd:annotation>
							<xsd:documentation>The value of numDigits must be either 0 to 32 or 99.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="prefix" type="xsd:string" minOccurs="0"/>
					<xsd:element name="presentationBit" type="axl:XPresentationBit"/>
					<xsd:element name="sendRestart" type="xsd:boolean"/>
					<xsd:element name="setupNonISDNPI" type="xsd:boolean"/>
					<xsd:element name="sigDigits" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>This tag enables the significant digits for the gateway; if the tag is set to true, the value of the 'numDigits' element is used as Significant Digits for the gateway. This tag should have a value of false if numDigits is set to 99.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="stableIn4" type="xsd:boolean"/>
					<xsd:element name="statusPoll" type="xsd:boolean"/>
					<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger"/>
					<xsd:element name="trunkPadRx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkPadTx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkLevel" type="axl:XTrunkLevel"/>
					<xsd:element name="yellowAlarm" type="axl:XYellowAlarm"/>
					<xsd:element name="zeroSuppression" type="axl:XZeroSuppression"/>
					<xsd:element name="nationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="internationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="subscriberPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XPRIGateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XDigitalGateway">
				<xsd:sequence>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean"/>
					<xsd:element name="calledPlan" type="axl:XNumberingPlan"/>
					<xsd:element name="calledPri" type="axl:XPriOfNumber"/>
					<xsd:element name="callerIDDN" type="axl:XDirectoryNumber" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection"/>
					<xsd:element name="callingPlan" type="axl:XNumberingPlan"/>
					<xsd:element name="callingPri" type="axl:XPriOfNumber"/>
					<xsd:element name="chanIE" type="xsd:nonNegativeInteger"/>
					<xsd:element name="clockReference" type="axl:XClockReference"/>
					<xsd:element name="csuParam" type="axl:XCSUParam"/>
					<xsd:element name="dChannelEnable" type="xsd:boolean"/>
					<xsd:element name="direction" type="xsd:boolean"/>
					<xsd:element name="displayIE" type="xsd:boolean"/>
					<xsd:element name="encode" type="axl:XEncode"/>
					<xsd:element name="fdlChannel" type="axl:XFDLChannel"/>
					<xsd:element name="firstDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="interfaceId">
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="present" type="xsd:boolean"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="intraDelay" type="xsd:nonNegativeInteger"/>
					<xsd:element name="mcdnEnable" type="xsd:boolean"/>
					<xsd:element name="numberIE" type="xsd:boolean"/>
					<xsd:element name="numDigits" type="xsd:nonNegativeInteger">
						<xsd:annotation>
							<xsd:documentation>The value of numDigits must be either 0 to 32 or 99.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="passingPrecedenceLevelThroughUUIE" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="prefix" type="xsd:string" minOccurs="0"/>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false"/>
					<xsd:element name="connectedPBX" type="axl:XConnectedPBX" nillable="false"/>
					<xsd:element name="priProtocol" type="axl:XPriProtocol"/>
					<xsd:element name="securityAccessLevel" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="sendCallingNameInFacilityIE" type="xsd:boolean"/>
					<xsd:element name="sendEXLeadingCharInDispIE" type="xsd:boolean"/>
					<xsd:element name="sendRestart" type="xsd:boolean"/>
					<xsd:element name="setupNonISDNPI" type="xsd:boolean"/>
					<xsd:element name="sigDigits" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>This tag enables the significant digits for the gateway; if the tag is set to true, the value of the 'numDigits' element is used as Significant Digits for the gateway. This tag should have a value of false if numDigits is set to 99.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="span" type="xsd:nonNegativeInteger"/>
					<xsd:element name="statusPoll" type="xsd:boolean"/>
					<xsd:element name="stripCountOut" type="xsd:nonNegativeInteger"/>
					<xsd:element name="trunkPadRx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkPadTx" type="axl:XTrunkPad"/>
					<xsd:element name="trunkLevel" type="axl:XTrunkLevel"/>
					<xsd:element name="yellowAlarm" type="axl:XYellowAlarm"/>
					<xsd:element name="zeroSuppression" type="axl:XZeroSuppression"/>
					<xsd:element name="sMDIBasePort" type="xsd:positiveInteger"/>
					<xsd:element name="protocolProfile91NameOnly" type="xsd:boolean"/>
					<xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="nationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="internationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="subscriberPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XServerDevice">
		<xsd:annotation>
			<xsd:documentation>Server devices are server processes that receive and/or make calls; because they are server-based, they have a process node.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:choice>
						<xsd:element name="processNode" type="axl:XProcessNode"/>
						<xsd:element name="processNodeId" type="axl:XUUID"/>
						<xsd:element name="processNodeName" type="xsd:Name"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XT1Gateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XDigitalGateway">
				<xsd:sequence>
					<xsd:element name="clockReference" type="axl:XClockReference"/>
					<xsd:element name="csuParam" type="axl:XCSUParam"/>
					<xsd:element name="digitSending" type="axl:XDigitSending"/>
					<xsd:element name="encode" type="axl:XEncode"/>
					<xsd:element name="fdlChannel" type="axl:XFDLChannel"/>
					<xsd:element name="maxPorts" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ports" type="axl:XT1PortList"/>
					<xsd:element name="yellowAlarm" type="axl:XYellowAlarm"/>
					<xsd:element name="zeroSuppression" type="axl:XZeroSuppression"/>
					<xsd:element name="sMDIBasePort" type="xsd:positiveInteger"/>
					<xsd:element name="helpURL" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Device">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence minOccurs="0">
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="cdpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureDuration" type="xsd:nonNegativeInteger" default="60" nillable="true" minOccurs="0"/>
					<xsd:element name="srtpAllowed" type="xsd:boolean" default="false" nillable="true" minOccurs="0"/>
					<xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Phones and H323Trunks.Not for H323Gateways.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpace" type="axl:XCallingSearchSpace">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="waitForFarEndH245TerminalSet" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="mtpPreferredCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323 Phones.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="displayIEDelivery" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectOutboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="redirectInboundNumberIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableInboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="enableOutboundFaststart" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If set to True, mediaResourceList must be mentioned and mtpRequired must be set to True.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="codecForOutboundFaststart" type="axl:XMediaPayload" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>enableOutboundFaststart must be set to true for it to be read. Not Nillable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Phone">
		<xsd:complexContent>
			<xsd:extension base="axl:XH323Device">
				<xsd:sequence minOccurs="0">
					<xsd:element name="hlogStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
					<xsd:element name="signalingPort" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
					<xsd:element name="gatekeeperInfo" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="gatekeeperName" type="axl:String50" nillable="false"/>
									<xsd:element name="gatekeeper" type="axl:XGatekeeper" nillable="false">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:choice>
								<xsd:element name="e164" type="axl:String50" nillable="false"/>
								<xsd:element name="technologyPrefix" type="axl:String50" nillable="false"/>
								<xsd:element name="zone" type="axl:String50" nillable="false"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="lines" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="line" type="axl:XLine" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Gateway">
		<xsd:complexContent>
			<xsd:extension base="axl:XH323Device">
				<xsd:sequence minOccurs="0">
					<xsd:element name="nationalPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="internationalPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="subscriberPrefix" type="axl:String32" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for H323Gateways/Trunks</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="significantDigits" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The value of significantDigits  must be either from 0 to 32 or 99. Here 99 means All. enable attribute is Read-Only. If significantDigits is 0-32 then enable is true, if significantDigits is 99 then enable is false.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="optional"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="calledPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyIENumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
					<xsd:element name="calledNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XH323Trunk">
		<xsd:complexContent>
			<xsd:extension base="axl:XH323Gateway">
				<xsd:sequence>
					<xsd:element name="tunneledProtocol" type="axl:XTunneledProtocol"/>
					<xsd:element name="pathReplacementSupport" type="xsd:boolean" default="false" minOccurs="0"/>
					<xsd:choice>
						<xsd:element name="gatekeeperInfo">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="gatekeeperName" type="axl:String50" nillable="false"/>
										<xsd:element name="gatekeeper" type="axl:XGatekeeper" nillable="false">
											<xsd:annotation>
												<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:choice>
									<xsd:element name="terminal" type="axl:XTerminal" nillable="false"/>
									<xsd:element name="technologyPrefix" type="axl:String50" minOccurs="0"/>
									<xsd:element name="zone" type="axl:String50" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="remoteServerInfo">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="server1" type="axl:String255" nillable="false"/>
									<xsd:element name="server2" type="axl:String255" minOccurs="0"/>
									<xsd:element name="server3" type="axl:String255" minOccurs="0"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:sequence minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Applicable only for Non-Gatekeeper controlled ICT trunk's.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="ictPassingPrecedenceLevelThroughUUIE" type="xsd:boolean" nillable="false" minOccurs="0"/>
						<xsd:element name="ictSecurityAccessLevel" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Should be set only when ictPassingPrecedenceLevelThroughUUIE is set to true.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XSIPTrunk">
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:choice minOccurs="0">
						<xsd:element name="cdpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="subscribeCallingSearchSpace" type="axl:XCallingSearchSpace">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="rerouteCallingSearchSpace" type="axl:XCallingSearchSpace">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="rerouteCallingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="referCallingSearchSpace" type="axl:XCallingSearchSpace">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="referCallingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="mtpRequired" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
					<xsd:element name="destinationaddress" type="axl:String50">
						<xsd:annotation>
							<xsd:documentation>Valid characters for Destination Address are letters, numbers, dashes and dots(periods). IP address should have four 8-bit numbers seperated by periods. Host name should start with letter and end with letter or number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destAddrIsSRV" type="xsd:boolean" default="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is ignored and destAddrIsSRV is set to false if destinationaddress is an IP address and destinationport is mentioned correctly. It is valid only for add and update, so it is not returned in get response.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="destinationport" type="xsd:integer" default="0" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag depends on destAddrIsSRV. It is mandatory when destAddrIsSRV is false or when destination address is an IP address. Valid values between 1024 to 65535 (inclusive)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="tkSipCodec" type="axl:XSIPCodec" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The ampersand is a reserved character in xml. It can be escaped as "&amp;"</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sigDigits" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The value of sigDigits  must be either from 0 to 32 or 99. Here 99 means All. enable attribute is Read-Only. If sigDigits is 0-32 then enable is true, if sigDigits is 99 then enable is false.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:nonNegativeInteger">
									<xsd:attribute name="enable" type="xsd:boolean" use="optional"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="connectedNamePresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedPartyIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection" nillable="false" minOccurs="0"/>
					<xsd:element name="callingname" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingLineIdPresentation" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callerName" type="axl:String50" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Characters which are not valid for caller name are ampersand, braces, less than or greater than, percentage sign, double quotes, square brackets and pipe.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callerIdDN" type="axl:String50" minOccurs="0"/>
					<xsd:element name="acceptInboundRDNIS" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="acceptOutboundRDNIS" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="srtpAllowed" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
					<xsd:element name="srtpFallbackAllowed" type="xsd:boolean" default="false" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is valid only if srtpAllowed is set to false.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isPaiEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="sipPrivacy" type="axl:XSipPrivacy" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="isRpidEnabled" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="sipAssertedType" type="axl:XSipAssertedType" default="Default" nillable="false" minOccurs="0"/>
					<xsd:element name="DTMFSignalingMethod" type="axl:XDTMFSignaling" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XRecordingProfile">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="recordingCSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="recordingCSSName" type="axl:UniqueName50" nillable="true"/>
			</xsd:choice>
			<xsd:element name="recorderDestination" type="xsd:string" nillable="false"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XGatekeeper">
		<xsd:annotation>
			<xsd:documentation>Gatekeeper is a type of device.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String128" nillable="false">
				<xsd:annotation>
					<xsd:documentation>From device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String128" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="rrqTimeToLive" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Registration Request Time to Live.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="retryTimeout" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Registration Retry Timeout</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="enableDevice" type="xsd:boolean" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XRemoteDestinationProfile">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>The device name, using only URL-friendly characters.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Optional description of the device.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Product/Model/Class block</xsd:documentation>
				</xsd:annotation>
				<xsd:choice>
					<xsd:annotation>
						<xsd:documentation>Product information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="product" type="axl:XProduct">
						<xsd:annotation>
							<xsd:documentation>Product ID string.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="productInfo" type="axl:XProductInfo">
						<xsd:annotation>
							<xsd:documentation>Complete product information block.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:choice>
					<xsd:annotation>
						<xsd:documentation>Model information is read-only.</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="model" type="axl:XModel">
						<xsd:annotation>
							<xsd:documentation>Model ID string.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="modelInfo" type="axl:XModelInfo">
						<xsd:annotation>
							<xsd:documentation>Complete model information block.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:element name="class" type="axl:XClass">
					<xsd:annotation>
						<xsd:documentation>Class ID string. Class information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>Protocol block</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="protocol" type="axl:XDeviceProtocol">
					<xsd:annotation>
						<xsd:documentation>Protocol information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="protocolSide" type="axl:XProtocolSide">
					<xsd:annotation>
						<xsd:documentation>Side information is read-only except when creating a device.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Any device that makes calls has a calling search space.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="devicePool" type="axl:XDevicePool">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="xsd:string"/>
			</xsd:choice>
			<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
			<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="false" minOccurs="0"/>
			<xsd:element name="lines" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>When adding or updating a remoteDestinationProfile with the AXL API, only use the 'line' element.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
						<xsd:element name="lineId" type="axl:XLineId" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Do not use when adding or updating a remoteDestinationProfile.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="lineLabel" type="xsd:string" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Do not use when adding or updating a remoteDestinationProfile.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Do not use when adding or updating a remoteDestinationProfile.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="callInfoPrivacyStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
			<xsd:element name="userId" type="xsd:string" nillable="false"/>
			<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="rerouteCallingSearchSpace" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="rerouteCallingSearchSpaceName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="cgpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:element name="useDevicePoolCgpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="primaryPhone" type="axl:XDevice">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="primaryPhoneName" type="axl:String128" nillable="false"/>
			</xsd:choice>
			<xsd:element name="dndOption" type="axl:XDNDOption" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="dndStatus" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is valid only for devices that support DND.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="mobileSmartClientProfile" type="axl:XMobileSmartClientProfile">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mobileSmartClientProfileName" type="axl:String128"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="ctiid" type="xsd:positiveInteger"/>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Complex Types                                    -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XAARNeighborhood">
		<xsd:annotation>
			<xsd:documentation>An Automated Alternate Routing Neighborhood.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XAddOnModule">
		<xsd:annotation>
			<xsd:documentation>Sidecar modules for used by Cisco IP Phones.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="loadInformation" type="axl:XLoadInformation">
				<xsd:annotation>
					<xsd:documentation>Load Information is either the module's specific load information or the default load information.If any special load information is specified, the special attribute is set to TRUE. Otherwise, the load information is the default for the product.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="model" type="axl:XModel">
				<xsd:annotation>
					<xsd:documentation>Model ID string.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XAnalogPortList">
		<xsd:annotation>
			<xsd:documentation>List of analog ports on an analog gateway.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="port" type="axl:XAnalogPort" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XAnalogPort">
		<xsd:annotation>
			<xsd:documentation>An analog port on an analog gateway. The portNumber attribute  identifies the ordinal value of the port in the gateway.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="attendantDN" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="callerIdDN" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="callerIdEnable" type="xsd:boolean"/>
			<xsd:element name="callingPartySelection" type="axl:XCallingPartySelection"/>
			<xsd:element name="digitSending" type="axl:XDigitSending"/>
			<xsd:element name="expectedDigits" type="xsd:nonNegativeInteger"/>
			<xsd:element name="finalDigits">
				<xsd:annotation>
					<xsd:documentation>The value for finalDigits must be between 0 to 32. Ignore the significant attribute, it has been depricated and kept only for backward compatibility issue.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:nonNegativeInteger">
							<xsd:attribute name="significant" type="xsd:boolean" use="optional"/>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>When adding or updating with the AXL API, do not use the lineId element.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="line" type="axl:XLine"/>
				<xsd:element name="lineId" type="axl:XLineId"/>
			</xsd:choice>
			<xsd:element name="prefixDN" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="presentationBit" type="axl:XPresentationBit"/>
			<xsd:element name="silenceSuppressionThreshold" type="axl:XSilenceSuppressionThreshold"/>
			<xsd:element name="smdiPortNumber" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>Not used by T1 Ports.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="startDialProtocol" type="axl:XStartDialProtocol"/>
			<xsd:element name="timers">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="timer" type="xsd:nonNegativeInteger" maxOccurs="6"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="trunk" type="axl:XTrunk"/>
			<xsd:element name="trunkDirection" type="axl:XTrunkDirection"/>
			<xsd:element name="trunkLevel" type="axl:XTrunkLevel"/>
			<xsd:element name="trunkPadRx" type="axl:XTrunkPad"/>
			<xsd:element name="trunkPadTx" type="axl:XTrunkPad"/>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Arbitrary XML defined by 3rd party vendors.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="portNumber" type="xsd:positiveInteger" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="XButton">
		<xsd:annotation>
			<xsd:documentation>A button on a phone template.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="feature" type="axl:XFeature">
				<xsd:annotation>
					<xsd:documentation>The feature invoked by this button.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="label" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The label to display for this button.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="buttonNumber" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCallForwardInfo">
		<xsd:sequence>
			<xsd:element name="forwardToVoiceMail" type="xsd:boolean" default="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>DB: Derived from CF*VoiceMailEnabled fields. This tag has been marked as ReadOnly for callForwardAlternateParty as it is not applicable for callForwardAlternateParty setting.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is applicable only for callForwardAll.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="secondaryCallingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="secondaryCallingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="destination" type="axl:String50" minOccurs="0"/>
			<xsd:element name="duration" type="xsd:int" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Applicable only for callForwardNoAnswer and callForwardAlternateParty,Value "-1" in the response indicates that the CM will use the default setting</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XHuntForwardInfo">
		<xsd:sequence>
			<xsd:element name="usePersonalPreferences" type="xsd:boolean" default="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Use original Called DN forward no-coverage settings</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="destination" type="axl:String50" minOccurs="0"/>
			<xsd:element name="maxHuntduration" type="xsd:integer" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Value "-1" in the response means no value has been assigned and internally the CM will use default setting i.e., NULL</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XCallingSearchSpace">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueName50"/>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="clause" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XCallingSearchSpaceMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="partitionUsage" type="axl:XPartitionUsage" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCallingSearchSpaceMember">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="routePartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>DEPRECATED: use routePartition/uuid</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionName" type="axl:String50"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCallerFilterListMember">
		<xsd:sequence minOccurs="0">
			<xsd:element name="dnMask" type="axl:String50"/>
			<xsd:element name="callerFilterMask" type="axl:XCallerFilterMask" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XCallerFilterList">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="description" type="axl:String128" nillable="true" minOccurs="0"/>
			<xsd:element name="isAllowedType" type="xsd:boolean"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="endUser" type="axl:XUUID"/>
				<xsd:element name="endUserIdName" type="axl:UniqueName50"/>
			</xsd:choice>
			<xsd:element name="members" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XCallerFilterListMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManager">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50">
				<xsd:annotation>
					<xsd:documentation>Read-only. name is now autogenerated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="autoRegistration" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="startDN" type="axl:XDirectoryNumber" minOccurs="0"/>
						<xsd:element name="endDN" type="axl:XDirectoryNumber" minOccurs="0"/>
						<xsd:element name="nextDN" type="axl:XDirectoryNumber" minOccurs="0"/>
						<xsd:choice minOccurs="0">
							<xsd:element name="routePartition" type="axl:XRoutePartition">
								<xsd:annotation>
									<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="routePartitionName" type="axl:String50"/>
						</xsd:choice>
						<xsd:element name="e164Mask" type="axl:String50" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="ports">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="ethernetPhonePort" type="xsd:nonNegativeInteger"/>
						<xsd:element name="mgcpPorts">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="listen" type="xsd:nonNegativeInteger">
										<xsd:annotation>
											<xsd:documentation>UDP port for MGCP communication.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="keepAlive" type="xsd:nonNegativeInteger">
										<xsd:annotation>
											<xsd:documentation>TCP port for backhaul for Q.931 messages.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="processNodeName" type="axl:String255"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="ctiid" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManagerGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="tftpDefault" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Only use when setting TFTP Default to true.  Setting to true will result in setting all other CallManager groups to false. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XCallManagerMember" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute of callManager is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManagerMember">
		<xsd:choice>
			<xsd:element name="callManager" type="axl:XCallManager">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="callManagerName" type="axl:String50"/>
		</xsd:choice>
		<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XCMCInfo">
		<xsd:sequence minOccurs="0">
			<xsd:element name="code" type="axl:String16"/>
			<xsd:element name="description" type="axl:String50" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCallManagerMemberId">
		<xsd:simpleContent>
			<xsd:extension base="axl:XUUID">
				<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XCCMVersion">
		<xsd:sequence>
			<xsd:element name="version" type="axl:String50"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XCredentialPolicy">
		<xsd:sequence>
			<xsd:element name="name" type="axl:String255"/>
			<xsd:element name="noLimitForFailedLogon" type="xsd:boolean" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If this tag is set to true, zero is inserted into the database for failedLogon.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="failedLogon" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Failed logon must be a number in the range 0 to 100.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="resetFailedLogonAttempts" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Reset Failed logon attempts must be a number in the range 1 to 120.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="administratorMustUnlock" type="xsd:boolean" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If this tag is set to true, zero is inserted into the database for lockoutDuration.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="lockoutDuration" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Lockout duration must be a number in the range 0 to 1440.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="credChangeDuration" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Credential change duration must be a number in the range 0 to 129600.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="neverExpires" type="xsd:boolean" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If this tag is set to true, zero is inserted into the database for credExpiresAfter.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="credExpiresAfter" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Credential expires after must be a number in the range 0 to 365.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="minCredLength" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Minimum credential length must be a number in the range 0 to 64.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="prevCredStoredNum" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Stored number of previous credentials must be a number in the range 0 to 25.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="inactiveDaysAllowed" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Inactive days allowed must be a number in the range 0 to 5000.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="expiryWarningDays" type="xsd:nonNegativeInteger" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Expiry warning days must be a number in the range 0 to 90.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="trivialCredCheck" type="xsd:boolean" nillable="false"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDateTimeSetting">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="dateTemplate" type="axl:String50"/>
			<xsd:element name="timeZone" type="axl:XTimeZone"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDevicePool">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueString50">
				<xsd:annotation>
					<xsd:documentation>Not nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="autoSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="autoSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="dateTimeSetting" type="axl:XDateTimeSetting">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Not Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dateTimeSettingName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Not nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callManagerGroupName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>uuid will be returned in get Response.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="mediaResourceList" type="axl:XMediaResourceList">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mediaResourceListName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="region" type="axl:XRegion">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="regionName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="networkLocale" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Nullable. The value accepted and retrieved from the database for this field will be of type XCountry in AXLEnums.xsd</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="srstInfo" type="axl:XSRSTInfo"/>
				<xsd:element name="srstName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="connectionMonitorDuration" type="xsd:int" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>-1 means using system default</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="automatedAlternateRoutingCSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The calling search space used by Automated Alternate Routing. Nullable. Only the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="automatedAlternateRoutingCSSName" type="axl:String50" nillable="true">
					<xsd:annotation>
						<xsd:documentation>name of the calling search space used by Automated Alternate Routing.  Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="aarNeighborhood" type="axl:XAARNeighborhood" nillable="true">
					<xsd:annotation>
						<xsd:documentation>For IP Phones and Gateways. Nullable. Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="aarNeighborhoodName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="location" type="axl:XLocation" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="mobilityCSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The calling search space used by Device Mobility. Nullable. Only the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mobilityCSSName" type="axl:String50" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The name of the calling search space used by Device Mobility.  Nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="physicalLocation" type="axl:XPhysicalLocation" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="physicalLocationName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="deviceMobilityGroup" type="axl:XDeviceMobilityGroup" nillable="true">
					<xsd:annotation>
						<xsd:documentation>the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="deviceMobilityGroupName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:element name="revertPriority" type="axl:XRevertPriority" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The value accepted and retrieved from the database for this field will be of type XRevertPriority in AXLEnums.xsd.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="singleButtonBarge" type="axl:XBarge" default="Off" nillable="false" minOccurs="0"/>
			<xsd:element name="joinAcrossLines" type="axl:XStatus" default="Off" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="cgpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="cgpnTransformationCSSName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="cdpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="localRouteGroup" type="axl:XRouteGroup" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="localRouteGroupName" type="axl:String50" nillable="true"/>
			</xsd:choice>
			<xsd:element name="nationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
			<xsd:element name="internationalPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
			<xsd:element name="unknownPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
			<xsd:element name="subscriberPrefix" type="axl:String32" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCommonDeviceConfig">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueString50" nillable="false"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="softkeyTemplate" type="axl:XSoftkeyTemplate" nillable="true">
					<xsd:annotation>
						<xsd:documentation>only the uuid attribute is read by the AXL API. Nullable</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="softkeyTemplateName" type="xsd:string" nillable="true"/>
			</xsd:choice>
			<xsd:element name="userLocale" type="xsd:string" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Nullable. The value accepted and retrieved from the database for this field will be of type XUserLocale in AXLEnums.xsd.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Nullable</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Nullable</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mlppDomainId" type="xsd:int" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affect devices that support MLPP</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mlppIndicationStatus" type="axl:XStatus" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affect devices that support MLPP</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Off" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Default is not applicable for CommonDeviceConfig API</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="preemption" type="axl:XPreemption" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This setting only affect devices that support MLPP</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XCommonPhoneConfig">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueString50" nillable="false"/>
			<xsd:element name="description" type="axl:String128" nillable="false" minOccurs="0"/>
			<xsd:element name="unlockPwd" type="axl:String50" nillable="false" minOccurs="0"/>
			<xsd:element name="dndOption" type="axl:XDNDOption" nillable="false"/>
			<xsd:element name="dndAlertingType" type="axl:XRingSetting" nillable="false"/>
			<xsd:element name="backgroundImage" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
			<xsd:element name="phonePersonalization" type="axl:XPhonePersonalization" nillable="false"/>
			<xsd:element name="phoneServiceDisplay" type="axl:XPhoneServiceDisplay" nillable="false"/>
			<xsd:element name="requirePKIAuthForHTTPS" type="axl:XStatus" nillable="false"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDevicePoolDeviceMobility">
		<xsd:choice>
			<xsd:element name="devicePool" type="axl:XDevicePool">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="devicePoolName">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="axl:String50">
							<xsd:attribute name="uuid" type="axl:XUUID"/>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDeviceMobility">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" nillable="false"/>
			<xsd:element name="subNet" type="xsd:string" nillable="false"/>
			<xsd:element name="subNetMaskSz" type="xsd:nonNegativeInteger" nillable="false"/>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XDevicePoolDeviceMobility" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPhysicalLocation">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" nillable="false"/>
			<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDeviceMobilityGroup">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" nillable="false"/>
			<xsd:element name="description" type="xsd:string" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDHCPServer">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode"/>
				<xsd:element name="processNodeName" type="axl:String128"/>
			</xsd:choice>
			<xsd:element name="primaryDNSipAddress" type="xsd:string" minOccurs="0"/>
			<xsd:element name="secondaryDNSipAddress" type="xsd:string" minOccurs="0"/>
			<xsd:element name="primaryTFTPServeripAddress" type="xsd:string" minOccurs="0"/>
			<xsd:element name="secondaryTFTPServeripAddress" type="xsd:string" minOccurs="0"/>
			<xsd:element name="bootstrapServeripAddress" type="xsd:string" minOccurs="0"/>
			<xsd:element name="domainName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="tftpServerName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" default="0">
				<xsd:annotation>
					<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" default="0">
				<xsd:annotation>
					<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="renewalTime" type="xsd:nonNegativeInteger" default="0">
				<xsd:annotation>
					<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" default="0">
				<xsd:annotation>
					<xsd:documentation>The valid values ranges from 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDHCPSubnet">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>Each DHCPSubnet is associated with a unique DHCP Server.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="dhcpServer" type="axl:XDHCPServer">
					<xsd:annotation>
						<xsd:documentation>only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dhcpServerName" type="xsd:string"/>
			</xsd:choice>
			<xsd:element name="subnetIPAddress" type="xsd:string"/>
			<xsd:element name="primaryStartIPAddress" type="xsd:string"/>
			<xsd:element name="primaryEndIPAddress" type="xsd:string"/>
			<xsd:element name="secondaryStartIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="secondaryEndIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="primaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="secondaryRouterIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="subnetMask" type="xsd:string"/>
			<xsd:element name="domainName" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="primaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="secondaryDNSIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="tftpServerName" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="primaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="secondaryTFTPServerIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="bootstrapServerIPAddress" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="arpCacheTimeout" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ipAddressLeaseTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="renewalTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="rebindingTime" type="xsd:nonNegativeInteger" default="0" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Value between 0 to 1073741824.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDialPlan">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDialPlanTag">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50">
				<xsd:annotation>
					<xsd:documentation>Actually called "tag" in database.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="dialPlan" type="axl:XDialPlan"/>
				<xsd:element name="dialPlanName" type="xsd:string"/>
			</xsd:choice>
			<xsd:element name="operator" type="axl:XOperator"/>
			<xsd:element name="suppressFromRouteFilter" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDigitDiscardInstruction">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="clause" type="axl:String1024" minOccurs="0"/>
			<xsd:choice>
				<xsd:element name="dialPlan" type="axl:XDialPlan">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dialPlanName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="digitAnalysisId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XDigitDiscardInstructionMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDigitDiscardInstructionMember">
		<xsd:choice>
			<xsd:element name="dialPlanTagName" type="axl:String50" nillable="false"/>
			<xsd:element name="dialPlanTag" type="axl:XDialPlanTag">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XDisplayInstance">
		<xsd:sequence>
			<xsd:element name="name">
				<xsd:annotation>
					<xsd:documentation>The URI of this instance. For example: xmldi://cisco.com/Cisco VG200/mgcp</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="xmldi://\S+"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="version" type="xsd:string"/>
			<xsd:element name="author" type="xsd:string" minOccurs="0"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>At this point, you will either see a uses element optional followed by a parameters block, or simply a parameters block.</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="uses" type="xsd:anyURI">
						<xsd:annotation>
							<xsd:documentation>Name of the display instance this display instance extends or includes.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="parameters" type="axl:XDisplayInstanceParameters" minOccurs="0"/>
				</xsd:sequence>
				<xsd:element name="parameters" type="axl:XDisplayInstanceParameters"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDisplayInstanceParameter">
		<xsd:sequence>
			<xsd:element name="name">
				<xsd:annotation>
					<xsd:documentation>The tag that appears in the actual vendor configuration block stored in the database. The pattern enforces that the name is only made up of letters, digits, dashes, periods, or underscores.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="[a-zA-Z0-9][a-zA-Z0-9\.\-_]*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="description" type="xsd:string"/>
			<xsd:element name="moduleComponentName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="nonClusterWideJustification" type="xsd:string" minOccurs="0"/>
			<xsd:element name="displayName" type="xsd:normalizedString" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>If displayName is set, the UI should show it instead of the NAME to the user.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="onChangeShowMessage" type="xsd:string" minOccurs="0"/>
			<xsd:element name="unit" type="xsd:string" minOccurs="0"/>
			<xsd:element name="hidden" type="xsd:boolean" fixed="true" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>UI directive. This parameter should not be shown in the UI.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="index" type="xsd:nonNegativeInteger" default="0" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Index is translated into an index attribute in the parameter expressed in a vendor config. Really only useful for parameters contained within paramGroups.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="readOnly" type="xsd:boolean" fixed="true" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>UI directive. The parameter is entirely read-only. Whatever value is current assigned to the parameter is never changed in the UI.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="label" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>UI directive. Text to always display in the UI.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="paramGroup">
					<xsd:annotation>
						<xsd:documentation>UI directive. The parameter is really just a heading for a paramGroup.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="param" type="axl:XDisplayInstanceParameter" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="rules">
					<xsd:annotation>
						<xsd:documentation>The rules to validate this parameter against.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="rule" type="xsd:anyURI" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>The URI of the rule to validate this parameter against; for example: xmlrule://cisco.com/public/isAnInteger</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDisplayInstanceParameters">
		<xsd:sequence>
			<xsd:element name="param" type="axl:XDisplayInstanceParameter" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XFACInfo">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="code" type="axl:String16"/>
			<xsd:element name="authorizationLevel" type="xsd:nonNegativeInteger"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XLicenseCapabilities">
		<xsd:sequence>
			<xsd:element name="userid" type="xsd:string"/>
			<xsd:element name="enableUPS" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The only valid values for enableUPS are true, True, false and False.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="enableUPC" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The only valid values for enableUPC are true, True, false and False.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XLine">
		<xsd:annotation>
			<xsd:documentation>Table: A Line Appearnce (defined from DeviceNumPlanMap).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="label" type="axl:String50" nillable="true"/>
			<xsd:element name="asciiLabel" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:element name="display" type="axl:String50" nillable="true"/>
			<xsd:choice>
				<xsd:element name="dirn" type="axl:XNPDirectoryNumber">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="ringSetting" type="axl:XRingSetting" default="Ring" nillable="false" minOccurs="0"/>
			<xsd:element name="consecutiveRingSetting" type="axl:XRingSetting" default="Use System Default" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Consecutive Rings Setting. Replaces the consective ring setting on IPPhone.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ringSettingIdlePickupAlert" type="axl:XRingSetting" default="Use System Default" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Applicable only for IP Phones.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ringSettingActivePickupAlert" type="axl:XRingSetting" default="Use System Default" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Applicable only for IP Phones.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="displayASCII" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:element name="e164Mask" type="axl:String255" nillable="true" minOccurs="0"/>
			<xsd:element name="dialPlanWizardId" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="mwlPolicy" type="axl:XMWLPolicy" minOccurs="0"/>
			<xsd:element name="maxNumCalls" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="busyTrigger" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="callInfoDisplay">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="callerName" type="xsd:boolean" default="true" minOccurs="0"/>
						<xsd:element name="callerNumber" type="xsd:boolean" default="false" minOccurs="0"/>
						<xsd:element name="redirectedNumber" type="xsd:boolean" default="false" minOccurs="0"/>
						<xsd:element name="dialedNumber" type="xsd:boolean" default="true" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="recordingProfile" type="axl:XRecordingProfile">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="recordingProfileName" type="axl:UniqueString50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="monitoringCSS" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="monitoringCSSName" type="axl:UniqueName50"/>
			</xsd:choice>
			<xsd:element name="recordingFlag" type="axl:XRecordingFlag" nillable="true" minOccurs="0"/>
			<xsd:element name="audibleMWI" type="axl:XStatus" nillable="true" minOccurs="0"/>
			<xsd:element name="speedDial" type="xsd:string" minOccurs="0"/>
			<xsd:element name="partitionUsage" type="axl:XPartitionUsage" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag cannot be modified. It can only be specified in the add request.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="associatedEndusers" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="enduser" type="axl:XEnduserMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="index" type="xsd:positiveInteger">
			<xsd:annotation>
				<xsd:documentation>Indicates the cardinality of the line. Refer to DeviceNumPlanMap.NumPlanIndex.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ctiid" type="xsd:nonNegativeInteger">
			<xsd:annotation>
				<xsd:documentation>Unique, cannot be null.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="XEnduserMember">
		<xsd:sequence>
			<xsd:element name="userId" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XLineId">
		<xsd:annotation>
			<xsd:documentation>XLineId is used by XDevice as a shorthand notation (uuid + index and ctiid attributes).</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="axl:XUUID">
				<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
				<xsd:attribute name="ctiid" type="xsd:nonNegativeInteger"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XLoadInformation">
		<xsd:simpleContent>
			<xsd:extension base="axl:String255">
				<xsd:attribute name="special" type="xsd:boolean"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XLocation">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="id" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="kbits" type="xsd:nonNegativeInteger"/>
			<xsd:element name="videoKbits" type="xsd:nonNegativeInteger" nillable="false"/>
			<xsd:element name="relatedLocations" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="relatedLocation" type="axl:XLocationRelationship" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XLocationRelationship">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="location" type="axl:XLocation">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="rsvpSetting" type="axl:XMatrixValue"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceGroupMember">
		<xsd:choice>
			<xsd:element name="device" type="axl:XDevice">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="deviceName" type="axl:String50" nillable="false"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="multicast" type="xsd:boolean"/>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XMediaResourceGroupMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceList">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="clause" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XMediaResourceListMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMediaResourceListMember">
		<xsd:choice>
			<xsd:element name="mediaResourceGroup" type="axl:XMediaResourceGroup">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="mediaResourceGroupName" type="axl:String50"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="order" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCP">
		<xsd:annotation>
			<xsd:documentation>The generic MGCP follows the IOS Model, but uses more generic terminology to describe the MGCP's structure.

All MGCPs have 1..n UNITs, each which contains 1..n SUBUNITs, each which contains 1..n ENDPOINTs.  ENDPOINTs are (really, contain) a DEVICE.

In the IOS model, the terminology would be SLOTs, VICs, and PORTs.  </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="domainName" type="axl:String64"/>
			<xsd:element name="description" type="axl:String100" minOccurs="0"/>
			<xsd:element name="product" type="axl:XProduct"/>
			<xsd:element name="model" type="axl:XModel">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callManagerGroupName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="units" type="axl:XMGCPUnits" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The units element is optional when a new MGCP is being added  and can be added using addMGCPUnit.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="scratch" type="axl:String50" minOccurs="0"/>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0"/>
			<xsd:element name="versionStamp" type="axl:String128" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>UUID that is changed each time the MGCP is updated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="loadInformation" type="axl:XLoadInformation">
				<xsd:annotation>
					<xsd:documentation>For devices with load information, if any special load information is specified, the special attribute is set to TRUE. Otherwise, the load information is the default for the product.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPEndpoints">
		<xsd:annotation>
			<xsd:documentation>The max attribute identifies the maximum number of endpoints this endpoint list is allowed.       </xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="endpoint" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="axl:XGateway">
							<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deviceName" type="axl:String50" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>When adding endpoint, only endpoint is allowed</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="max" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPEndpoint">
		<xsd:annotation>
			<xsd:documentation>In the IOS model, ENDPOINT corresponds to a PORT inside a VIC.           </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XDevice">
				<xsd:sequence>
					<xsd:choice minOccurs="0">
						<xsd:element name="cdpnTransformationCSS" type="axl:XCallingSearchSpace" nillable="true">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="cdpnTransformationCSSName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="useDevicePoolCdpnTransformCSS" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" default="None" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Supported only by a few MGCP gateways like 26XX, 366X, 37XX, 269X, 38XX, VG224.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Supported only by a few MGCP gateways like 26XX, 366X, 37XX, 269X, 38XX, VG224.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XMGCPSubunits">
		<xsd:annotation>
			<xsd:documentation>The max attribute identifies the maximum number of subunits this subunit list is allowed.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="subunit" type="axl:XMGCPSubunit" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPSubunit">
		<xsd:annotation>
			<xsd:documentation>In the IOS model, SUBUNIT corresponds to a VIC, and a VIC contains 1 or more PORTs.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="product" type="axl:XMGCPVic"/>
			<xsd:element name="endpoints" type="axl:XMGCPEndpoints" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPUnits">
		<xsd:annotation>
			<xsd:documentation>The max attribute identifies the maximum number of units this unit list is allowed.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="unit" type="axl:XMGCPUnit" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="max" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XMGCPUnit">
		<xsd:annotation>
			<xsd:documentation>In the IOS model, UNIT corresponds to a SLOT (Slot Module), and a SLOT contains 1 or more VICs.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="product" type="axl:XMGCPSlotModule"/>
			<xsd:element name="subunits" type="axl:XMGCPSubunits" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XModelInfo">
		<xsd:sequence>
			<xsd:element name="class" type="axl:XClass"/>
			<xsd:element name="defaultDTMFCapability" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="features" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="feature" type="axl:XFeature" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="hasFirmwardLoad" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="hasPhoneTemplate" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="numberOfButtons" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="phoneTemplateIsUserModifiable" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="showInDeviceDefaults" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="axl:XModel"/>
	</xsd:complexType>
	<xsd:complexType name="XMOHAudioSource">
		<xsd:sequence minOccurs="0">
			<xsd:element name="sourceId" type="axl:XMOHAudioSourceId" nillable="false"/>
			<xsd:element name="name" type="axl:String50" minOccurs="0"/>
			<xsd:element name="sourceFile" type="axl:String255" minOccurs="0"/>
			<xsd:element name="multicast" type="xsd:boolean" nillable="false"/>
			<xsd:element name="repeat" type="xsd:boolean" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XMobileVoiceAccess">
		<xsd:sequence>
			<xsd:element name="pattern" type="xsd:string" nillable="false"/>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Default Partition would be Null in case not specified.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="routePartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionName" type="axl:UniqueName50"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XIVRUserLocale">
		<xsd:sequence>
			<xsd:element name="userLocale" type="axl:XUserLocale" nillable="false"/>
			<xsd:element name="orderIndex" type="xsd:integer" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMobility">
		<xsd:sequence>
			<xsd:element name="handoffNumber">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="uuid" type="axl:XUUID"/>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Default Partition would be Null in case not specified.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="handoffPartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="handoffPartitionName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="DTMFNumber">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="uuid" type="axl:XUUID"/>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Default Partition would be Null in case not specified.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="DTMFPartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="DTMFPartitionName" type="axl:String50"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XName">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="uuid" type="axl:XUUID"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XNPMeetMe">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="minimumSecurityLevel" type="axl:XDeviceSecurityMode" default="Non Secure" nillable="false"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XMOHServer">
		<xsd:sequence minOccurs="0">
			<xsd:element name="mohServerName" type="axl:UniqueName128" nillable="false"/>
			<xsd:element name="description" type="axl:String100" nillable="true" minOccurs="0"/>
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by AXL.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="processNodeName" type="axl:String100" nillable="false"/>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="devicePool" type="axl:XDevicePool" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:String100" nillable="false"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="location" type="axl:XLocation" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String100" nillable="true"/>
			</xsd:choice>
			<xsd:element name="maxUnicastConnections" type="xsd:unsignedLong" default="250" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Maximum Half Duplex Streams must be a number in the range 0 to 500. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="maxMulticastConnections" type="xsd:unsignedLong" default="30" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Maximum Multicast Connections must be a number in the range 0 to 999999.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="fixedAudioSourceDevice" type="axl:String100" nillable="true" minOccurs="0"/>
			<xsd:element name="runFlag" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
			<xsd:element name="useTrustedRelayPoint" type="axl:XStatus" default="Default" nillable="false" minOccurs="0"/>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>If isMultiCastEnabled is false then these elements are not necessary.MOHServer will be added to the database without the values of  these tags. ie. The table MOHServerMulticastInfo table will be empty.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="isMultiCastEnabled" type="xsd:boolean" nillable="false" minOccurs="0"/>
				<xsd:element name="baseMulticastIPaddress" type="xsd:string" default="239.1.1.1" nillable="false" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>baseMulticastIPAddress and baseMulticastPort must be a unique pair. All Multicast IP Addresses must be in the range 239.1.1.1  to 239.255.255.255</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="baseMulticastPort" type="xsd:unsignedLong" default="16384" nillable="false" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Multicast Base Port number must be an even number in the range 16384 to 32766</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="multicastIncrementOnIP" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
				<xsd:element name="audioSources" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="audioSource" minOccurs="0" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="sourceId" type="xsd:unsignedLong" nillable="false"/>
										<xsd:element name="maxHops" type="xsd:unsignedLong" default="2" nillable="false" minOccurs="0"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XNumPlan" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:annotation>
				<xsd:documentation>When adding a NumPlan with the AXL API, this sequence is required.</xsd:documentation>
			</xsd:annotation>
			<xsd:element name="pattern" type="xsd:string"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="usage" type="axl:XPatternUsage">
				<xsd:annotation>
					<xsd:documentation>For Intercom DN and Intercom Translation patterns the usage tag value needs to be specified explicitly as Device Intercom and Translation Intercom respectively. For all other patterns it is a Read-only tag.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Default Partition would be Null in case not specified.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="routePartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionName" type="axl:UniqueName50"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XNumplanIdentifier">
		<xsd:annotation>
			<xsd:documentation>Shorthand object to uniquely identify a Numplan entry by directory number (dn) and paritiion name.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="directoryNumber" type="axl:XDirectoryNumber"/>
			<xsd:element name="routePartitionName" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XNPPattern" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="blockEnable" type="xsd:boolean"/>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false"/>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>dialPlan is mandatory for patterns with @ in it.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlan" type="axl:XDialPlan">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="digitDiscardInstructionName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="messageWaiting" type="axl:XLampBlinkRate"/>
					<xsd:element name="networkLocation" type="axl:XNetworkLocation"/>
					<xsd:element name="patternUrgency" type="xsd:boolean" nillable="false" minOccurs="0"/>
					<xsd:element name="prefixDigitsOut" type="xsd:string"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="routeFilter" type="axl:XRouteFilter">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routeFilterName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="supportOverlapSending" type="xsd:boolean" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is not valid for a translation pattern.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="allowDeviceOverride" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="provideOutsideDialtone" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberingPlan" type="axl:XNumberingPlan" default="Cisco CallManager" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberType" type="axl:XPriOfNumber" default="Cisco CallManager" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberingPlan" type="axl:XNumberingPlan" default="Cisco CallManager" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberType" type="axl:XPriOfNumber" default="Cisco CallManager" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPCallPark">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:annotation>
						<xsd:documentation>The CallManager for this Call Park is required.  When adding a Call Park with the AXL API, the CallManager is required.</xsd:documentation>
					</xsd:annotation>
					<xsd:choice>
						<xsd:element name="callManagerId" type="axl:XUUID">
							<xsd:annotation>
								<xsd:documentation>Since CallPark is included in the XCallManager type, we do not want to cause a loop in the XML here, so we only allow callManagerId.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callManagerName" type="axl:String50">
							<xsd:annotation>
								<xsd:documentation>Not nullable.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPDirectedCallPark">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="retrievalPrefix" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The prefix used for park-code retrieval. User will dial prefix plus park code to retrieve a parked call. </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="reversionPattern" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The pattern used to revert the call when the parked call is not retrieved within retrieval timer.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>To be configured only when reversion pattern is not empty.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="revertCSS">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axl:XCallingSearchSpace"/>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="revertCSSName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPCallPickupGroup">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence minOccurs="0">
					<xsd:element name="name" type="xsd:Name"/>
					<xsd:element name="members" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>On Addition always the first member added is itself. Do not specify the first member as itself in an Add request . Also make sure that the priority always starts with 1. It will internally be taken care of during Addition and Updation.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="member" type="axl:XPickupGroupMember" minOccurs="0" maxOccurs="unbounded"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="pickupNotification" type="axl:XPickupNotification" default="No Alert" nillable="false" minOccurs="0"/>
					<xsd:element name="pickupNotificationTimer" type="xsd:nonNegativeInteger" default="6" nillable="false" minOccurs="0"/>
					<xsd:element name="callInfoForPickupNotification" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable when Pickup Notification Policy is "Visual Alert" or "Visual or Audio Alert".</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="callingPartyInfo" type="xsd:boolean" default="false" nillable="false"/>
								<xsd:element name="calledPartyInfo" type="xsd:boolean" default="false" nillable="false"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPConference">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence minOccurs="0">
					<xsd:element name="mixer" type="axl:XMixer"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPCTIDirectoryNumber">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPDirectoryNumber">
				<xsd:sequence minOccurs="0">
					<xsd:element name="callForwardCTIFailure" type="axl:XCallForwardInfo"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPMessageWaiting">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPDirectoryNumber">
				<xsd:sequence minOccurs="0">
					<xsd:element name="isMessageWaitingOn" type="xsd:boolean"/>
					<xsd:element name="mwiCSS" type="axl:XCallingSearchSpace"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPDirectoryNumber">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence minOccurs="0">
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Nullable.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="aarNeighborhood" type="axl:XAARNeighborhood">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="aarNeighborhoodName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="aarDestinationMask" type="axl:String128" nillable="true" minOccurs="0"/>
					<xsd:element name="aarKeepCallHistory" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="aarVoiceMailEnabled" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="callForwardAll" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardBusy" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardBusyInt" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoAnswer" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoAnswerInt" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoCoverage" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNoCoverageInt" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardOnFailure" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardAlternateParty" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNotRegistered" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:element name="callForwardNotRegisteredInt" type="axl:XCallForwardInfo" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="callPickupGroup" type="axl:XNPCallPickupGroup">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callPickupGroupName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="autoAnswer" type="axl:XAutoAnswer" nillable="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>For an intercom line this tag should be treated as a mandatory tag and the valid values are Auto Answer with Headset and Auto Answer with Speakerphone.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="userHoldMOHAudioSourceId" type="axl:XMOHAudioSourceId" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A value of 0 means 'none selected'.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="cfaCSSClause" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read-only.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="alertingName" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:element name="asciiAlertingName" type="axl:String32" nillable="true" minOccurs="0"/>
					<xsd:choice>
						<xsd:element name="presenceGroup" type="axl:XPresenceGroup"/>
						<xsd:element name="presenceGroupName" type="axl:String50"/>
						<!--<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axl:XPresenceGroup">
										<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
									</xsd:extension>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>-->
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="shareLineAppearanceCSS">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axl:XCallingSearchSpace"/>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="shareLineAppearanceCSSName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="voiceMailProfile" type="axl:XVoiceMailProfile"/>
						<xsd:element name="voiceMailProfileName" type="axl:String50"/>
					</xsd:choice>
					<xsd:element name="patternPrecedence" type="axl:XPatternPrecedence" nillable="false" minOccurs="0"/>
					<xsd:element name="releaseCause" type="axl:XReleaseCauseValue" nillable="false" minOccurs="0"/>
					<xsd:element name="hrDuration" type="xsd:long" nillable="false" minOccurs="0"/>
					<xsd:element name="hrInterval" type="xsd:long" nillable="false" minOccurs="0"/>
					<xsd:element name="cfaCSSPolicy" type="axl:XCFACSSActivationPolicy" default="Use System Default" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This tag is applicable for only intercom lines and if not set, intercom lines will not be active.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="defaultActivatedDevice" type="axl:XDevice">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="defaultActivatedDeviceName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPRoutePattern">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPPattern">
				<xsd:sequence>
					<xsd:element name="destination">
						<xsd:complexType>
							<xsd:choice>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="gateway" type="axl:XDevice">
											<xsd:annotation>
												<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="gatewayName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
								<xsd:sequence>
									<xsd:choice>
										<xsd:element name="routeList" type="axl:XRouteList">
											<xsd:annotation>
												<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="routeListName" type="xsd:string"/>
									</xsd:choice>
								</xsd:sequence>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="authorizationCodeRequired" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="authorizationLevelRequired" type="xsd:nonNegativeInteger" minOccurs="0"/>
					<xsd:element name="clientCodeRequired" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="withTag" type="axl:String50" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read Only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="withValueClause" type="axl:String255" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Read Only</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isdnNSFInfoElement" nillable="true" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence minOccurs="0">
								<xsd:element name="cic" type="axl:String100" nillable="true" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>If not specified then a default value of '0' is set. This tag is not applicable to networkServiceProtocol PRI NI2. </xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="networkServiceProtocol" type="axl:String100" nillable="false">
									<xsd:annotation>
										<xsd:documentation>It is a mandatory tag if anychild tag of isdnNSFInfoElement is specified.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="networkService" type="axl:String100" nillable="false" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>If not specified then the first record based on the protocol in NSFProtocolServiceMap table will be set as the default value.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="paramValue" type="axl:String100" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>This parameter will take effect only if the selected network service has a valid  parameterName in TypeNSFService.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Default value would be Null in case not specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="resourcePriorityNamespace" type="axl:XResourcePriorityNamespace" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPSIPRoutePattern">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="blockEnable" type="xsd:boolean" minOccurs="0"/>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false"/>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0"/>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="connectedNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="destination">
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="sipTrunk" type="axl:XSIPTrunk">
									<xsd:annotation>
										<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="sipTrunkName" type="axl:String128"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPHuntPilot">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPPattern">
				<xsd:sequence minOccurs="0">
					<xsd:element name="destination">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="huntList" type="axl:XHuntList">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="huntListName" type="xsd:string"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="ForwardHuntBusy" type="axl:XHuntForwardInfo" minOccurs="0"/>
					<xsd:element name="ForwardHuntNoAnswer" type="axl:XHuntForwardInfo" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This is applicable only if Cisco support use 1 Enterprise parameter is set.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="callPickupGroup" type="axl:XNPCallPickupGroup">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="callPickupGroupName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPTransformationPattern">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="callingPartyTransformationMask" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:element name="useCallingPartyPhoneMask" type="axl:XStatus" nillable="false" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>dialPlan is mandatory for patterns with @ in it.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlan" type="axl:XDialPlan">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction" nillable="true"/>
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="patternUrgency" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Always set as true</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="callingPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="routeFilter" type="axl:XRouteFilter">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routeFilterName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="callingLinePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingNamePresentationBit" type="axl:XPresentationBit" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="callingPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPCalledPartyTransformationPattern">
		<xsd:complexContent>
			<xsd:extension base="axl:XNumPlan">
				<xsd:sequence>
					<xsd:element name="calledPartyTransformationMask" type="xsd:string" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>dialPlan is mandatory for patterns with @ in it.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="dialPlan" type="axl:XDialPlan">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="dialPlanName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction" nillable="true"/>
						<xsd:element name="digitDiscardInstructionName" type="axl:String50" nillable="true"/>
					</xsd:choice>
					<xsd:element name="patternUrgency" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Always set as true</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="calledPartyPrefixDigits" type="axl:String50" nillable="true" minOccurs="0"/>
					<xsd:choice minOccurs="0">
						<xsd:element name="routeFilter" type="axl:XRouteFilter">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routeFilterName" type="xsd:string"/>
					</xsd:choice>
					<xsd:element name="calledPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
					<xsd:element name="calledPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XNPTranslationPattern">
		<xsd:complexContent>
			<xsd:extension base="axl:XNPPattern">
				<xsd:sequence minOccurs="0">
					<xsd:choice>
						<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace"/>
						<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Default value would be Null in case not specified.</xsd:documentation>
						</xsd:annotation>
						<xsd:element name="resourcePriorityNamespace" type="axl:XResourcePriorityNamespace" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XOSVersion">
		<xsd:sequence>
			<xsd:element name="osName" type="axl:String50"/>
			<xsd:element name="osVersion" type="axl:String50"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XPhoneProfile">
		<xsd:complexContent>
			<xsd:extension base="axl:XIPPhone"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XPickupGroupMember">
		<xsd:sequence>
			<xsd:element name="priority" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="pickupGroup">
					<xsd:annotation>
						<xsd:documentation>uuid of Pickup Group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="axl:XUUID">
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="pickupGroupName" type="axl:String255"/>
				<xsd:element name="pickupDNAndPartition">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="dnPattern" type="axl:XDirectoryNumber"/>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="routePartition" type="axl:XRoutePartition">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionId" type="axl:XUUID">
										<xsd:annotation>
											<xsd:documentation>DEPRECATED: use routePartition/uuid</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionName" type="axl:String50"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPhoneTemplate">
		<xsd:annotation>
			<xsd:documentation>Phone templates describe what features are assigned to what buttons on a particular phone or set of phones. These templates are downloaded to phones and add-on-modules.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name">
				<xsd:annotation>
					<xsd:documentation>The template's name.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="50"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="basePhoneTemplate" type="axl:XPhoneTemplate">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="basePhoneTemplateName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="isUserModifiable" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-Only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="buttons" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The list of buttons on this model of phone. The feature and label of the first button cannot be modified.              </xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="button" type="axl:XButton" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XProcessConfig">
		<xsd:annotation>
			<xsd:documentation>Describes the ProcessConfig table (used for service parameters)</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode"/>
				<xsd:element name="processNodeName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="service" type="axl:XService" nillable="false"/>
			<xsd:element name="value" type="axl:String1024" nillable="true" minOccurs="0"/>
			<xsd:element name="valueType" type="axl:XParam" nillable="false"/>
			<xsd:element name="primaryData" type="xsd:boolean" default="false" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XProcessNode">
		<xsd:annotation>
			<xsd:documentation>Describes a server running in the CCM cluster.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String255">
				<xsd:annotation>
					<xsd:documentation>The primary hostname of the process node.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="axl:String50" minOccurs="0"/>
			<xsd:element name="mac" type="axl:XMacAddress" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The mac address of the host.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XProcessNodeService">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="processNode" type="axl:XProcessNode" nillable="false"/>
				<xsd:element name="processNodeName" type="axl:String255" nillable="false"/>
			</xsd:choice>
			<xsd:element name="service" type="axl:XService" nillable="false"/>
			<xsd:element name="fileName" type="axl:String255" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="traceLevel" type="xsd:nonNegativeInteger" default="0" nillable="false"/>
			<xsd:element name="userCategories" type="xsd:nonNegativeInteger" default="0" nillable="false"/>
			<xsd:element name="enable" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="numFiles" type="xsd:nonNegativeInteger" default="250" nillable="false"/>
			<xsd:element name="numLines" type="xsd:nonNegativeInteger" default="10000" nillable="false"/>
			<xsd:element name="numMinutes" type="xsd:nonNegativeInteger" default="1440" nillable="false"/>
			<xsd:element name="includeNonDeviceTraces" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="useXML" type="xsd:boolean" fixed="false" nillable="false"/>
			<xsd:element name="serverName" type="axl:String255" minOccurs="0"/>
			<xsd:element name="deviceNameMonitorFlag" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="deviceTypeMonitorFlag" type="xsd:boolean" fixed="false" nillable="false"/>
			<xsd:element name="fileTraceFlag" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="outputDebugStringFlag" type="xsd:boolean" default="false" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XProductInfo">
		<xsd:sequence>
			<xsd:element name="model" type="axl:XModel"/>
			<xsd:element name="maxPorts" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="showInDropDown" type="xsd:boolean" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="axl:XProduct"/>
	</xsd:complexType>
	<xsd:complexType name="XRegion">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="relatedRegions" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.  AXL API automatically adds the required entries in the RegionMatrix table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="relatedRegion" type="axl:XRegionRelationship" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XRegionRelationship">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="region" type="axl:XRegion" nillable="false"/>
				<xsd:element name="name" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="bandwidth" type="axl:XBandwidth" default="G.711" nillable="false"/>
			<xsd:element name="videoBandwidth" type="xsd:nonNegativeInteger" nillable="false"/>
			<xsd:element name="lossyNetwork" type="axl:XLossyNetwork" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XResourcePriorityDefaultNamespace">
		<xsd:sequence minOccurs="0">
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Default value would be Null in case not specified.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="resourcePriorityNamespace" type="axl:XResourcePriorityNamespace" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="resourcePriorityNamespaceName" type="xsd:string" minOccurs="0"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XResourcePriorityNamespace">
		<xsd:sequence>
			<xsd:element name="namespace" type="xsd:string" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XResourcePriorityNamespaceListMember">
		<xsd:choice>
			<xsd:element name="resourcePriorityNamespace" type="axl:XResourcePriorityNamespace" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="resourcePriorityNamespaceName" type="xsd:string" maxOccurs="unbounded"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
		<xsd:attribute name="index" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XResourcePriorityNamespaceList">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="members" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XResourcePriorityNamespaceListMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteFilter">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Not nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="clause" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>Not nullable.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="dialPlan" type="axl:XDialPlan">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dialPlanName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read only. Not nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:annotation>
					<xsd:documentation>Nullable.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XRouteFilterMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteFilterMember">
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="dialPlanTag" type="axl:XDialPlanTag">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is used by the AXL API for inserts and updates.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dialPlanTagName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>Actually refers to DialPlanTag.Tag in database.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="digits" type="xsd:nonNegativeInteger" minOccurs="0"/>
			<xsd:element name="operator" type="axl:XOperator"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteFilterMemberId">
		<xsd:simpleContent>
			<xsd:extension base="axl:XUUID">
				<xsd:attribute name="priority" type="xsd:nonNegativeInteger"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="XRouteGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name"/>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XRouteGroupMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteGroupMember">
		<xsd:sequence minOccurs="0">
			<xsd:element name="deviceSelectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="device" type="axl:XDevice">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="deviceName" type="xsd:string"/>
				<xsd:element name="deviceId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>DEPRECATED: use device/uuid</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
		<xsd:attribute name="port" type="xsd:nonNegativeInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XLineGroup">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name"/>
			<xsd:element name="distributionAlgorithm" type="axl:XDistributeAlgorithm" nillable="false"/>
			<xsd:element name="rnaReversionTimeOut" type="xsd:nonNegativeInteger" default="10" nillable="false"/>
			<xsd:element name="huntAlgorithmNoAnswer" type="axl:XHuntAlgorithm" nillable="false"/>
			<xsd:element name="huntAlgorithmBusy" type="axl:XHuntAlgorithm" nillable="false"/>
			<xsd:element name="huntAlgorithmNotAvailable" type="axl:XHuntAlgorithm" nillable="false"/>
			<xsd:element name="members">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="member" type="axl:XLineGroupMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XLineGroupMember">
		<xsd:sequence minOccurs="0">
			<xsd:element name="lineSelectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:choice>
				<xsd:element name="directoryNumber" type="axl:XNPDirectoryNumber">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="directoryNumberId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>DEPRECATED: use directorynumber/uuid</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dnPatternAndPartition">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="dnPattern" type="axl:XDirectoryNumber"/>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element name="routePartition" type="axl:XRoutePartition">
										<xsd:annotation>
											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionId" type="axl:XUUID">
										<xsd:annotation>
											<xsd:documentation>DEPRECATED: use routePartition/uuid</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="routePartitionName" type="axl:String50"/>
								</xsd:choice>
							</xsd:sequence>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteListMember">
		<xsd:annotation>
			<xsd:documentation>Represents a mapping between route groups and route lists.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="routeGroup" type="axl:XRouteGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routeGroupName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="selectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:element name="calledPartyTransformationMask" type="axl:String50" minOccurs="0"/>
			<xsd:element name="callingPartyTransformationMask" type="axl:String50" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="digitDiscardInstructionName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>This should be written as dialPlanName:digitDiscardInstructionName(NANP:PreDot)</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="prefixDigitsOut" type="axl:String50" minOccurs="0"/>
			<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0"/>
			<xsd:element name="useFullyQualifiedCallingPartyNumber" type="axl:XStatus"/>
			<xsd:element name="callingPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
			<xsd:element name="callingPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
			<xsd:element name="calledPartyNumberingPlan" type="axl:XNumberingPlan" nillable="false" minOccurs="0"/>
			<xsd:element name="calledPartyNumberType" type="axl:XPriOfNumber" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XHuntListMember">
		<xsd:annotation>
			<xsd:documentation>Represents a mapping between line groups and hunt lists.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="lineGroup" type="axl:XLineGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="lineGroupName" type="axl:String50" nillable="false"/>
			</xsd:choice>
			<xsd:element name="selectionOrder" type="xsd:nonNegativeInteger"/>
			<xsd:element name="calledPartyTransformationMask" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="callingPartyTransformationMask" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="digitDiscardInstruction" type="axl:XDigitDiscardInstruction">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="digitDiscardInstructionName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>Read-only</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="prefixDigitsOut" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="callingPartyPrefixDigits" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="useFullyQualifiedCallingPartyNumber" type="axl:XStatus"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRouteList">
		<xsd:annotation>
			<xsd:documentation>Although stored in the Device table, the routeList is not really a device.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Each member is a representaion of an entry in the RouteList table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XRouteListMember" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XHuntList">
		<xsd:annotation>
			<xsd:documentation>Although stored in the Device table, the huntList is not really a device. Hunt list are also stored in Route list table.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:Name">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="description" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="callManagerGroupName" type="axl:String50" nillable="false"/>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="routeListEnabled" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>From Device table.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="members" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Each member is a representation of an entry in the RouteList table.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XHuntListMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSIPDialRules">
		<xsd:sequence minOccurs="0">
			<xsd:element name="dialPattern" type="axl:XDialPattern"/>
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSIPRealm">
		<xsd:sequence>
			<xsd:element name="realm" type="xsd:string"/>
			<xsd:element name="userid" type="xsd:string"/>
			<xsd:element name="digestCredentials" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XSIPProfile">
		<xsd:sequence>
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="description" type="axl:String100" nillable="true" minOccurs="0"/>
			<xsd:element name="defaultTelephonyEventPayloadType" type="xsd:long" default="101" minOccurs="0"/>
			<xsd:element name="redirectByApplication" type="xsd:boolean" default="false" minOccurs="0"/>
			<xsd:element name="ringing180" type="xsd:boolean" default="false" minOccurs="0"/>
			<xsd:element name="timerInvite" type="xsd:long" default="180" minOccurs="0"/>
			<xsd:element name="timerRegisterDelta" type="xsd:long" default="5" minOccurs="0"/>
			<xsd:element name="timerRegister" type="xsd:long" default="3600" minOccurs="0"/>
			<xsd:element name="timerT1" type="xsd:long" default="500" minOccurs="0"/>
			<xsd:element name="timerT2" type="xsd:long" default="4000" minOccurs="0"/>
			<xsd:element name="retryInvite" type="xsd:long" default="6" minOccurs="0"/>
			<xsd:element name="retryNotInvite" type="xsd:long" default="10" minOccurs="0"/>
			<xsd:element name="startMediaPort" type="xsd:long" default="16384" minOccurs="0"/>
			<xsd:element name="stopMediaPort" type="xsd:long" default="32766" minOccurs="0"/>
			<xsd:element name="callpickupURI" type="axl:Name128" default="x-cisco-serviceuri-pickup" minOccurs="0"/>
			<xsd:element name="callpickupListURI" type="axl:String128" default="x-cisco-serviceuri-opickup" minOccurs="0"/>
			<xsd:element name="callpickupGroupURI" type="axl:String128" default="x-cisco-serviceuri-gpickup" minOccurs="0"/>
			<xsd:element name="meetmeServiceURI" type="axl:String128" default="x-cisco-serviceuri-meetme" minOccurs="0"/>
			<xsd:element name="userInfo" type="axl:XZzuserInfo" default="None" minOccurs="0"/>
			<xsd:element name="dtmfDbLevel" type="axl:XZzdtmfDbLevel" default="Nominal" minOccurs="0"/>
			<xsd:element name="callHoldRingback" type="axl:XZzpreff" default="Off" minOccurs="0"/>
			<xsd:element name="anonymousCallBlock" type="axl:XZzpreff" default="Off" minOccurs="0"/>
			<xsd:element name="callerIdBlock" type="axl:XZzpreff" default="Off" minOccurs="0"/>
			<xsd:element name="dndControl" type="axl:XZzdndcontrol" default="Admin" minOccurs="0"/>
			<xsd:element name="telnetLevel" type="axl:XTelnetLevel" default="Disabled" minOccurs="0"/>
			<xsd:element name="timerKeepAlive" type="xsd:long" default="120" minOccurs="0"/>
			<xsd:element name="timerSubscribe" type="xsd:long" default="120" minOccurs="0"/>
			<xsd:element name="timerSubscribeDelta" type="xsd:long" default="5" minOccurs="0"/>
			<xsd:element name="maxRedirects" type="xsd:long" default="70" minOccurs="0"/>
			<xsd:element name="timerOffhookToFirstDigit" type="xsd:long" default="15000" minOccurs="0"/>
			<xsd:element name="callForwardURI" type="axl:String128" default="x-cisco-serviceuri-cfwdall" minOccurs="0"/>
			<xsd:element name="abbreviatedDialURI" type="axl:String128" default="x-cisco-serviceuri-abbrdial" minOccurs="0"/>
			<xsd:element name="confJoinEnable" type="xsd:boolean" default="true" minOccurs="0"/>
			<xsd:element name="rfc2543Hold" type="xsd:boolean" default="false" minOccurs="0"/>
			<xsd:element name="semiAttendedTransfer" type="xsd:boolean" default="true" minOccurs="0"/>
			<xsd:element name="enableVAD" type="xsd:boolean" default="false" minOccurs="0"/>
			<xsd:element name="stutterMsgWaiting" type="xsd:boolean" default="false" minOccurs="0"/>
			<xsd:element name="callStats" type="xsd:boolean" default="false" minOccurs="0"/>
			<xsd:element name="t38Invite" type="xsd:boolean" default="false" minOccurs="0"/>
			<xsd:element name="rerouteIncomingRequest" type="axl:XSIPReroute" default="Never" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="resourcePriorityNamespaceList" type="axl:XResourcePriorityNamespaceList" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="resourcePriorityNamespaceListName" type="axl:Name50" default="Null" nillable="true"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XSIPTrunkSecurityProfile">
		<xsd:sequence>
			<xsd:element name="name" type="axl:String64"/>
			<xsd:element name="description" type="axl:String100" minOccurs="0"/>
			<xsd:element name="securityMode" type="axl:XDeviceSecurityMode" nillable="true" minOccurs="0"/>
			<xsd:element name="incomingTransport" type="axl:XTransport" default="TCP+UDP" nillable="false" minOccurs="0"/>
			<xsd:element name="outgoingTransport" type="axl:XTransport" nillable="true" minOccurs="0"/>
			<xsd:element name="digestAuthentication" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="noncePolicyTime" type="xsd:long" default="600" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Only if digestAuthentication is enabled this value can be changed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="x509SubjectName" type="axl:String4096" nillable="false" minOccurs="0"/>
			<xsd:element name="incomingPort" type="xsd:long" nillable="false" minOccurs="0"/>
			<xsd:element name="applLevelAuthentication" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptPresenceSubscription" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptOutOfDialogRefer" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="acceptUnsolicitedNotification" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="allowReplaceHeader" type="xsd:boolean" nillable="false" minOccurs="0"/>
			<xsd:element name="transmitSecurityStatus" type="xsd:boolean" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XTimePeriod">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="startTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
			<xsd:element name="endTime" type="axl:XTimeOfDay" nillable="false" minOccurs="0"/>
			<xsd:element name="startDay" type="axl:XDayOfWeek" nillable="false" minOccurs="0"/>
			<xsd:element name="endDay" type="axl:XDayOfWeek" nillable="false" minOccurs="0"/>
			<xsd:element name="monthOfYear" type="axl:XMonthOfYear" nillable="false" minOccurs="0"/>
			<xsd:element name="dayOfMonth" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="description" type="axl:String255" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="todOwnerId" type="axl:XUUID"/>
				<xsd:element name="todOwnerIdName" type="axl:UniqueName50"/>
			</xsd:choice>
			<xsd:element name="dayOfMonthEnd" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="monthOfYearEnd" type="axl:XMonthOfYear" nillable="false" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XTimeScheduleTimePeriod">
		<xsd:choice>
			<xsd:element name="timePeriod" type="axl:XTimePeriod">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="timePeriodName" type="axl:String50" nillable="false"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XTimeSchedule">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50"/>
			<xsd:element name="members" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XTimeScheduleTimePeriod" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="description" type="axl:String255" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="todOwnerId" type="axl:XUUID"/>
				<xsd:element name="todOwnerIdName" type="axl:UniqueName50"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XTODAccess">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String128" nillable="false"/>
			<xsd:element name="description" type="axl:String255" minOccurs="0"/>
			<xsd:choice>
				<xsd:element name="ownerId" type="axl:XUUID"/>
				<xsd:element name="ownerIdName" type="axl:UniqueName50"/>
			</xsd:choice>
			<xsd:element name="members" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XTODAccessMember" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="associatedRemoteDestination" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-Only. List of the remoteDestination entries associated with this TodAccess.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="remoteDestination" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of the remoteDestination</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XTODAccessMember">
		<xsd:sequence minOccurs="0">
			<xsd:choice minOccurs="0">
				<xsd:element name="timeSchedule" type="axl:XTimeSchedule" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="timeScheduleName" type="axl:String50" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Not nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="accessList" type="axl:XCallerFilterList" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="accessListName" type="axl:String128" nillable="false" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Not nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XRoutePartition">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:string"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="dialPlanWizardGenId" type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:element name="timeScheduleId" type="axl:XUUID">
					<xsd:annotation>
						<xsd:documentation>Since CallPark is included in the XCallManager type, we do not want to cause a loop in the XML here, so we only allow callManagerId.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="timeScheduleName" type="axl:String50">
					<xsd:annotation>
						<xsd:documentation>Not nullable.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="useOriginatingDeviceTimeZone" type="xsd:boolean" minOccurs="0"/>
			<xsd:element name="timeZone" type="axl:XTimeZone" minOccurs="0"/>
			<xsd:element name="partitionUsage" type="axl:XPartitionUsage" nillable="true" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XApplicationToSoftKeyTemplate">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="softKeyTemplateId" type="axl:XUUID" nillable="false"/>
				<xsd:element name="softKeyTemplateName" type="axl:String100" nillable="false">
					<xsd:annotation>
						<xsd:documentation>This template should not be a standard template.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice>
				<xsd:element name="standardSoftKeyTemplate" type="axl:XSoftkeyTemplate" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="standardSoftKeyTemplateName" type="axl:String100" nillable="false"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XSoftKeySet">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="softKeyTemplate" type="axl:XSoftkeyTemplate">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="softKeyTemplateName" type="axl:String100"/>
			</xsd:choice>
			<xsd:element name="callStates" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="callState" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="callStateName" type="axl:XCallState" nillable="false"/>
									<xsd:element name="softKeys" minOccurs="0">
										<xsd:annotation>
											<xsd:documentation>List of mandatory keys for each callstate ::               On Hook - NewCall
Connected - End Call 
On Hold - Resume
Off Hook - End Call 
Connected Transfer - Transfer
Digits After First - Backward
Connected Conference  -  Conference
Ring Out - End Call
Off Hook With Feature - End Call            </xsd:documentation>
										</xsd:annotation>
										<xsd:complexType>
											<xsd:sequence minOccurs="0">
												<xsd:element name="softKey" minOccurs="0" maxOccurs="unbounded">
													<xsd:complexType>
														<xsd:sequence>
															<xsd:element name="positionId" type="xsd:nonNegativeInteger" nillable="false">
																<xsd:annotation>
																	<xsd:documentation>Read-Only.The positionId has values starting with 0 and get incremented by 1 for each call state.</xsd:documentation>
																</xsd:annotation>
															</xsd:element>
															<xsd:element name="softKeyName" type="axl:XSoftkey" nillable="false"/>
														</xsd:sequence>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSoftkeyTemplate">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String100"/>
			<xsd:element name="description" type="axl:String100" minOccurs="0"/>
			<xsd:choice>
				<xsd:element name="baseSoftkeyTemplate" type="axl:XSoftkeyTemplate" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="baseSoftkeyTemplateName" type="axl:String100" nillable="false"/>
			</xsd:choice>
			<xsd:element name="isDefault" type="xsd:boolean" nillable="true" minOccurs="0"/>
			<xsd:element name="applications">
				<xsd:annotation>
					<xsd:documentation>Read-Only</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="application" type="axl:String50" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XRemoteDestination">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="destination" type="xsd:string" nillable="false"/>
			<xsd:element name="answerTooSoonTimer" type="xsd:nonNegativeInteger" nillable="false"/>
			<xsd:element name="answerTooLateTimer" type="xsd:nonNegativeInteger" nillable="false"/>
			<xsd:element name="delayBeforeRingingCell" type="xsd:nonNegativeInteger" nillable="false"/>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Either Remote Destination Profile or Dual Mode Device can be specified but not both. Once added cannot be updated.</xsd:documentation>
				</xsd:annotation>
				<xsd:choice minOccurs="0">
					<xsd:element name="remoteDestinationProfile" type="axl:XRemoteDestinationProfile">
						<xsd:annotation>
							<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="remoteDestinationProfileName" type="axl:String50" nillable="false"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element name="dualModeDevice" type="axl:XDevice">
						<xsd:annotation>
							<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="dualModeDeviceName" type="axl:String50" nillable="false"/>
				</xsd:choice>
			</xsd:choice>
			<xsd:element name="isMobilePhone" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="enableMobileConnect" type="xsd:boolean" default="true" nillable="false" minOccurs="0"/>
			<xsd:element name="lineAssociations" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The line association for this remote destination. The line to be associated must already be added to the remote destination profile. All directory numbers specified must already exist in the database.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="lineAssociation" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="axl:XLineAssociation">
										<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="optional"/>
									</xsd:extension>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="timeZone" type="axl:XTimeZone" nillable="false" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="todAccess" type="axl:XTODAccess" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="todAccessName" type="axl:String128" nillable="true"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="mobileSmartClient" type="axl:XDevice">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mobileSmartClientName" type="axl:String128"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XMobileSmartClientProfile">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="xsd:string" nillable="true"/>
			<xsd:element name="mobileSmartClient" type="axl:XMobileSmartClient"/>
			<xsd:element name="enableSNRUri" type="xsd:string"/>
			<xsd:element name="enableCFAUri" type="xsd:string"/>
			<xsd:element name="handOffUri" type="xsd:string"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XLineAssociation">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="uuid" type="axl:XUUID"/>
				<xsd:sequence>
					<xsd:element name="pattern" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The directory number to be associated. This directory number must be already associated to remote destination profile. </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:choice>
						<xsd:element name="routePartitionId" type="axl:XUUID"/>
						<xsd:element name="routePartitionName" type="axl:String50"/>
					</xsd:choice>
				</xsd:sequence>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XTranscoder">
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueString255" nillable="false"/>
			<xsd:element name="description" type="axl:String128" nillable="true" minOccurs="0"/>
			<xsd:element name="product" type="axl:XProduct" nillable="false"/>
			<xsd:element name="subUnit" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by     Cisco Media Termination Point (WS-SVC-CMM) and is a mandatory tag for Cisco Media Termination Point (WS-SVC-CMM) Transcoder. Valid values range from 1 to 4.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="devicePool" type="axl:XDevicePool" nillable="false">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:UniqueString50" nillable="false"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="commonDeviceConfig" type="axl:XCommonDeviceConfig" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="commonDeviceConfigName" type="axl:UniqueString50" nillable="true"/>
			</xsd:choice>
			<xsd:element name="loadInformation" type="axl:XLoadInformation" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>For devices with load information, if any special load information is specified, the special attribute is set to TRUE. Otherwise, the load information is the default for the product.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" nillable="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is used only by     Cisco Media Termination Point (WS-SVC-CMM)</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="isTrustedRelayPoint" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="maximumCapacity" type="xsd:nonNegativeInteger" default="32" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This tag is valid only for  Cisco Media Termination Point (WS-SVC-CMM). Valid values for this tag are 32,64,96,128. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSpeeddial">
		<xsd:sequence>
			<xsd:element name="dirn" type="axl:XDirectoryNumber"/>
			<xsd:element name="label" type="xsd:string"/>
			<xsd:element name="asciiLabel" type="axl:String50" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="index" type="xsd:positiveInteger"/>
	</xsd:complexType>
	<xsd:complexType name="XSRSTInfo">
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueName50"/>
			<xsd:element name="srstOption" type="axl:XSRSTOption" default="User Specific"/>
			<xsd:element name="userModifiable" type="xsd:boolean" default="true"/>
			<xsd:element name="ipAddr1" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="16"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="port1" type="xsd:nonNegativeInteger" default="2000"/>
			<xsd:element name="ipAddr2" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="16"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="port2" type="xsd:nonNegativeInteger" default="2000" minOccurs="0"/>
			<xsd:element name="ipAddr3" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="16"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="port3" type="xsd:nonNegativeInteger" default="2000" minOccurs="0"/>
			<xsd:element name="certificate" type="axl:String4096"/>
			<xsd:element name="isSecure" type="xsd:boolean" default="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XSubscribedService">
		<xsd:annotation>
			<xsd:documentation>An entry in the TelecasterSubscribedService table.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:choice>
				<xsd:element name="telecasterService" type="axl:XTelecasterService">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API on adds and updates.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="telecasterServiceName" type="axl:String100"/>
			</xsd:choice>
			<xsd:element name="name" type="axl:String100"/>
			<xsd:element name="url" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="512"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="urlButtonIndex" type="xsd:nonNegativeInteger" nillable="false" minOccurs="0"/>
			<xsd:element name="urlLabel" type="axl:String50" minOccurs="0"/>
			<xsd:element name="urlLabelAscii" type="axl:String100" minOccurs="0"/>
			<xsd:element name="serviceNameAscii" type="axl:String100" minOccurs="0"/>
			<xsd:element name="phoneService" type="axl:XPhoneService" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="phoneServiceCategory" type="axl:XPhoneServiceCategory" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="vendor" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="version" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="priority" type="xsd:int" default="50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only. Value should be between 1 and 100</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XTelecasterService">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String100" nillable="false"/>
			<xsd:element name="description" type="axl:String1024" minOccurs="0"/>
			<xsd:element name="templateURL" nillable="false">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="512"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XT1PortList">
		<xsd:sequence>
			<xsd:element name="port" type="axl:XT1Port" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XT1Port">
		<xsd:annotation>
			<xsd:documentation>A T1Port is a T1 Time Slot.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="axl:XAnalogPort">
				<xsd:sequence minOccurs="0">
					<xsd:element name="callerId" type="axl:XCallerID"/>
					<xsd:element name="endpointId" type="axl:String128" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="XTrunkInfo">
		<xsd:annotation>
			<xsd:documentation>Collection of trunk information.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="kind" type="axl:XTrunk">
				<xsd:annotation>
					<xsd:documentation>What kind of trunk this is (Ground Start, Loop Start, POTS, etc.).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="level" type="axl:XTrunkDirection">
				<xsd:annotation>
					<xsd:documentation>The trunk level (e.g., DAL).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="direction" type="axl:XTrunkDirection">
				<xsd:annotation>
					<xsd:documentation>Inbound, Outbound, or Bothways.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="pad">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rx" type="axl:XTrunkPad">
							<xsd:annotation>
								<xsd:documentation>Receive pad.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="tx" type="axl:XTrunkPad">
							<xsd:annotation>
								<xsd:documentation>Transmit pad.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XUserGroupMember">
		<xsd:annotation>
			<xsd:documentation>User Group Member</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="user" type="axl:XUser" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="userId" type="xsd:string" nillable="false"/>
		</xsd:choice>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XUserGroup">
		<xsd:annotation>
			<xsd:documentation>User Group</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:UniqueName128" nillable="false"/>
			<xsd:element name="members" nillable="true" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="member" type="axl:XUserGroupMember" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XUser">
		<xsd:sequence>
			<xsd:element name="firstname" type="xsd:string" minOccurs="0"/>
			<xsd:element name="lastname" type="xsd:string"/>
			<xsd:element name="userid" type="xsd:string"/>
			<xsd:element name="password" type="xsd:string" minOccurs="0"/>
			<xsd:element name="pin" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="0"/>
						<xsd:maxLength value="127"/>
						<xsd:pattern value="(\d{5,127})*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="telephoneNumber" type="axl:XDirectoryNumber" minOccurs="0"/>
			<xsd:element name="extension" type="axl:XDirectoryNumber" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="department" type="xsd:string" minOccurs="0"/>
			<xsd:element name="manager" type="xsd:string" minOccurs="0"/>
			<xsd:element name="userLocale" type="axl:XUserLocale" minOccurs="0"/>
			<xsd:element name="associatedDevices" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Also known as controlled devices.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="device" type="axl:String50" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of device.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="primaryExtension" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Only DNs associated with the associatedDevices of the  User can be used as primary extension.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="pattern" type="axl:XDirectoryNumber" nillable="false">
							<xsd:annotation>
								<xsd:documentation>DN or Pattern</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="routePartitionName" type="axl:String50" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Route Partition to which the DN is associated.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="associatedPC" type="xsd:string" minOccurs="0"/>
			<xsd:element name="associatedGroups" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-Only.These groups automatically get added once the user is associated with a directory group.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="userGroup" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="name" type="axl:String100" nillable="false">
										<xsd:annotation>
											<xsd:documentation>Name of User Group</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
									<xsd:element name="userRoles" nillable="true" minOccurs="0" maxOccurs="unbounded">
										<xsd:complexType>
											<xsd:sequence minOccurs="0">
												<xsd:element name="userRole" nillable="true" minOccurs="0" maxOccurs="unbounded">
													<xsd:annotation>
														<xsd:documentation>Name of the User Role associated with the user group.</xsd:documentation>
													</xsd:annotation>
													<xsd:complexType>
														<xsd:simpleContent>
															<xsd:extension base="axl:String100">
																<xsd:attribute name="uuid" type="axl:XUUID"/>
															</xsd:extension>
														</xsd:simpleContent>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="uuid" type="axl:XUUID"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="enableCTI" type="xsd:boolean" default="true" minOccurs="0"/>
			<xsd:element name="digestCredentials" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="iaqExtension" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated in Seadragon</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="phoneProfiles" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:choice>
							<xsd:element name="profile" type="axl:XPhoneProfile" nillable="false" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>The complete profile object.  Only the "uuid" attribute is used by the AXL API.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="profileName" type="xsd:string" nillable="false" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>The profile name.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="enableMobility" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="enableMobileVoiceAccess" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
			<xsd:element name="maxDeskPickupWaitTime" type="xsd:unsignedLong" default="10000" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Maximum wait time for Desk Pickup must be a number in the range 0 to 30000.Not Nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="remoteDestinationLimit" type="xsd:unsignedShort" default="4" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Remote Destination Limit must be a number in the range 1 to 10. Not Nullable.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="associatedRemoteDestinationProfiles" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-Only.These groups automatically get added once the user is associated with a Remote Destination Profile.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="remoteDestinationProfile" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of the remoteDestinationProfile</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType/>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="associatedAccessLists" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This field has been deprecated.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="accessList" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of the accessList</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType/>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="passwordCredentials" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only. These groups get automatically added once an user is added.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:choice minOccurs="0">
							<xsd:element name="pwdCredPolicy" type="axl:XUUID">
								<xsd:annotation>
									<xsd:documentation>Only uuid can be accepted.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="pwdCredPolicyName" type="axl:String50"/>
						</xsd:choice>
						<xsd:element name="pwdCredUserCantChange" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pwdCredUserMustChange" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pwdCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pwdCredTimeChanged" type="xsd:string" minOccurs="0"/>
						<xsd:element name="pwdCredTimeAdminLockout" type="xsd:string" minOccurs="0"/>
						<xsd:element name="pwdCredLockedByAdministrator" type="xsd:boolean" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="pinCredentials" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-only. These groups get automatically added once an user is added. This tag is not valid for an application user.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:choice minOccurs="0">
							<xsd:element name="pinCredPolicy" type="axl:XUUID">
								<xsd:annotation>
									<xsd:documentation>Only uuid can be accepted.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="pinCredPolicyName" type="axl:String50"/>
						</xsd:choice>
						<xsd:element name="pinCredUserCantChange" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pinCredUserMustChange" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pinCredDoesNotExpire" type="xsd:boolean" minOccurs="0"/>
						<xsd:element name="pinCredTimeChanged" type="xsd:string" minOccurs="0"/>
						<xsd:element name="pinCredTimeAdminLockout" type="xsd:string" minOccurs="0"/>
						<xsd:element name="pinCredLockedByAdministrator" type="xsd:boolean" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="primaryDevice" type="axl:String50" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Primary Device for mobility users</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="associatedTodAccess" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read-Only. List of the todAccess entries associated with this EndUser.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence minOccurs="0">
						<xsd:element name="todAccess" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Name of the todAccess.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="status" type="xsd:positiveInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read Only</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XVendorConfig">
		<xsd:sequence>
			<xsd:any namespace="##local" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- vg224 gateway starts -->
	<xsd:complexType name="XVG224">
		<xsd:annotation>
			<xsd:documentation>The generic MGCP follows the IOS Model, but uses more generic terminology to describe the MGCP's structure.

All MGCPs have 1..n UNITs, each which contains 1..n SUBUNITs, each which contains 1..n ENDPOINTs.  ENDPOINTs are (really, contain) a DEVICE.

In the IOS model, the terminology would be SLOTs, VICs, and PORTs.  </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="domainName" type="axl:String64"/>
			<xsd:element name="description" type="axl:String100" minOccurs="0"/>
			<xsd:element name="product" type="axl:XProduct"/>
			<xsd:element name="protocol" type="axl:XDeviceProtocol"/>
			<xsd:element name="model" type="axl:XModel">
				<xsd:annotation>
					<xsd:documentation>Read-only.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="callManagerGroup" type="axl:XCallManagerGroup">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callManagerGroupName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="units" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The units element is optional when a new VG224 is being added  and can be added using updateVG224Gateway.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="unit">
							<xsd:annotation>
								<xsd:documentation>In the IOS model, UNIT corresponds to a SLOT (Slot Module).</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="product" type="axl:XMGCPSlotModule"/>
									<xsd:element name="subunits" minOccurs="0">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="subunit">
													<xsd:complexType>
														<xsd:annotation>
															<xsd:documentation>In the IOS model, SUBUNIT corresponds to a VIC, and a VIC contains 1 or more PORTs.</xsd:documentation>
														</xsd:annotation>
														<xsd:sequence>
															<xsd:element name="product" type="axl:XMGCPVic"/>
															<xsd:element name="endpoints" minOccurs="0">
																<xsd:complexType>
																	<xsd:annotation>
																		<xsd:documentation>The max attribute identifies the maximum number of endpoints this endpoint list is allowed.</xsd:documentation>
																	</xsd:annotation>
																	<xsd:sequence>
																		<xsd:element name="endpoint" maxOccurs="unbounded">
																			<xsd:complexType>
																				<xsd:annotation>
																					<xsd:documentation>In the IOS model, ENDPOINT corresponds to a PORT inside a VIC.</xsd:documentation>
																				</xsd:annotation>
																				<xsd:complexContent>
																					<xsd:extension base="axl:XDevice">
																						<xsd:sequence minOccurs="0">
																							<xsd:element name="lines" minOccurs="0">
																								<xsd:complexType>
																									<xsd:choice>
																										<xsd:element name="line" type="axl:XLine" maxOccurs="unbounded"/>
																										<xsd:element name="lineIdentifier" type="axl:XNumplanIdentifier" maxOccurs="unbounded"/>
																									</xsd:choice>
																								</xsd:complexType>
																							</xsd:element>
																							<xsd:sequence minOccurs="0">
																								<xsd:annotation>
																									<xsd:documentation>These tags are applicable only for MGCP.</xsd:documentation>
																								</xsd:annotation>
																								<xsd:element name="packetCaptureMode" type="axl:XPacketCaptureMode" default="None" minOccurs="0"/>
																								<xsd:element name="packetCaptureDuration" type="xsd:positiveInteger" default="60" minOccurs="0"/>
																								<xsd:element name="transmitUTF8" type="xsd:boolean" nillable="false" minOccurs="0"/>
																								<xsd:element name="ports" minOccurs="0">
																									<xsd:annotation>
																										<xsd:documentation>The list of ports on the gateway.</xsd:documentation>
																									</xsd:annotation>
																									<xsd:complexType>
																										<xsd:annotation>
																											<xsd:documentation>List of analog ports on an analog gateway.</xsd:documentation>
																										</xsd:annotation>
																										<xsd:sequence>
																											<xsd:element name="port" maxOccurs="unbounded">
																												<xsd:complexType>
																													<xsd:annotation>
																														<xsd:documentation>An analog port on an analog gateway. The portNumber attribute  identifies the ordinal value of the port in the gateway.</xsd:documentation>
																													</xsd:annotation>
																													<xsd:sequence>
																														<xsd:element name="unattendedPort" type="xsd:boolean" default="false" nillable="false" minOccurs="0"/>
																														<xsd:element name="trunkDirection" type="axl:XTrunkDirection"/>
																														<xsd:sequence minOccurs="0">
																															<xsd:annotation>
																																<xsd:documentation>For Gorund Start/Loop Start type of endpoint.</xsd:documentation>
																															</xsd:annotation>
																															<xsd:element name="attendantDN" type="axl:XDirectoryNumber"/>
																														</xsd:sequence>
																														<xsd:sequence minOccurs="0">
																															<xsd:annotation>
																																<xsd:documentation>For POTS type of endpoint.</xsd:documentation>
																															</xsd:annotation>
																															<xsd:element name="prefixDN" type="axl:XDirectoryNumber" minOccurs="0"/>
																															<xsd:element name="numDigits" type="xsd:nonNegativeInteger" nillable="false"/>
																															<xsd:element name="expectedDigits" type="xsd:nonNegativeInteger"/>
																															<xsd:element name="smdiPortNumber" type="xsd:nonNegativeInteger">
																																<xsd:annotation>
																																	<xsd:documentation>Not used by T1 Ports.</xsd:documentation>
																																</xsd:annotation>
																															</xsd:element>
																														</xsd:sequence>
																													</xsd:sequence>
																													<xsd:attribute name="uuid" type="axl:XUUID"/>
																													<xsd:attribute name="portNumber" type="xsd:positiveInteger" use="required"/>
																												</xsd:complexType>
																											</xsd:element>
																										</xsd:sequence>
																									</xsd:complexType>
																								</xsd:element>
																							</xsd:sequence>
																							<xsd:element name="userLocale" type="axl:XUserLocale" nillable="true" minOccurs="0"/>
																							<xsd:element name="networkLocale" type="axl:XCountry" nillable="true" minOccurs="0"/>
																							<xsd:sequence minOccurs="0">
																								<xsd:annotation>
																									<xsd:documentation>These tags are applicable only for SCCP.</xsd:documentation>
																								</xsd:annotation>
																								<xsd:element name="isActive" type="xsd:boolean" nillable="false" minOccurs="0">
																									<xsd:annotation>
																										<xsd:documentation>This tag determines if the newly added phone is active to determine consumption of license. If set to false the license units will not be consumed.</xsd:documentation>
																									</xsd:annotation>
																								</xsd:element>
																								<xsd:element name="unattendedPort" type="xsd:boolean" nillable="false" minOccurs="0"/>
																								<xsd:choice minOccurs="0">
																									<xsd:element name="subscribeCallingSearchSpace" type="axl:XCallingSearchSpace" nillable="true">
																										<xsd:annotation>
																											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																										</xsd:annotation>
																									</xsd:element>
																									<xsd:element name="subscribeCallingSearchSpaceName" type="axl:String50" nillable="true"/>
																								</xsd:choice>
																								<xsd:element name="allowCtiControlFlag" type="xsd:boolean" nillable="false" minOccurs="0"/>
																								<xsd:element name="remoteDevice" type="xsd:boolean" nillable="false" minOccurs="0"/>
																								<xsd:choice minOccurs="0">
																									<xsd:element name="phoneTemplate" type="axl:XPhoneTemplate">
																										<xsd:annotation>
																											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																										</xsd:annotation>
																									</xsd:element>
																									<xsd:element name="phoneTemplateName" type="axl:String50" nillable="false"/>
																								</xsd:choice>
																								<xsd:choice>
																									<xsd:element name="presenceGroup" type="axl:XPresenceGroup" nillable="false">
																										<xsd:annotation>
																											<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
																										</xsd:annotation>
																									</xsd:element>
																									<xsd:element name="presenceGroupName" type="axl:String50" nillable="false"/>
																								</xsd:choice>
																								<xsd:element name="ignorePresentationIndicators" type="xsd:boolean" nillable="false" minOccurs="0">
																									<xsd:annotation>
																										<xsd:documentation>The new Ignore Presentation Indicators flag for Hospitality Feature is required for most phones and device profiles.Not Nullable.</xsd:documentation>
																									</xsd:annotation>
																								</xsd:element>
																								<xsd:element name="deviceMobilityMode" type="axl:XStatus" default="Default" nillable="false" minOccurs="0">
																									<xsd:annotation>
																										<xsd:documentation>Specifies if the phone is configured for device mobility feature or not</xsd:documentation>
																									</xsd:annotation>
																								</xsd:element>
																								<xsd:element name="hlogStatus" type="axl:XStatus" nillable="false" minOccurs="0"/>
																								<xsd:element name="ownerUserId" type="axl:String255" nillable="true" minOccurs="0"/>
																							</xsd:sequence>
																						</xsd:sequence>
																						<xsd:attribute name="index" type="xsd:nonNegativeInteger" use="required"/>
																					</xsd:extension>
																				</xsd:complexContent>
																			</xsd:complexType>
																		</xsd:element>
																	</xsd:sequence>
																	<xsd:attribute name="max" type="xsd:positiveInteger"/>
																</xsd:complexType>
															</xsd:element>
														</xsd:sequence>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
										<!--VG224 SubUnits Schema Ends-->
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
							<!--VG224 Unit Schema Ends-->
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
				<!--VG224 Units Schema Ends-->
			</xsd:element>
			<xsd:element name="vendorConfig" type="axl:XVendorConfig" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>It contains Product Specific Configuration Information like Fax mode, Modem Passthorugh, etc.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="versionStamp" type="axl:String128" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Read only. UUID that is changed each time the VG224 is updated.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<!-- vg224 gateway ends -->
	<xsd:complexType name="XVoiceMailPilot">
		<xsd:sequence minOccurs="0">
			<xsd:element name="dirn" type="axl:XDirectoryNumber" nillable="true"/>
			<xsd:element name="description" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="CSS" type="axl:XCallingSearchSpace" nillable="true">
					<xsd:annotation>
						<xsd:documentation>Only the UUID attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="CSSName" type="axl:String50" nillable="true">
					<xsd:annotation>
						<xsd:documentation>The name of this Voice Mail Pilot's calling search space.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false"/>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XVoiceMailProfile">
		<xsd:sequence minOccurs="0">
			<xsd:element name="name" type="axl:String50" nillable="false"/>
			<xsd:element name="description" type="axl:String50" nillable="true" minOccurs="0"/>
			<xsd:element name="isDefault" type="xsd:boolean" default="false" nillable="false"/>
			<xsd:element name="voiceMailboxMask" type="xsd:string" nillable="true" minOccurs="0"/>
			<xsd:element name="voiceMailPilot" type="axl:XVoiceMailPilot" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Only the UUID attribute is read by the AXL API.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="uuid" type="axl:XUUID"/>
	</xsd:complexType>
	<xsd:complexType name="XPilotPoint">
		<xsd:annotation>
			<xsd:documentation>Pilot Point</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="axl:UniqueName128">
				<xsd:annotation>
					<xsd:documentation>The Pilot Point name.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="devicePool" type="axl:XDevicePool">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="devicePoolName" type="axl:UniqueString50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="routePartition" type="axl:XRoutePartition">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="routePartitionName" type="axl:String50"/>
			</xsd:choice>
			<xsd:choice minOccurs="0">
				<xsd:element name="callingSearchSpace" type="axl:XCallingSearchSpace">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="callingSearchSpaceName" type="axl:String50"/>
			</xsd:choice>
			<xsd:element name="pilotNumber" type="xsd:string"/>
			<xsd:choice minOccurs="0">
				<xsd:element name="location" type="axl:XLocation">
					<xsd:annotation>
						<xsd:documentation>Only the uuid attribute is read by the AXL API.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="locationName" type="axl:String50"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Simple Types                                                -->
	<!-- *********************************************************** -->
	<xsd:simpleType name="XDirectoryNumber">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XIPAddress">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\d?\d?\d\.\d?\d?\d\.\d?\d?\d\.\d?\d?\d"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XKeyString">
		<xsd:annotation>
			<xsd:documentation>A string with some restrictions</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:whiteSpace value="collapse"/>
			<xsd:pattern value="[\s\i\d\.\-]+"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XMacAddress">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9]|[a-f]|[A-F]){12}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XUUID">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="\{........-....-....-....-............\}"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="XMOHAudioSourceId">
		<xsd:restriction base="xsd:nonNegativeInteger">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="51"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- *********************************************************** -->
	<!-- Rule Blocks                                                 -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XRuleInstance">
		<xsd:sequence>
			<xsd:element name="name" type="axl:XKeyString"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="author" type="xsd:Name" minOccurs="0"/>
			<xsd:element name="rules">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rule" type="axl:XRule" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XRule">
		<xsd:annotation>
			<xsd:documentation>The root of all rules.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" nillable="false">
				<xsd:annotation>
					<xsd:documentation>The URI name of the  rule. For example: xmlrule://cisco.com/public/isAnInteger</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="xmlrule://\S+"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="author" type="xsd:string" minOccurs="0"/>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>The "type" choice.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="boolean" type="axl:XBooleanRule">
					<xsd:annotation>
						<xsd:documentation>The input must be a boolean.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="date" type="axl:XDateRule">
					<xsd:annotation>
						<xsd:documentation>The input must conform to a valid date format.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="float" type="axl:XFloatRule">
					<xsd:annotation>
						<xsd:documentation>The input must be a floating-point number.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="integer" type="axl:XIntegerRule">
					<xsd:annotation>
						<xsd:documentation>The input must be an integer.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="list" type="axl:XListRule">
					<xsd:annotation>
						<xsd:documentation>The input is a single key compared to a list.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="script" type="axl:XScriptRule">
					<xsd:annotation>
						<xsd:documentation>Execute a Javascript fragment.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="string" type="axl:XStringRule">
					<xsd:annotation>
						<xsd:documentation>The input must be a string (least restrictive).</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="uri" type="axl:XURIRule">
					<xsd:annotation>
						<xsd:documentation>The input must conform to a valid URI format.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="dynamicList" type="axl:XDynamicListRule"/>
			</xsd:choice>
			<xsd:element name="nullable" type="xsd:boolean" nillable="false" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Is a null value acceptable for this rule?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="subrule" type="axl:XRule" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>It is possible that a rule might require additional steps of validation. To guard against loops, these subrules must be defined within this rule rather than allowing the rule to reference other rules (however, see XDisplayInstanceParameter).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="enterpriseDefaultName" type="axl:XKeyString" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The name of the enterprise parameter to lookup in the database and use its value as this rule's default value. Overrides the hard-coded default if defined.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XIntegerRule">
		<xsd:annotation>
			<xsd:documentation>The integer rule determines if the input is a valid integer.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the default value if none is supplied? Can either be a decimal or hexadecimal value.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="min" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the minimum acceptable value?</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:element name="max" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the maximum acceptable value?</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="((0x[0\-9a\-fA\-F]+)|([\-\d]\d*))*"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XStringRule">
		<xsd:annotation>
			<xsd:documentation>The string rule determines if the value is a valid string.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The default value to return if none is supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="regexp" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A regular expression to compare the string against.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="length" type="xsd:integer" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The maximum length allowed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="trimWhiteSpace" type="xsd:boolean" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A flag which states the rule processors should trim/ignore white space from the input before all other processing.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="onValidationErrorShowMessage" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XFloatRule">
		<xsd:annotation>
			<xsd:documentation>The float rule determines if a value is a valid floating point number.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" type="xsd:float" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The default value if none is supplied.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="min" type="xsd:float" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The minimum acceptable value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="max" type="xsd:float" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The maximum acceptable value.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XListRule">
		<xsd:annotation>
			<xsd:documentation>The List Rule expresses the correct values of a list (key/value pairs), what the default key value is, and if selecting multiple keys is valid for the list.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="defaultKey" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>What is the default key?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="multiKey" type="xsd:boolean" default="false">
				<xsd:annotation>
					<xsd:documentation>Can multiple keys be selected?</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="options">
				<xsd:annotation>
					<xsd:documentation>Each option is expressed as a key/value pair. Rule processors should only compare against the key attributes. The value of each option is simply for display.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="option" type="axl:XListRuleOption" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XListRuleOption" mixed="false">
		<xsd:attribute name="key" type="axl:XKeyString" use="required"/>
		<xsd:attribute name="text" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="XDynamicListRule">
		<xsd:annotation>
			<xsd:documentation>The Dynamic list rule determines the table and columns to build the list from</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="defaultKey" type="xsd:string" minOccurs="0"/>
			<xsd:element name="tableName" type="axl:Name50" nillable="false"/>
			<xsd:element name="keyFieldName">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="integerFieldName" type="axl:Name50"/>
						<xsd:element name="stringFieldName" type="axl:Name50"/>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="descFieldName" type="axl:Name50"/>
			<xsd:element name="Multikey" type="xsd:boolean"/>
			<xsd:element name="filter" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XDateRule">
		<xsd:annotation>
			<xsd:documentation>Directs the rule processor to validate the input as a date. Valid date formats are Any, Long (March 15, 2001), Short-US (the default, 03/15/01), and Short-EU (15/03/01).</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="dateFormat" default="Short-US" minOccurs="0">
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Any"/>
						<xsd:enumeration value="Long"/>
						<xsd:enumeration value="Short-US"/>
						<xsd:enumeration value="Short-EU"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
			<xsd:choice minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The default is either a specific date (default), or automatically defaulted to today (defaultNow).</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="default" type="xsd:date"/>
				<xsd:element name="defaultNow" type="xsd:boolean"/>
			</xsd:choice>
			<xsd:element name="min" type="xsd:date" minOccurs="0"/>
			<xsd:element name="max" type="xsd:date" minOccurs="0"/>
			<xsd:element name="restrictTo" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Should the rule make sure that the date is not in the future?</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Past"/>
						<xsd:enumeration value="Future"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XBooleanRule">
		<xsd:sequence>
			<xsd:element name="default" type="xsd:boolean"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XScriptRule">
		<xsd:annotation>
			<xsd:documentation>The input is evaluated by a fragment of JavaScript.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="comment" type="xsd:string"/>
			<xsd:element name="script">
				<xsd:annotation>
					<xsd:documentation>The JavaScript fragment used to evaluate the input. The fragment should be cordoned off by CDATA tags. The fragment must contain a entry-point function with the following prototype:

Array AXLScriptRuleEntryPoint(String inputString)

The output is an Array of two values. Array[0] is a boolean value and indicates success (true) or failure (false). Array[1] contains the result of the script. If successful, it should contain a copy of the inputString or other valid return value. If not successful, it should contain an error message.
</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:whiteSpace value="preserve"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XURIRule">
		<xsd:annotation>
			<xsd:documentation>The URI rule determines if a value is a valid URI.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="default" type="xsd:anyURI" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="XRuleError">
		<xsd:annotation>
			<xsd:documentation>The XML format for a rule error that might be thrown by a rule processor.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="invalidValue" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Contains the value of the original input.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ruleBroken" type="xsd:Name">
				<xsd:annotation>
					<xsd:documentation>The name of the rule broken.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="errorCode" type="xsd:integer" default="0">
				<xsd:annotation>
					<xsd:documentation>An integer error code.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="errorText" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Error message generated by rule.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Service Dependency objects                                 -->
	<!-- *********************************************************** -->
	<xsd:complexType name="XServiceDependency">
		<xsd:annotation>
			<xsd:documentation>This lists what services that the specified service is dependent on.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="xsd:anyURI">
				<xsd:annotation>
					<xsd:documentation>The URI of this service dependency. For example: xmldi://cisco.com/serviceDependency/0.  The last part of the URI is the enum value of this service.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="dependencies">
				<xsd:annotation>
					<xsd:documentation>A list of zero or more services that this service depends on.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="dependency" type="xsd:nonNegativeInteger" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>This is the value of the 'enum' column from the TypeService table.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="help" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Help text. Optional.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="warning" type="axl:String1024" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The warning message. Optional</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="service" type="xsd:nonNegativeInteger" use="required">
			<xsd:annotation>
				<xsd:documentation>This is the service we are listing dependencies for.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<!-- *********************************************************** -->
	<!-- Simple String/Name Restrictions                             -->
	<!-- *********************************************************** -->
	<xsd:simpleType name="Name50">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Name128">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Name255">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String16">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="16"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String32">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="32"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String50">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String64">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="64"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String100">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String128">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String255">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String1024">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="1024"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="String4096">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="4096"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueName50">
		<xsd:annotation>
			<xsd:documentation>The UNIQUE restrictions are simply flags to the user that in the database this value is unique.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueName128">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueName255">
		<xsd:restriction base="xsd:Name">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString32">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="32"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString50">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="50"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString100">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString128">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString255">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UniqueString1024">
		<xsd:restriction base="xsd:string">
			<xsd:maxLength value="1024"/>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
