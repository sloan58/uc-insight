<?xml version="1.0" encoding="UTF-8" ?>
<dt-button library="Buttons">
	<name>csvHtml5</name>
	<summary>Create and save a CSV file that contains the data from the table (HTML5)</summary>
	<since>1.0.0</since>

	<requires>
		* Buttons' _HTML5 export button_ plug-in.
		* A browser that supports local file saving (IE10+, Chrome, Safari, Firefox, Opera)
	</requires>

	<description>
		This button provides the end user with the ability to save the table's data into a locally created Comma Separated Values (CSV) file. That file can then be used by variety of programs including spreadsheet and data analysis applications.

		This button requires a reasonably modern browser in order to operate (IE8 and 9 are not supported). For older browsers, the `b-button csvFlash` button provides similar file creation and save options using the Flash plug-in. The `b-button csv` button can be used to automatically select between this and the `b-button csvFlash` buttons based on the browser's capabilities.

		**Note on Safari support**: Safari will not download generated files ([see WebKit bug 102914](https://bugs.webkit.org/show_bug.cgi?id=102914)), as such, the generated CSV file will be shown in a new tab. End users can use the browser's "Save as" option to download the file.
	</description>


	<option type="string" name="text" default="CSV">
		The button's display text. The text can be configured using this option (see `b-init buttons.buttons.text`) or the `buttons.copy` option of the DataTables `dt-init language` object.
	</option>

	<option type="string" name="className" default="buttons-csv buttons-html5">
		The button's class name. See `b-init buttons.buttons.className` for details.
	</option>

	<option type="function" name="action">
		Create and save a CSV file.
	</option>

	<option type="string" name="fieldSeparator" default=",">
		The character(s) used to separate fields in the plain text representation of the table that is copied to the system's clipboard.		
	</option>

	<option type="string" name="fieldBoundary" default='"'>
		The character(s) used to enclose each field in the plain text representation of the table that is copied to the system's clipboard. This is automatically added at the start and end of each cell's data.
	</option>

	<option type="object" name="exportOptions" default="{}">
		Select the data to be gathered from the DataTable for export. This includes options for which columns, rows, ordering and search. Please see the `b-api buttons.exportData()` method for full details - the object given by this parameter is passed directly into that action to gather the required data.
	</option>

	<option type="boolean" name="header" default="true">
		Indicate if the table header should be included in the exported data or not.
	</option>

	<option type="boolean" name="footer" default="false">
		Indicate if the table footer should be included in the exported data or not.
	</option>

	<option type="string" name="title" default="*">
		File name to give the created file (plus the extension defined by the `extension` option). The special character `*` is automatically replaced with the value read from the host document's `-tag title` tag.
	</option>

	<option type="string" name="extension" default=".csv">
		The extension to give the created file name.
	</option>


	<example title="DataTables initialisation: Use the HTML5 CSV button"><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		'csvHtml5'
	]
} );

]]></example>

	<example title="DataTables initialisation: Use the `b-button csv` button type to automatically select between the Flash and HTML button options."><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		'csv'
	]
} );

]]></example>

	<example title="DataTables initialisation: Use the `exportOptions` to save all data, regardless of filtering"><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		{
			extend: 'csvHtml5',
			text: 'Copy all data',
			exportOptions: {
				modifier: {
					search: 'none'
				}
			}
		}
	]
} );

]]></example>
</dt-button>